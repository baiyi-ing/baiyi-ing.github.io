<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>随意</title>
  
  
  <link href="http://baiyi-ing.github.io/atom.xml" rel="self"/>
  
  <link href="http://baiyi-ing.github.io/"/>
  <updated>2024-04-20T09:31:44.168Z</updated>
  <id>http://baiyi-ing.github.io/</id>
  
  <author>
    <name>白依</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>轻量级框架Cookie使用方法</title>
    <link href="http://baiyi-ing.github.io/2024/04/20/%E8%BD%BB%E9%87%8F%E7%BA%A7%E6%A1%86%E6%9E%B6Cookie%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <id>http://baiyi-ing.github.io/2024/04/20/%E8%BD%BB%E9%87%8F%E7%BA%A7%E6%A1%86%E6%9E%B6Cookie%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</id>
    <published>2024-04-20T09:25:53.000Z</published>
    <updated>2024-04-20T09:31:44.168Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装相关插件的命令"><a href="#安装相关插件的命令" class="headerlink" title="安装相关插件的命令"></a>安装相关插件的命令</h1><p>在JavaScript中，<code>js-cookie</code> 是一个简单的、轻量级的处理 cookies 的库，它可以帮助开发者更容易地在浏览器中管理 cookies。以下是如何在 JavaScript 中使用 <code>js-cookie</code> 的一个基本示例：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//bash安装</span></span><br><span class="line">npm install js-cookie --save</span><br><span class="line"><span class="comment">//或者</span></span><br><span class="line">yarn add js-cookie</span><br></pre></td></tr></table></figure><h1 id="引入相关的包"><a href="#引入相关的包" class="headerlink" title="引入相关的包"></a>引入相关的包</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Cookies</span> <span class="keyword">from</span> <span class="string">&#x27;js-cookie&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="增删改查Cookie"><a href="#增删改查Cookie" class="headerlink" title="增删改查Cookie"></a>增删改查Cookie</h1><p>然后，在您的 JavaScript 代码中，您可以使用以下方式来设置、获取和删除 cookies：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置一个 cookie</span></span><br><span class="line"><span class="title class_">Cookies</span>.<span class="title function_">set</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;value&#x27;</span>);</span><br><span class="line"><span class="comment">// 获取一个 cookie</span></span><br><span class="line"><span class="keyword">let</span> value = <span class="title class_">Cookies</span>.<span class="title function_">get</span>(<span class="string">&#x27;name&#x27;</span>); <span class="comment">// =&gt; &#x27;value&#x27;</span></span><br><span class="line"><span class="comment">// 获取所有的 cookies</span></span><br><span class="line"><span class="keyword">let</span> allCookies = <span class="title class_">Cookies</span>.<span class="title function_">get</span>(); <span class="comment">// =&gt; &#123; name: &#x27;value&#x27; &#125;</span></span><br><span class="line"><span class="comment">// 设置一个带有效期的 cookie（有效期3天）</span></span><br><span class="line"><span class="title class_">Cookies</span>.<span class="title function_">set</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;value&#x27;</span>, &#123; <span class="attr">expires</span>: <span class="number">3</span> &#125;);</span><br><span class="line"><span class="comment">// 设置一个带有路径的 cookie</span></span><br><span class="line"><span class="title class_">Cookies</span>.<span class="title function_">set</span>(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;value&#x27;</span>, &#123; <span class="attr">path</span>: <span class="string">&#x27;&#x27;</span> &#125;);</span><br><span class="line"><span class="comment">// 删除一个 cookie</span></span><br><span class="line"><span class="title class_">Cookies</span>.<span class="title function_">remove</span>(<span class="string">&#x27;name&#x27;</span>);</span><br></pre></td></tr></table></figure><p><strong>注意：js-cookie</strong> 的 API 设计得非常直观，使得操作 cookies 变得非常简单。您可以根据需要设置 cookie 的路径、域、有效期等属性。同时，由于 <code>js-cookie</code> 是一个第三方库，使用时应当确保它符合您的项目的安全性和隐私政策要求。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;安装相关插件的命令&quot;&gt;&lt;a href=&quot;#安装相关插件的命令&quot; class=&quot;headerlink&quot; title=&quot;安装相关插件的命令&quot;&gt;&lt;/a&gt;安装相关插件的命令&lt;/h1&gt;&lt;p&gt;在JavaScript中，&lt;code&gt;js-cookie&lt;/code&gt; 是一个简单的</summary>
      
    
    
    
    
    <category term="vue3" scheme="http://baiyi-ing.github.io/tags/vue3/"/>
    
    <category term="js" scheme="http://baiyi-ing.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>taken增删改查操作</title>
    <link href="http://baiyi-ing.github.io/2024/04/20/taken%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E6%93%8D%E4%BD%9C/"/>
    <id>http://baiyi-ing.github.io/2024/04/20/taken%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E6%93%8D%E4%BD%9C/</id>
    <published>2024-04-20T08:09:37.000Z</published>
    <updated>2024-04-20T08:58:00.592Z</updated>
    
    <content type="html"><![CDATA[<p>右键检查—应用—cookie—Taken</p><p><img src="https://s2.loli.net/2024/04/20/bVSgUWsMJ2tRav1.png" alt="20240420165630.png"></p><p><a href="https://www.bilibili.com/video/BV1Yt4y1p7Z9/?p=15&spm_id_from=pageDriver&vd_source=13d75a1ed6d2a6744eff33f8b08de7b6">增删改查视频</a></p><p><img src="https://s2.loli.net/2024/04/20/fzZ1S8Hx9FChwiR.png" alt="image.png"></p><p><img src="https://s2.loli.net/2024/04/20/RJEVqoY4Svy15l9.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;右键检查—应用—cookie—Taken&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2024/04/20/bVSgUWsMJ2tRav1.png&quot; alt=&quot;20240420165630.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https</summary>
      
    
    
    
    
    <category term="vue3" scheme="http://baiyi-ing.github.io/tags/vue3/"/>
    
    <category term="js" scheme="http://baiyi-ing.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>大型项目的登录验证方法</title>
    <link href="http://baiyi-ing.github.io/2024/04/20/%E5%A4%A7%E5%9E%8B%E9%A1%B9%E7%9B%AE%E7%9A%84%E7%99%BB%E5%BD%95%E9%AA%8C%E8%AF%81%E6%96%B9%E6%B3%95/"/>
    <id>http://baiyi-ing.github.io/2024/04/20/%E5%A4%A7%E5%9E%8B%E9%A1%B9%E7%9B%AE%E7%9A%84%E7%99%BB%E5%BD%95%E9%AA%8C%E8%AF%81%E6%96%B9%E6%B3%95/</id>
    <published>2024-04-20T02:35:36.000Z</published>
    <updated>2024-04-20T07:34:39.925Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写表单组件部分"><a href="#写表单组件部分" class="headerlink" title="写表单组件部分"></a>写表单组件部分</h1><p>一般这个文件写在views或pages文件的login.vue文件中。</p><p>一般使用elementplus中的el-form表单标签，可以写上ruler等属性帮助后期验证。</p><p>然后再标签中有各个小组件el-form-item构成表单的每一项,在每一项中可以添加prop属性进行命名帮助后期在script标签中使用rules进行验证匹配。</p><p>在每一项中再写入想要的输入标签el-input。</p><p><strong>简单登录框架</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">ref</span>=<span class="string">&quot;loginRef&quot;</span> <span class="attr">:model</span>=<span class="string">&quot;loginForm&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;rules&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="comment">&lt;!-- 表单字段 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handleSubmit&quot;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>高级点的</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">el-form</span> <span class="attr">ref</span>=<span class="string">&quot;loginRef&quot;</span> <span class="attr">:model</span>=<span class="string">&quot;loginForm&quot;</span> <span class="attr">:rules</span>=<span class="string">&quot;rules&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">prop</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">v-model</span>=<span class="string">&quot;loginForm.username&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">size</span>=<span class="string">&quot;large&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">auto-complete</span>=<span class="string">&quot;off&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">placeholder</span>=<span class="string">&quot;账号&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="comment">&lt;!-- 使用element-plus中的前缀插槽，插入小图标,可以添加属性show-password添加小眼睛- --&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">template</span> #<span class="attr">prefix</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &gt;</span><span class="tag">&lt;<span class="name">svg-icon</span> <span class="attr">icon-class</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;el-input__icon input-icon&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          /&gt;</span><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">prop</span>=<span class="string">&quot;password&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">v-model</span>=<span class="string">&quot;loginForm.password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">type</span>=<span class="string">&quot;password&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">size</span>=<span class="string">&quot;large&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">auto-complete</span>=<span class="string">&quot;off&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">placeholder</span>=<span class="string">&quot;密码&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          @<span class="attr">keyup.enter</span>=<span class="string">&quot;handleLogin&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">show-password</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">template</span> #<span class="attr">prefix</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &gt;</span><span class="tag">&lt;<span class="name">svg-icon</span> <span class="attr">icon-class</span>=<span class="string">&quot;password&quot;</span> <span class="attr">class</span>=<span class="string">&quot;el-input__icon input-icon&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          /&gt;</span><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"> </span></span><br><span class="line"><span class="language-xml">      <span class="comment">&lt;!--rules匹配通过prop--&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">prop</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">el-input</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">v-model</span>=<span class="string">&quot;loginForm.username&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">type</span>=<span class="string">&quot;text&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">size</span>=<span class="string">&quot;large&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">auto-complete</span>=<span class="string">&quot;off&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          <span class="attr">placeholder</span>=<span class="string">&quot;账号&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        &gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="comment">&lt;!-- 使用element-plus前缀插槽，插入小图标,添加属性show-password加小眼睛- --&gt;</span></span></span><br><span class="line"><span class="language-xml">          <span class="tag">&lt;<span class="name">template</span> #<span class="attr">prefix</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">            &gt;</span><span class="tag">&lt;<span class="name">svg-icon</span> <span class="attr">icon-class</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;el-input__icon input-icon&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">          /&gt;</span><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;handleSubmit&quot;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h1 id="第二步引入api中的接口"><a href="#第二步引入api中的接口" class="headerlink" title="第二步引入api中的接口"></a>第二步引入api中的接口</h1><p>在page或者view文件夹中的login.js文件中，引入api中相应的相关文件（一般的地址为api文件夹中的login.js文件中）</p><p>引入接口传递数据的方法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import &#123; login &#125; from &#x27;~/api/&#x27;</span><br></pre></td></tr></table></figure><h1 id="第三步写Script中的表单对象"><a href="#第三步写Script中的表单对象" class="headerlink" title="第三步写Script中的表单对象"></a>第三步写Script中的表单对象</h1><p>在script标签中定义一个接收上面表单的元素</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> form = <span class="title function_">reactive</span>(&#123;</span><br><span class="line">    <span class="attr">username</span>:<span class="string">&quot;&quot;</span>,</span><br><span class="line">    <span class="attr">password</span>:<span class="string">&quot;&quot;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="第四步写Script中定义rules的部分"><a href="#第四步写Script中定义rules的部分" class="headerlink" title="第四步写Script中定义rules的部分"></a>第四步写Script中定义rules的部分</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h1 id="第五步写Script提交登录部分"><a href="#第五步写Script提交登录部分" class="headerlink" title="第五步写Script提交登录部分"></a>第五步写Script提交登录部分</h1><p>简单登录框架</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">setup</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> loginRef = <span class="title function_">ref</span>(<span class="literal">null</span>)</span><br><span class="line">    <span class="keyword">const</span> loginForm = <span class="title function_">ref</span>(&#123;</span><br><span class="line">      <span class="attr">username</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="attr">password</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> rules = &#123;</span><br><span class="line">      <span class="comment">// 表单验证规则</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">handleSubmit</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">      loginRef.<span class="property">value</span>.<span class="title function_">validate</span>(<span class="function">(<span class="params">valid</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (valid) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;表单验证通过，提交数据&#x27;</span>, loginForm.<span class="property">value</span>)</span><br><span class="line">          <span class="comment">//调用运行方法,或者api接口引入的方法,通过表单对象拿到相关数据</span></span><br><span class="line">            <span class="title function_">login</span>(loginForm.<span class="property">username</span>,loginForm.<span class="property">password</span>)</span><br><span class="line">            .<span class="title function_">then</span>(<span class="function"><span class="params">res</span>=&gt;</span>&#123;</span><br><span class="line">                  <span class="comment">//请求成功的结果</span></span><br><span class="line">                  &#125;)</span><br><span class="line">          .<span class="title function_">catch</span>(<span class="function"><span class="params">err</span>=&gt;</span>&#123;</span><br><span class="line">                <span class="comment">//请求失败的结果</span></span><br><span class="line">            &#125;)</span><br><span class="line">          <span class="comment">// 执行提交逻辑</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;表单验证失败&#x27;</span>)</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      loginRef,</span><br><span class="line">      loginForm,</span><br><span class="line">      rules,</span><br><span class="line">      handleSubmit</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>高级点的</strong></p><p>使用proxy调用数据，进行父传子通信。</p><p>使用cookies进行数据保存。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; proxy &#125; = <span class="title function_">getCurrentInstance</span>();</span><br><span class="line"><span class="comment">// 登录提交方法定义</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleLogin</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 使用$refs进行子传父通信</span></span><br><span class="line">  proxy.<span class="property">$refs</span>.<span class="property">loginRef</span>.<span class="title function_">validate</span>(<span class="function">(<span class="params">valid</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (valid) &#123;</span><br><span class="line">      loading.<span class="property">value</span> = <span class="literal">true</span>;</span><br><span class="line">      <span class="comment">// 勾选了需要记住密码设置在 cookie 中设置记住用户名和密码</span></span><br><span class="line">      <span class="keyword">if</span> (loginForm.<span class="property">value</span>.<span class="property">rememberMe</span>) &#123;</span><br><span class="line">        <span class="title class_">Cookies</span>.<span class="title function_">set</span>(<span class="string">&quot;username&quot;</span>, loginForm.<span class="property">value</span>.<span class="property">username</span>, &#123; <span class="attr">expires</span>: <span class="number">30</span> &#125;);</span><br><span class="line">        <span class="title class_">Cookies</span>.<span class="title function_">set</span>(<span class="string">&quot;password&quot;</span>, <span class="title function_">encrypt</span>(loginForm.<span class="property">value</span>.<span class="property">password</span>), &#123;</span><br><span class="line">          <span class="attr">expires</span>: <span class="number">30</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="title class_">Cookies</span>.<span class="title function_">set</span>(<span class="string">&quot;rememberMe&quot;</span>, loginForm.<span class="property">value</span>.<span class="property">rememberMe</span>, &#123; <span class="attr">expires</span>: <span class="number">30</span> &#125;);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 否则移除</span></span><br><span class="line">        <span class="title class_">Cookies</span>.<span class="title function_">remove</span>(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        <span class="title class_">Cookies</span>.<span class="title function_">remove</span>(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        <span class="title class_">Cookies</span>.<span class="title function_">remove</span>(<span class="string">&quot;rememberMe&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 调用action的登录方法</span></span><br><span class="line">      userStore</span><br><span class="line">        .<span class="title function_">login</span>(loginForm.<span class="property">value</span>)</span><br><span class="line">        .<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          router.<span class="title function_">push</span>(&#123; <span class="attr">path</span>: redirect.<span class="property">value</span> || <span class="string">&quot;/&quot;</span> &#125;);</span><br><span class="line">        &#125;)</span><br><span class="line">        .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          loading.<span class="property">value</span> = <span class="literal">false</span>;</span><br><span class="line">          <span class="comment">// 重新获取验证码</span></span><br><span class="line">          <span class="keyword">if</span> (captchaEnabled.<span class="property">value</span>) &#123;</span><br><span class="line">            <span class="title function_">getCode</span>();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>注意：使用element—plus引入报错信息</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">plain</span> @<span class="attr">click</span>=<span class="string">&quot;open1&quot;</span>&gt;</span> Success <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">plain</span> @<span class="attr">click</span>=<span class="string">&quot;open2&quot;</span>&gt;</span> Warning <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">plain</span> @<span class="attr">click</span>=<span class="string">&quot;open3&quot;</span>&gt;</span> Info <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">el-button</span> <span class="attr">plain</span> @<span class="attr">click</span>=<span class="string">&quot;open4&quot;</span>&gt;</span> Error <span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; <span class="title class_">ElNotification</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-plus&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> <span class="title function_">open1</span> = (<span class="params"></span>) =&gt; &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title class_">ElNotification</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">title</span>: <span class="string">&#x27;Success&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">message</span>: <span class="string">&#x27;This is a success message&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> <span class="title function_">open2</span> = (<span class="params"></span>) =&gt; &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title class_">ElNotification</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">title</span>: <span class="string">&#x27;Warning&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">message</span>: <span class="string">&#x27;This is a warning message&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> <span class="title function_">open3</span> = (<span class="params"></span>) =&gt; &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title class_">ElNotification</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">title</span>: <span class="string">&#x27;Info&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">message</span>: <span class="string">&#x27;This is an info message&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">type</span>: <span class="string">&#x27;info&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> <span class="title function_">open4</span> = (<span class="params"></span>) =&gt; &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="title class_">ElNotification</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">title</span>: <span class="string">&#x27;Error&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">message</span>: <span class="string">&#x27;This is an error message&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2024/04/20/Wlor8gcGpX9nKYq.png" alt="image.png"></p><h1 id="第六步定义代理"><a href="#第六步定义代理" class="headerlink" title="第六步定义代理"></a>第六步定义代理</h1><p>有的时候我们会请求失败，在初期过程中，大概概率是代理没有设置好。</p><p>在vite.config.js文件中我们可以设置相关的代理。</p><p>在<a href="https://vitejs.cn/vite3-cn/config/server-options.html#server-proxy">vite官方文档</a>里有提及到相关的使用方法。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">server</span>: &#123;</span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="comment">// 字符串简写写法</span></span><br><span class="line">      <span class="string">&#x27;/foo&#x27;</span>: <span class="string">&#x27;http://localhost:4567&#x27;</span>,</span><br><span class="line">      <span class="comment">// 选项写法</span></span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://jsonplaceholder.typicode.com&#x27;</span>,</span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">rewrite</span>: <span class="function">(<span class="params">path</span>) =&gt;</span> path.<span class="title function_">replace</span>(<span class="regexp">/^\/api/</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">// 正则表达式写法</span></span><br><span class="line">      <span class="string">&#x27;^/fallback/.*&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://jsonplaceholder.typicode.com&#x27;</span>,</span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">rewrite</span>: <span class="function">(<span class="params">path</span>) =&gt;</span> path.<span class="title function_">replace</span>(<span class="regexp">/^\/fallback/</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">// 使用 proxy 实例</span></span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://jsonplaceholder.typicode.com&#x27;</span>,</span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">configure</span>: <span class="function">(<span class="params">proxy, options</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="comment">// proxy 是 &#x27;http-proxy&#x27; 的实例</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="comment">// Proxying websockets or socket.io</span></span><br><span class="line">      <span class="string">&#x27;/socket.io&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;ws://localhost:3000&#x27;</span>,</span><br><span class="line">        <span class="attr">ws</span>: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2024/04/20/2eqYd3HZKTmMFfx.png" alt="image.png"></p><h1 id="第七步再到更改基本路径"><a href="#第七步再到更改基本路径" class="headerlink" title="第七步再到更改基本路径"></a>第七步再到更改基本路径</h1><p>更改request.js中的基本的路径名字，用&#x2F;api或其他代替</p><p><img src="https://s2.loli.net/2024/04/20/b4nfdo9H3r6FcUg.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;写表单组件部分&quot;&gt;&lt;a href=&quot;#写表单组件部分&quot; class=&quot;headerlink&quot; title=&quot;写表单组件部分&quot;&gt;&lt;/a&gt;写表单组件部分&lt;/h1&gt;&lt;p&gt;一般这个文件写在views或pages文件的login.vue文件中。&lt;/p&gt;
&lt;p&gt;一般使用ele</summary>
      
    
    
    
    
    <category term="vue3" scheme="http://baiyi-ing.github.io/tags/vue3/"/>
    
    <category term="js" scheme="http://baiyi-ing.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>axios的使用方法</title>
    <link href="http://baiyi-ing.github.io/2024/04/19/axios%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <id>http://baiyi-ing.github.io/2024/04/19/axios%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</id>
    <published>2024-04-19T12:46:15.000Z</published>
    <updated>2024-04-20T02:17:05.901Z</updated>
    
    <content type="html"><![CDATA[<h1 id="将axios引入到相关的包"><a href="#将axios引入到相关的包" class="headerlink" title="将axios引入到相关的包"></a>将axios引入到相关的包</h1><p>引入相关的包到axios.js文件中;或者一些比较大点的项目都会有自己的公共文件,在src中名叫utils里面会有一个request.js文件用来处理相关的axios请求。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="创建axios实例"><a href="#创建axios实例" class="headerlink" title="创建axios实例"></a>创建axios实例</h1><p>一般创建的方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> service = axios.<span class="title function_">creat</span>(&#123;</span><br><span class="line">    <span class="attr">baseURL</span>:<span class="string">&quot;http://.....&quot;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>高级创建方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> service = axios.<span class="title function_">creat</span>(&#123;</span><br><span class="line">    <span class="comment">//axios中请求配置有baseURL选项。表示请求URL公共部分</span></span><br><span class="line">    <span class="comment">//代码可能会有多种环境，在不同的开发环境下，会有不同的路径</span></span><br><span class="line">    <span class="comment">//如代码在.env.development开发环境或 .env.production生产文件中</span></span><br><span class="line">    <span class="comment">//这种方法可以让Vite进行环境管理，让VITE_APP_BASE_API在不同环境下具有不同的值</span></span><br><span class="line">    <span class="attr">baseURL</span>:<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">VITE_APP_BASE_API</span>,</span><br><span class="line">    <span class="comment">//超时</span></span><br><span class="line">    <span class="attr">timeout</span>:<span class="number">20000</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>.env.XXX文件中，会写VITE_APP_BASE_API的具体名字，但是他是一个地址对象，不是单纯的地址，要找地址的话还要去，<strong>vite.config.js</strong>文件中去看具体怎么定义的，一般在server：{}中</p><h1 id="建立相关api存储文件"><a href="#建立相关api存储文件" class="headerlink" title="建立相关api存储文件"></a>建立相关api存储文件</h1><p>在src文件夹下建立一个名叫api的文件夹来存放接口数据，然后会定义一个方法来定义相关的操作，如果是登录功能就会写login.js文件。</p><h1 id="在api文件中引入包"><a href="#在api文件中引入包" class="headerlink" title="在api文件中引入包"></a>在api文件中引入包</h1><p>若axios被引入的地方是axios.js文件中，则在api文件夹中的login.js文件引入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;~/axiso&#x27;</span></span><br></pre></td></tr></table></figure><p>若是在utils的request.js文件中，则在api文件夹中的login.js文件引入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;将axios引入到相关的包&quot;&gt;&lt;a href=&quot;#将axios引入到相关的包&quot; class=&quot;headerlink&quot; title=&quot;将axios引入到相关的包&quot;&gt;&lt;/a&gt;将axios引入到相关的包&lt;/h1&gt;&lt;p&gt;引入相关的包到axios.js文件中;或者一些比较大</summary>
      
    
    
    
    
    <category term="vite" scheme="http://baiyi-ing.github.io/tags/vite/"/>
    
    <category term="vue3" scheme="http://baiyi-ing.github.io/tags/vue3/"/>
    
  </entry>
  
  <entry>
    <title>vue3与js的router基本使用方式</title>
    <link href="http://baiyi-ing.github.io/2024/04/17/vue3%E4%B8%8Ejs%E7%9A%84router%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F/"/>
    <id>http://baiyi-ing.github.io/2024/04/17/vue3%E4%B8%8Ejs%E7%9A%84router%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F/</id>
    <published>2024-04-17T10:54:47.000Z</published>
    <updated>2024-04-18T10:59:59.293Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一步快捷引入的别名"><a href="#第一步快捷引入的别名" class="headerlink" title="第一步快捷引入的别名"></a>第一步快捷引入的别名</h1><p>使用路由需要大量在src文件中引用所需要的地址，并且组件中也需要很多的包的引用，将快速跳转到src这一文件的步骤进行简化操作是非常有必要的。</p><p>在vite.config.js文件中就可以帮助构成。一般将.&#x2F;取别名为~（可直接调用同级文件名），将.&#x2F;src取别名为@</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//第一步内置模块用来配置路径</span></span><br><span class="line"><span class="keyword">import</span> path <span class="keyword">from</span> <span class="string">&#x27;path&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">    <span class="attr">resolve</span>:&#123;</span><br><span class="line">        <span class="comment">//需要用到的插件数组</span></span><br><span class="line">        <span class="attr">plugins</span>:[<span class="title function_">vue</span>()]</span><br><span class="line">        <span class="attr">alias</span>: &#123;</span><br><span class="line">            <span class="comment">//设置路径（两个下划线）</span></span><br><span class="line">        <span class="comment">//./当前同级目录+其他文件名</span></span><br><span class="line">            <span class="string">&#x27;~&#x27;</span>:path.<span class="title function_">resolve</span>(__dirname,<span class="string">&#x27;./&#x27;</span>),</span><br><span class="line">    <span class="comment">//@直接走到src文件目录下</span></span><br><span class="line">            <span class="string">&#x27;@&#x27;</span>:path.<span class="title function_">resolve</span>(__dianame,<span class="string">&#x27;./src&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="第二步写组件"><a href="#第二步写组件" class="headerlink" title="第二步写组件"></a>第二步写组件</h1><p>在src中的pages或views中将组件的样式基本定制好，然后等待调用使用，例如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">这是一个组件页面</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup name=&#x27;Online&#x27;&gt;</span><br><span class="line">    </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>注意：直接在script中写name的<a href="https://blog.csdn.net/XianZhe_/article/details/134211764?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-1-134211764-blog-123497609.235%5Ev43%5Epc_blog_bottom_relevance_base8&spm=1001.2101.3001.4242.2&utm_relevant_index=4">方法</a>有多种，其中比较简单的是使用unplugin-vue-define-options插件，然后再安装一个叫做vue-official的插件（以前叫做volar）</p><h1 id="第三步在router文件中完成配置"><a href="#第三步在router文件中完成配置" class="headerlink" title="第三步在router文件中完成配置"></a>第三步在router文件中完成配置</h1><p>安装vue-router@4</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-router@4</span><br></pre></td></tr></table></figure><p>在router文件中的index.js文件中引入包，引入路径。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//首先引入路由方法,使用HashHistory和WebHistory不同，具体为表现路径的不同，前面是#，后面是路径名称</span></span><br><span class="line"><span class="keyword">import</span> &#123;creatRouter,creatWebHashHistory,creatHoshHistory&#125;<span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//建立路由配置公共路由数组</span></span><br><span class="line"><span class="keyword">const</span> roueters=[]</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">creatRouter</span>(&#123;</span><br><span class="line">    <span class="attr">history</span>:<span class="title function_">creatWebhistory</span>(),</span><br><span class="line">    <span class="comment">//routers:routers,key与value值相同可以省略写</span></span><br><span class="line">    routers   </span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//发出去</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="第四步在main文件中引入路由"><a href="#第四步在main文件中引入路由" class="headerlink" title="第四步在main文件中引入路由"></a>第四步在main文件中引入路由</h1><p>在同级目录下的mian.js文件中引入路由</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;creatApp&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ElementPlus</span> form <span class="string">&#x27;element-plus&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span><span class="string">&#x27;./App.vue</span></span><br><span class="line"><span class="string">//引入</span></span><br><span class="line"><span class="string">import router from &#x27;</span>./router<span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">//建立app对象</span></span><br><span class="line"><span class="string">const app = creatApp(App)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">//使用路由</span></span><br><span class="line"><span class="string">app.use(router)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">//使用elementplus</span></span><br><span class="line"><span class="string">app.use(ElementPlus)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">//使用挂载对象</span></span><br><span class="line"><span class="string">app.mount(&#x27;</span>#app<span class="string">&#x27;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h1 id="第五步完善router中的组件调用"><a href="#第五步完善router中的组件调用" class="headerlink" title="第五步完善router中的组件调用"></a>第五步完善router中的组件调用</h1><p>一般这个路由组件文件的名字会叫做pages或者views，我们可以通过router文件下的index.js(第三步中已经建立好了基本框架，只要处理第三步代码的数组内容就可以了)来进行相关的调用。</p><p><strong>第一种路由普通使用方法</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;creatRouter,creatWebHashHistory,creatHoshHistory&#125;<span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//引入组件地址</span></span><br><span class="line"><span class="keyword">import</span> a <span class="keyword">from</span> <span class="string">&#x27;@/view/a.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> b <span class="keyword">from</span> <span class="string">&#x27;@/view/b.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//建立路由配置公共路由数组，进行view组件中的调用</span></span><br><span class="line"><span class="keyword">const</span> roueters=[</span><br><span class="line">    &#123;<span class="attr">name</span>:<span class="string">&#x27;a&#x27;</span>,<span class="attr">path</span>:<span class="string">&#x27;/a&#x27;</span>,<span class="attr">component</span>:a&#125;,</span><br><span class="line">    &#123;<span class="attr">name</span>:<span class="string">&#x27;b&#x27;</span>,<span class="attr">path</span>:<span class="string">&#x27;/b&#x27;</span>,<span class="attr">component</span>:b&#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">creatRouter</span>(&#123;</span><br><span class="line">    <span class="attr">history</span>:<span class="title function_">creatWebhistory</span>(),</span><br><span class="line">    routers   </span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><p><strong>第二种路由嵌套使用方法</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">const router = createRouter(&#123;</span><br><span class="line">  history:createWebHistory(),</span><br><span class="line">routes:[</span><br><span class="line">&#123;</span><br><span class="line">name:&#x27;zhuye&#x27;,</span><br><span class="line">path:&#x27;/home&#x27;,</span><br><span class="line">component:Home</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">name:&#x27;xinwen&#x27;,</span><br><span class="line">path:&#x27;/news&#x27;,</span><br><span class="line">component:News,</span><br><span class="line">children:[</span><br><span class="line">&#123;</span><br><span class="line">name:&#x27;xiang&#x27;,</span><br><span class="line">path:&#x27;detail&#x27;,</span><br><span class="line">component:Detail</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">name:&#x27;guanyu&#x27;,</span><br><span class="line">path:&#x27;/about&#x27;,</span><br><span class="line">component:About</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;)</span><br><span class="line">export default router</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：使用name属性可以帮助后期优化router-link操作,如果设计到多级跳转，命名是一个非常明智的选择。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 第一种：to的字符串写法 --&gt;</span><br><span class="line">&lt;router-link active-class=&quot;active&quot; to=&quot;/home&quot;&gt;主页&lt;/router-link&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 第二种：to的对象写法 --&gt;</span><br><span class="line">&lt;router-link active-class=&quot;active&quot; :to=&quot;&#123;path:&#x27;/home&#x27;&#125;&quot;&gt;Home&lt;/router-link&gt;</span><br></pre></td></tr></table></figure><h1 id="第六步在App-vue中进行引用路由"><a href="#第六步在App-vue中进行引用路由" class="headerlink" title="第六步在App.vue中进行引用路由"></a>第六步在App.vue中进行引用路由</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">&lt;!-- 将五的路由引入--&gt;</span><br><span class="line">&lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>进阶引用如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;!--划分区域--&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Vue路由测试<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!--导航区--&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;navigate&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">RouterLink</span> <span class="attr">to</span>=<span class="string">&quot;/home&quot;</span> <span class="attr">active-class</span>=<span class="string">&quot;active&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">RouterLink</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">RouterLink</span> <span class="attr">:to</span>=<span class="string">&quot;&#123;name:&#x27;newspaper&#x27;&#125;&quot;</span> <span class="attr">active-class</span>=<span class="string">&quot;active&quot;</span>&gt;</span>新闻<span class="tag">&lt;/<span class="name">RouterLink</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">RouterLink</span> <span class="attr">:to</span>=<span class="string">&quot;&#123;path:&#x27;/About&#x27;&#125;&quot;</span> <span class="attr">active-class</span>=<span class="string">&quot;active&quot;</span>&gt;</span>关于<span class="tag">&lt;/<span class="name">RouterLink</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="comment">&lt;!-- &lt;RouterLink to=&quot;/About&quot; active-class=&quot;active&quot;&gt;关于&lt;/RouterLink&gt; --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!--展示区--&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main-content&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="comment">&lt;!-- 内容展现位置 --&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">RouterView</span>&gt;</span><span class="tag">&lt;/<span class="name">RouterView</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">name</span>=<span class="string">&quot;App&quot;</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="comment">//引入路由</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">import</span> &#123; <span class="title class_">RouterLink</span>,<span class="title class_">RouterView</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="进一步了解路由使用方法"><a href="#进一步了解路由使用方法" class="headerlink" title="进一步了解路由使用方法"></a>进一步了解路由使用方法</h1><p>进一步了解vuerouter的使用，可以在<a href="https://router.vuejs.org/zh/introduction.html">官网</a>查看</p><p>router&#x2F;index.js高级路径写法</p><p><img src="https://s2.loli.net/2024/04/18/FjVkmiu7Nt4B9MP.jpg" alt="463c5d93b5ed4ddf059b4f5d15cfb95.jpg"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;第一步快捷引入的别名&quot;&gt;&lt;a href=&quot;#第一步快捷引入的别名&quot; class=&quot;headerlink&quot; title=&quot;第一步快捷引入的别名&quot;&gt;&lt;/a&gt;第一步快捷引入的别名&lt;/h1&gt;&lt;p&gt;使用路由需要大量在src文件中引用所需要的地址，并且组件中也需要很多的包的引</summary>
      
    
    
    
    
    <category term="vue3" scheme="http://baiyi-ing.github.io/tags/vue3/"/>
    
    <category term="js" scheme="http://baiyi-ing.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序调用到接口数据</title>
    <link href="http://baiyi-ing.github.io/2024/04/15/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%B0%83%E7%94%A8%E5%88%B0%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE/"/>
    <id>http://baiyi-ing.github.io/2024/04/15/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%B0%83%E7%94%A8%E5%88%B0%E6%8E%A5%E5%8F%A3%E6%95%B0%E6%8D%AE/</id>
    <published>2024-04-15T03:21:37.000Z</published>
    <updated>2024-04-16T12:24:13.982Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一步：构建组件大致框架"><a href="#第一步：构建组件大致框架" class="headerlink" title="第一步：构建组件大致框架"></a>第一步：构建组件大致框架</h1><p>很多时候我们要了解到界面设计中到底包含了哪些元素，数据，以及div盒子的大致构成，从而先进行了简单的页面搭建，将组建初步设计好。</p><p>如以下页面，大致由<strong>三部分</strong>组成：每个部分有还有自己的构成</p><p><img src="https://s2.loli.net/2024/04/15/4RnAlQBUJhkrf1t.png" alt="image.png"></p><p><img src="https://s2.loli.net/2024/04/15/lZmXv51fDHUbtq6.png" alt="image.png"></p><h1 id="第二步：编写请求文档"><a href="#第二步：编写请求文档" class="headerlink" title="第二步：编写请求文档"></a>第二步：编写请求文档</h1><h2 id="请求属性赋值与是否成功判定"><a href="#请求属性赋值与是否成功判定" class="headerlink" title="请求属性赋值与是否成功判定"></a>请求属性赋值与是否成功判定</h2><p>通常会写一个公用的请求文档，里面包含了各种页面发来的各种情况。一般会是有一个<strong>公用的后端数据接口前缀baseUrl</strong>与你所需要的数据的<strong>地址后缀url</strong>来拼接组成后端数据接口地址（这里可以体现文档重要性）。以下代码是对这个后端接口数据的响应情况处理，说明访问成功和访问不成功的各种情况。</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 公用的请求</span></span><br><span class="line"><span class="keyword">const</span> baseUrl = <span class="string">&quot;https://meituan.thexxdd.cn/api/&quot;</span></span><br><span class="line"><span class="comment">// 获取token//npm install --save js-base64 对token进行前端加密</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Base64</span> &#125; <span class="keyword">from</span> <span class="string">&quot;js-base64&quot;</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getToken</span>(<span class="params"></span>): <span class="built_in">string</span> &#123;</span><br><span class="line">  <span class="comment">//存储到本地</span></span><br><span class="line">  <span class="keyword">const</span> token = uni.<span class="title function_">getStorageSync</span>(<span class="string">&#x27;wxuser&#x27;</span>).<span class="property">user_Token</span> || <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="comment">//进行加密</span></span><br><span class="line">  <span class="keyword">const</span> base64_taken = <span class="title class_">Base64</span>.<span class="title function_">encode</span>(token + <span class="string">&#x27;:&#x27;</span>)</span><br><span class="line">  <span class="comment">//返回给前端调用的用户</span></span><br><span class="line">  <span class="keyword">return</span> <span class="string">&#x27;Basic &#x27;</span> + base64_taken</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 请求定义有三个参数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">request</span>(<span class="params"></span></span><br><span class="line"><span class="params">  url: <span class="built_in">string</span>,</span></span><br><span class="line"><span class="params">  method: <span class="string">&#x27;GET&#x27;</span> | <span class="string">&#x27;POST&#x27;</span>,</span></span><br><span class="line"><span class="params">  data: <span class="built_in">string</span> | <span class="built_in">object</span> | <span class="built_in">ArrayBuffer</span></span></span><br><span class="line"><span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">//请求是需要时间的所以可以包装成一个事件,传输,只有url需要拼接</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    uni.<span class="title function_">request</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>: baseUrl + url,</span><br><span class="line">      method,</span><br><span class="line">      data,</span><br><span class="line">      <span class="comment">//header获取你的信息，给你访问权限,token唯一标识</span></span><br><span class="line">      <span class="attr">header</span>: &#123; <span class="title class_">Authorization</span>: <span class="title function_">getToken</span>() &#125;,</span><br><span class="line">      <span class="comment">//访问成功的下一步骤</span></span><br><span class="line">      <span class="attr">success</span>: <span class="function">(<span class="params">res: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (res.<span class="property">statusCode</span> == <span class="number">200</span>) &#123;</span><br><span class="line">          <span class="comment">//成功请求200</span></span><br><span class="line">          <span class="title function_">resolve</span>(res)</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (res.<span class="property">statusCode</span> == <span class="number">401</span>) &#123;</span><br><span class="line">          <span class="comment">//没有请求权限，访问接口，一般没有登录</span></span><br><span class="line">          uni.<span class="title function_">navigateTo</span>(&#123; <span class="attr">url</span>: <span class="string">&quot;/pages/login-page/index&quot;</span> &#125;)</span><br><span class="line">          <span class="comment">//告知前端</span></span><br><span class="line">          <span class="title function_">reject</span>(res)</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (res.<span class="property">statusCode</span> == <span class="number">400</span>) &#123;</span><br><span class="line">          <span class="comment">//服务器发生错误,给与用户提示</span></span><br><span class="line">          uni.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;开发者某个字段或参数填写不对&#x27;</span>,</span><br><span class="line">            <span class="attr">icon</span>: <span class="string">&#x27;none&#x27;</span>,</span><br><span class="line">            <span class="attr">duration</span>: <span class="number">1500</span></span><br><span class="line">          &#125;);</span><br><span class="line">          <span class="title function_">reject</span>(res)</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (res.<span class="property">statusCode</span> == <span class="number">500</span>) &#123;</span><br><span class="line">          <span class="comment">//服务器发生错误,给与用户提示</span></span><br><span class="line">          uni.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;服务器发生错误&#x27;</span>,</span><br><span class="line">            <span class="attr">icon</span>: <span class="string">&#x27;none&#x27;</span>,</span><br><span class="line">            <span class="attr">duration</span>: <span class="number">1500</span></span><br><span class="line">          &#125;);</span><br><span class="line">          <span class="title function_">reject</span>(res)</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (res.<span class="property">statusCode</span> == <span class="number">202</span>) &#123;</span><br><span class="line">          <span class="comment">//信息没有填完整</span></span><br><span class="line">          uni.<span class="title function_">showToast</span>(&#123; <span class="attr">title</span>: res.<span class="property">data</span>.<span class="property">msg</span>, <span class="attr">icon</span>: <span class="string">&#x27;none&#x27;</span>, <span class="attr">duration</span>: <span class="number">1000</span> &#125;);</span><br><span class="line">          <span class="title function_">reject</span>(res);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          uni.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;服务器发生未知错误&#x27;</span>,</span><br><span class="line">            <span class="attr">icon</span>: <span class="string">&#x27;none&#x27;</span>,</span><br><span class="line">            <span class="attr">duration</span>: <span class="number">1500</span></span><br><span class="line">          &#125;);</span><br><span class="line">          <span class="title function_">reject</span>(res)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">fail</span>: <span class="function">(<span class="params">err: <span class="built_in">any</span></span>) =&gt;</span> &#123;</span><br><span class="line">        uni.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">          <span class="attr">title</span>: <span class="string">&#x27;服务器发生未知错误&#x27;</span>,</span><br><span class="line">          <span class="attr">icon</span>: <span class="string">&#x27;none&#x27;</span>,</span><br><span class="line">          <span class="attr">duration</span>: <span class="number">1500</span></span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><h2 id="定义API接口方法并暴露出去"><a href="#定义API接口方法并暴露出去" class="headerlink" title="定义API接口方法并暴露出去"></a>定义API接口方法并暴露出去</h2><p>定义接口方法</p><p><img src="https://s2.loli.net/2024/04/15/JndD6u2SbgR7jeF.png" alt="image.png"></p><p>暴露出去</p><p><img src="https://s2.loli.net/2024/04/15/XB9b4wkfOG5TSAg.png" alt="image.png"></p><h1 id="第三步：写后端数据的数据类型接口"><a href="#第三步：写后端数据的数据类型接口" class="headerlink" title="第三步：写后端数据的数据类型接口"></a>第三步：写后端数据的数据类型接口</h1><p>根据，文档可以看出后端会返回什么样的数据。</p><p><img src="https://s2.loli.net/2024/04/15/m4VYCrnwjF2A9EJ.png" alt="image.png"></p><p>当自己也不知道会有什么数据的时候</p><p>可以log出来是什么数据，或者直接查看文档。</p><p>可以在script的标签中获取到当前文档接口的所有数据，然后可以打印出来使用。</p><p><img src="https://s2.loli.net/2024/04/16/VHbnXsFlR3MLoNe.png" alt="image.png"></p><p><img src="https://s2.loli.net/2024/04/16/smO5xvXDo1qB9nQ.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;第一步：构建组件大致框架&quot;&gt;&lt;a href=&quot;#第一步：构建组件大致框架&quot; class=&quot;headerlink&quot; title=&quot;第一步：构建组件大致框架&quot;&gt;&lt;/a&gt;第一步：构建组件大致框架&lt;/h1&gt;&lt;p&gt;很多时候我们要了解到界面设计中到底包含了哪些元素，数据，以及</summary>
      
    
    
    
    
    <category term="微信小程序" scheme="http://baiyi-ing.github.io/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>JS数组</title>
    <link href="http://baiyi-ing.github.io/2024/04/14/JS%E6%95%B0%E7%BB%84/"/>
    <id>http://baiyi-ing.github.io/2024/04/14/JS%E6%95%B0%E7%BB%84/</id>
    <published>2024-04-13T18:41:16.000Z</published>
    <updated>2024-04-16T12:24:13.971Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>vue3组件通信方式</title>
    <link href="http://baiyi-ing.github.io/2024/04/12/vue3%E5%AD%A6%E4%B9%A0/vue3%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F/"/>
    <id>http://baiyi-ing.github.io/2024/04/12/vue3%E5%AD%A6%E4%B9%A0/vue3%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F/</id>
    <published>2024-04-12T05:28:45.000Z</published>
    <updated>2024-04-12T08:20:31.719Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常见通信方式总和"><a href="#常见通信方式总和" class="headerlink" title="常见通信方式总和"></a>常见通信方式总和</h1><p><img src="https://s2.loli.net/2024/04/12/hbIKVFOu6g713Sw.png" alt="image.png"></p><h1 id="父子相互都能通信"><a href="#父子相互都能通信" class="headerlink" title="父子相互都能通信"></a>父子相互都能通信</h1><h2 id="Props父子相互通信"><a href="#Props父子相互通信" class="headerlink" title="Props父子相互通信"></a>Props父子相互通信</h2><p>概述：<code>props</code>是使用频率最高的一种通信方式，常用与 ：<strong>父 ↔ 子</strong>。</p><ul><li>若 <strong>父传子</strong>：属性值是<strong>非函数</strong>。</li><li>若 <strong>子传父</strong>：属性值是<strong>函数</strong>。</li></ul><p>注意：props可以让<strong>子直接拿到父亲</strong>传过来的属性，儿子使用**defineProps([父亲方法与属性的数组])**，</p><p>​            但是父亲不可以直接去拿儿子的属性，要要拿要遵循以下步骤</p><p>​            1.自己定义一个有属性的方法，<strong>变成绑定事件</strong>传递给儿子组件。</p><p>​            2.儿子组件<strong>定义触发事件</strong>，传入父亲想要的属性</p><p>父组件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;father&quot;&gt;</span><br><span class="line">    &lt;h3&gt;父组件，&lt;/h3&gt;</span><br><span class="line">&lt;h4&gt;我的车：&#123;&#123; car &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;h4&gt;儿子给的玩具：&#123;&#123; toy &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;Child :car=&quot;car&quot; :getToy=&quot;getToy&quot;/&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;Father&quot;&gt;</span><br><span class="line">import Child from &#x27;./Child.vue&#x27;</span><br><span class="line">import &#123; ref &#125; from &quot;vue&quot;;</span><br><span class="line">// 数据</span><br><span class="line">const car = ref(&#x27;奔驰&#x27;)</span><br><span class="line">const toy = ref()</span><br><span class="line">// 方法</span><br><span class="line">function getToy(value:string)&#123;</span><br><span class="line">toy.value = value</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>子组件:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;child&quot;&gt;</span><br><span class="line">    &lt;h3&gt;子组件&lt;/h3&gt;</span><br><span class="line">&lt;h4&gt;我的玩具：&#123;&#123; toy &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;h4&gt;父给我的车：&#123;&#123; car &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;button @click=&quot;getToy(toy)&quot;&gt;玩具给父亲&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;Child&quot;&gt;</span><br><span class="line">import &#123; ref &#125; from &quot;vue&quot;;</span><br><span class="line">const toy = ref(&#x27;奥特曼&#x27;)</span><br><span class="line"></span><br><span class="line">defineProps([&#x27;car&#x27;,&#x27;getToy&#x27;])</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="v-model父子间相互通信"><a href="#v-model父子间相互通信" class="headerlink" title="v-model父子间相互通信"></a>v-model父子间相互通信</h2><ol><li><p>概述：实现 <strong>父↔子</strong> 之间相互通信。</p></li><li><p>前序知识 —— <code>v-model</code>的本质</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 使用v-model指令 --&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; v-model=&quot;userName&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- v-model的本质是下面这行代码 --&gt;</span><br><span class="line">&lt;input </span><br><span class="line">  type=&quot;text&quot; </span><br><span class="line">  :value=&quot;userName&quot; </span><br><span class="line">  @input=&quot;userName =(&lt;HTMLInputElement&gt;$event.target).value&quot;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li><li><p>组件标签上的<code>v-model</code>的本质：<code>:moldeValue</code> ＋ <code>update:modelValue</code>事件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 组件标签上使用v-model指令 --&gt;</span><br><span class="line">&lt;AtguiguInput v-model=&quot;userName&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 组件标签上v-model的本质 --&gt;</span><br><span class="line">&lt;AtguiguInput :modelValue=&quot;userName&quot; @update:model-value=&quot;userName = $event&quot;/&gt;</span><br></pre></td></tr></table></figure><p><code>AtguiguInput</code>组件中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;box&quot;&gt;</span><br><span class="line">    &lt;!--将接收的value值赋给input元素的value属性，目的是：为了呈现数据 --&gt;</span><br><span class="line">&lt;!--给input元素绑定原生input事件，触发input事件时，进而触发update:model-value事件--&gt;</span><br><span class="line">    &lt;input </span><br><span class="line">       type=&quot;text&quot; </span><br><span class="line">       :value=&quot;modelValue&quot; </span><br><span class="line">       @input=&quot;emit(&#x27;update:model-value&#x27;,$event.target.value)&quot;</span><br><span class="line">    &gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;AtguiguInput&quot;&gt;</span><br><span class="line">  // 接收props</span><br><span class="line">  defineProps([&#x27;modelValue&#x27;])</span><br><span class="line">  // 声明事件</span><br><span class="line">  const emit = defineEmits([&#x27;update:model-value&#x27;])</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>也可以更换<code>value</code>，例如改成<code>abc</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 也可以更换value，例如改成abc--&gt;</span><br><span class="line">&lt;AtguiguInput v-model:abc=&quot;userName&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 上面代码的本质如下 --&gt;</span><br><span class="line">&lt;AtguiguInput :abc=&quot;userName&quot; @update:abc=&quot;userName = $event&quot;/&gt;</span><br></pre></td></tr></table></figure><p><code>AtguiguInput</code>组件中：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;box&quot;&gt;</span><br><span class="line">    &lt;input </span><br><span class="line">       type=&quot;text&quot; </span><br><span class="line">       :value=&quot;abc&quot; </span><br><span class="line">       @input=&quot;emit(&#x27;update:abc&#x27;,$event.target.value)&quot;</span><br><span class="line">    &gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;AtguiguInput&quot;&gt;</span><br><span class="line">  // 接收props</span><br><span class="line">  defineProps([&#x27;abc&#x27;])</span><br><span class="line">  // 声明事件</span><br><span class="line">  const emit = defineEmits([&#x27;update:abc&#x27;])</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></li><li><p>如果<code>value</code>可以更换，那么就可以在组件标签上多次使用<code>v-model</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;AtguiguInput v-model:abc=&quot;userName&quot; v-model:xyz=&quot;password&quot;/&gt;</span><br></pre></td></tr></table></figure></li></ol><p>父组件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;father&quot;&gt;</span><br><span class="line">    &lt;h3&gt;父组件&lt;/h3&gt;</span><br><span class="line">    &lt;h4&gt;&#123;&#123; username &#125;&#125;&lt;/h4&gt;</span><br><span class="line">    &lt;h4&gt;&#123;&#123; password &#125;&#125;&lt;/h4&gt;</span><br><span class="line">    &lt;!-- v-model用在html标签上，等价绑定方式 --&gt;</span><br><span class="line">    &lt;!-- &lt;input type=&quot;text&quot; v-model=&quot;username&quot;&gt; --&gt;</span><br><span class="line">    &lt;!-- &lt;input type=&quot;text&quot; :value=&quot;username&quot; @input=&quot;username = (&lt;HTMLInputElement&gt;$event.target).value&quot;&gt; --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- v-model用在组件标签上 --&gt;</span><br><span class="line">    &lt;!-- elementUI组件上是可以加v-model的，但是自己定义的不能直接加 --&gt;</span><br><span class="line">    &lt;!-- &lt;el-input&gt;&lt;/el-input&gt; --&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;!-- &lt;AtguiguInput v-model=&quot;username&quot;/&gt; --&gt;</span><br><span class="line">    &lt;!-- &lt;AtguiguInput </span><br><span class="line">      :modelValue=&quot;username&quot; </span><br><span class="line">      @update:modelValue=&quot;username = $event&quot;</span><br><span class="line">    /&gt; --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 修改modelValue,简化代码,用v-model进行 --&gt;</span><br><span class="line">    &lt;AtguiguInput v-model:ming=&quot;username&quot; v-model:mima=&quot;password&quot;/&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;Father&quot;&gt;</span><br><span class="line">import &#123; ref &#125; from &quot;vue&quot;;</span><br><span class="line">  import AtguiguInput from &#x27;./AtguiguInput.vue&#x27;</span><br><span class="line">  // 数据</span><br><span class="line">  let username = ref(&#x27;zhansgan&#x27;)</span><br><span class="line">  let password = ref(&#x27;123456&#x27;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>子组件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;input </span><br><span class="line">    type=&quot;text&quot; </span><br><span class="line">    :value=&quot;ming&quot;</span><br><span class="line">    @input=&quot;emit(&#x27;update:ming&#x27;,(&lt;HTMLInputElement&gt;$event.target).value)&quot;</span><br><span class="line">  &gt;</span><br><span class="line">  &lt;br&gt;</span><br><span class="line">  &lt;input </span><br><span class="line">    type=&quot;text&quot; </span><br><span class="line">    :value=&quot;mima&quot;</span><br><span class="line">    @input=&quot;emit(&#x27;update:mima&#x27;,(&lt;HTMLInputElement&gt;$event.target).value)&quot;</span><br><span class="line">  &gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;AtguiguInput&quot;&gt;</span><br><span class="line">  defineProps([&#x27;ming&#x27;,&#x27;mima&#x27;])</span><br><span class="line">  const emit = defineEmits([&#x27;update:ming&#x27;,&#x27;update:mima&#x27;])</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="refs与-parent父子通信"><a href="#refs与-parent父子通信" class="headerlink" title="$refs与$parent父子通信"></a>$refs与$parent父子通信</h2><p><strong>1.$refs实现父传子</strong></p><p>而且可以，定义一次传给所有儿子</p><p><strong>2.$parent实现子传父</strong></p><p>多个儿子都可以对同一父亲进行相关的影响</p><p>父组件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class=&quot;father&quot;&gt;</span><br><span class="line">&lt;h3&gt;父组件&lt;/h3&gt;</span><br><span class="line">&lt;h4&gt;房产：&#123;&#123; house &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;button @click=&quot;changeToy&quot;&gt;修改Child1的玩具&lt;/button&gt;</span><br><span class="line">&lt;button @click=&quot;changeComputer&quot;&gt;修改Child2的电脑&lt;/button&gt;</span><br><span class="line">&lt;button @click=&quot;getAllChild($refs)&quot;&gt;让所有孩子的书变多&lt;/button&gt;</span><br><span class="line">&lt;Child1 ref=&quot;c1&quot;/&gt;</span><br><span class="line">&lt;Child2 ref=&quot;c2&quot;/&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;Father&quot;&gt;</span><br><span class="line">import Child1 from &#x27;./Child1.vue&#x27;</span><br><span class="line">import Child2 from &#x27;./Child2.vue&#x27;</span><br><span class="line">import &#123; ref,reactive &#125; from &quot;vue&quot;;</span><br><span class="line">let c1 = ref()</span><br><span class="line">let c2 = ref()</span><br><span class="line"></span><br><span class="line">// 注意点：当访问obj.c的时候，底层会自动读取value属性，因为c是在obj这个响应式对象中的</span><br><span class="line">/* let obj = reactive(&#123;</span><br><span class="line">a:1,</span><br><span class="line">b:2,</span><br><span class="line">c:ref(3)</span><br><span class="line">&#125;)</span><br><span class="line">let x = ref(4)</span><br><span class="line"></span><br><span class="line">console.log(obj.a)</span><br><span class="line">console.log(obj.b)</span><br><span class="line">console.log(obj.c)</span><br><span class="line">console.log(x) */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 数据</span><br><span class="line">let house = ref(4)</span><br><span class="line">// 方法</span><br><span class="line">function changeToy()&#123;</span><br><span class="line">c1.value.toy = &#x27;小猪佩奇&#x27;</span><br><span class="line">&#125;</span><br><span class="line">function changeComputer()&#123;</span><br><span class="line">c2.value.computer = &#x27;华为&#x27;</span><br><span class="line">&#125;</span><br><span class="line">    //给所有儿子加书</span><br><span class="line">function getAllChild(refs:&#123;[key:string]:any&#125;)&#123;</span><br><span class="line">console.log(refs)</span><br><span class="line">for (let key in refs)&#123;</span><br><span class="line">refs[key].book += 3</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">// 向外部提供数据</span><br><span class="line">defineExpose(&#123;house&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>子组件一号：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;child1&quot;&gt;</span><br><span class="line">    &lt;h3&gt;子组件1&lt;/h3&gt;</span><br><span class="line">&lt;h4&gt;玩具：&#123;&#123; toy &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;h4&gt;书籍：&#123;&#123; book &#125;&#125; 本&lt;/h4&gt;</span><br><span class="line">&lt;button @click=&quot;minusHouse($parent)&quot;&gt;干掉父亲的一套房产&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;Child1&quot;&gt;</span><br><span class="line">import &#123; ref &#125; from &quot;vue&quot;;</span><br><span class="line">// 数据</span><br><span class="line">let toy = ref(&#x27;奥特曼&#x27;)</span><br><span class="line">let book = ref(3)</span><br><span class="line"></span><br><span class="line">// 方法</span><br><span class="line">function minusHouse(parent:any)&#123;</span><br><span class="line">parent.house -= 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 把数据交给外部</span><br><span class="line">defineExpose(&#123;toy,book&#125;)</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>子组件二号：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;child2&quot;&gt;</span><br><span class="line">    &lt;h3&gt;子组件2&lt;/h3&gt;</span><br><span class="line">&lt;h4&gt;电脑：&#123;&#123; computer &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;h4&gt;书籍：&#123;&#123; book &#125;&#125; 本&lt;/h4&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;Child2&quot;&gt;</span><br><span class="line">import &#123; ref &#125; from &quot;vue&quot;;</span><br><span class="line">// 数据</span><br><span class="line">let computer = ref(&#x27;联想&#x27;)</span><br><span class="line">let book = ref(6)</span><br><span class="line">// 把数据交给外部</span><br><span class="line">defineExpose(&#123;computer,book&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="任意组件通信"><a href="#任意组件通信" class="headerlink" title="任意组件通信"></a>任意组件通信</h1><h2 id="任意组件通信mitt"><a href="#任意组件通信mitt" class="headerlink" title="任意组件通信mitt"></a>任意组件通信mitt</h2><p>概述：与消息订阅与发布（<code>pubsub</code>）功能类似，可以实现任意组件间通信。</p><p>安装<code>mitt</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i mitt</span><br></pre></td></tr></table></figure><p>【第一步】新建文件：<code>src\utils\emitter.ts</code>(一般命名为utils或者tools)</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入mitt </span></span><br><span class="line"><span class="keyword">import</span> mitt <span class="keyword">from</span> <span class="string">&quot;mitt&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建emitter</span></span><br><span class="line"><span class="keyword">const</span> emitter = <span class="title function_">mitt</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建并暴露mitt</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> emitter</span><br></pre></td></tr></table></figure><p>【第二步】接收数据的组件中：绑定事件、同时在销毁前解绑事件：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> emitter <span class="keyword">from</span> <span class="string">&quot;@/utils/emitter&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; onUnmounted &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 绑定事件</span></span><br><span class="line">emitter.<span class="title function_">on</span>(<span class="string">&#x27;send-toy&#x27;</span>,<span class="function">(<span class="params">value</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;send-toy事件被触发&#x27;</span>,value)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="title function_">onUnmounted</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  <span class="comment">// 解绑事件</span></span><br><span class="line">  emitter.<span class="title function_">off</span>(<span class="string">&#x27;send-toy&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>【第三步】：提供数据的组件，在合适的时候触发事件</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> emitter <span class="keyword">from</span> <span class="string">&quot;@/utils/emitter&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sendToy</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="comment">// 触发事件</span></span><br><span class="line">  emitter.<span class="title function_">emit</span>(<span class="string">&#x27;send-toy&#x27;</span>,toy.<span class="property">value</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="pinia任意组件通信"><a href="#pinia任意组件通信" class="headerlink" title="pinia任意组件通信"></a>pinia任意组件通信</h2><p>使用pinia也可以实现任意组件通信的效果，具体时搭建store仓库，在main.ts中创建相关的pinia对象，然后写相关的ts文件然后暴露出去，提供给所需的组件们使用。</p><h1 id="祖传孙通信"><a href="#祖传孙通信" class="headerlink" title="祖传孙通信"></a>祖传孙通信</h1><h2 id="atter实现祖传孙通信"><a href="#atter实现祖传孙通信" class="headerlink" title="atter实现祖传孙通信"></a>atter实现祖传孙通信</h2><p>具体说明：<code>$attrs</code>是一个对象，包含<strong>所有</strong>父组件传入的标签属性</p><p>注意：<code>$attrs</code>会自动排除<code>props</code>中声明的属性(可以认为声明过的 <code>props</code> 被子组件自己“消费”了)</p><p>下列父组件用</p><p>父组件：需要绑定属性进行传递</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;father&quot;&gt;</span><br><span class="line">    &lt;h3&gt;父组件&lt;/h3&gt;</span><br><span class="line">&lt;Child :a=&quot;a&quot; :b=&quot;b&quot; :c=&quot;c&quot; :d=&quot;d&quot; v-bind=&quot;&#123;x:100,y:200&#125;&quot; :updateA=&quot;updateA&quot;/&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;Father&quot;&gt;</span><br><span class="line">import Child from &#x27;./Child.vue&#x27;</span><br><span class="line">import &#123; ref &#125; from &quot;vue&quot;;</span><br><span class="line">let a = ref(1)</span><br><span class="line">let b = ref(2)</span><br><span class="line">let c = ref(3)</span><br><span class="line">let d = ref(4)</span><br><span class="line"></span><br><span class="line">function updateA(value)&#123;</span><br><span class="line">a.value = value</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>子组件：使用atter接受所有父组件的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class=&quot;child&quot;&gt;</span><br><span class="line">&lt;h3&gt;子组件&lt;/h3&gt;</span><br><span class="line">&lt;GrandChild v-bind=&quot;$attrs&quot;/&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;Child&quot;&gt;</span><br><span class="line">import GrandChild from &#x27;./GrandChild.vue&#x27;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>孙组件:可以直接看出，孙组件可以在经过了父组件的传递后，能够接受到父组件传来的所有属性和方法了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class=&quot;grand-child&quot;&gt;</span><br><span class="line">&lt;h3&gt;孙组件&lt;/h3&gt;</span><br><span class="line">&lt;h4&gt;a：&#123;&#123; a &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;h4&gt;b：&#123;&#123; b &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;h4&gt;c：&#123;&#123; c &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;h4&gt;d：&#123;&#123; d &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;h4&gt;x：&#123;&#123; x &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;h4&gt;y：&#123;&#123; y &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;button @click=&quot;updateA(666)&quot;&gt;点我更新A&lt;/button&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;GrandChild&quot;&gt;</span><br><span class="line">defineProps([&#x27;a&#x27;,&#x27;b&#x27;,&#x27;c&#x27;,&#x27;d&#x27;,&#x27;x&#x27;,&#x27;y&#x27;,&#x27;updateA&#x27;])</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="provide、inject实现祖传孙通信"><a href="#provide、inject实现祖传孙通信" class="headerlink" title="provide、inject实现祖传孙通信"></a>provide、inject实现祖传孙通信</h2><p>在祖先组件中通过<code>provide</code>配置向后代组件提供数据，在后代组件中通过<code>inject</code>配置来声明接收数据</p><p>【第一步】父组件中，使用<code>provide</code>提供数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;father&quot;&gt;</span><br><span class="line">    &lt;h3&gt;父组件&lt;/h3&gt;</span><br><span class="line">    &lt;h4&gt;资产：&#123;&#123; money &#125;&#125;&lt;/h4&gt;</span><br><span class="line">    &lt;h4&gt;汽车：&#123;&#123; car &#125;&#125;&lt;/h4&gt;</span><br><span class="line">    &lt;button @click=&quot;money += 1&quot;&gt;资产+1&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;car.price += 1&quot;&gt;汽车价格+1&lt;/button&gt;</span><br><span class="line">    &lt;Child/&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;Father&quot;&gt;</span><br><span class="line">  import Child from &#x27;./Child.vue&#x27;</span><br><span class="line">  import &#123; ref,reactive,provide &#125; from &quot;vue&quot;;</span><br><span class="line">  // 数据</span><br><span class="line">  let money = ref(100)</span><br><span class="line">  let car = reactive(&#123;</span><br><span class="line">    brand:&#x27;奔驰&#x27;,</span><br><span class="line">    price:100</span><br><span class="line">  &#125;)</span><br><span class="line">  // 用于更新money的方法</span><br><span class="line">  function updateMoney(value:number)&#123;</span><br><span class="line">    money.value += value</span><br><span class="line">  &#125;</span><br><span class="line">  // 提供数据</span><br><span class="line">  provide(&#x27;moneyContext&#x27;,&#123;money,updateMoney&#125;)</span><br><span class="line">  provide(&#x27;car&#x27;,car)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>【第二步】孙组件中使用<code>inject</code>配置项接受数据。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;grand-child&quot;&gt;</span><br><span class="line">    &lt;h3&gt;我是孙组件&lt;/h3&gt;</span><br><span class="line">    &lt;h4&gt;资产：&#123;&#123; money &#125;&#125;&lt;/h4&gt;</span><br><span class="line">    &lt;h4&gt;汽车：&#123;&#123; car &#125;&#125;&lt;/h4&gt;</span><br><span class="line">    &lt;button @click=&quot;updateMoney(6)&quot;&gt;点我&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;GrandChild&quot;&gt;</span><br><span class="line">  import &#123; inject &#125; from &#x27;vue&#x27;;</span><br><span class="line">  // 注入数据</span><br><span class="line"> let &#123;money,updateMoney&#125; = inject(&#x27;moneyContext&#x27;,&#123;money:0,updateMoney:(x:number)=&gt;&#123;&#125;&#125;)</span><br><span class="line">  let car = inject(&#x27;car&#x27;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="子传父操作"><a href="#子传父操作" class="headerlink" title="子传父操作"></a>子传父操作</h1><h2 id="自定义事件祖传父"><a href="#自定义事件祖传父" class="headerlink" title="自定义事件祖传父"></a>自定义事件祖传父</h2><p>儿子使用defineEmits传递想要要给父组件的数据，用emit先定义好事件名字</p><p><strong>注意：</strong>子触发事件之后会传来数据，过来之后父亲还是要写函数和属性来接收数据。</p><p>父组件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;father&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h3</span>&gt;</span>父组件<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span> <span class="attr">v-show</span>=<span class="string">&quot;toy&quot;</span>&gt;</span>子给的玩具：&#123;&#123; toy &#125;&#125;<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 给子组件Child绑定事件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Child</span> @<span class="attr">send-toy</span>=<span class="string">&quot;saveToy&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span> <span class="attr">lang</span>=<span class="string">&quot;ts&quot;</span> <span class="attr">name</span>=<span class="string">&quot;Father&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">import</span> <span class="title class_">Child</span> <span class="keyword">from</span> <span class="string">&#x27;./Child.vue&#x27;</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 数据</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> toy = <span class="title function_">ref</span>(<span class="string">&#x27;&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 用于保存传递过来的玩具</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">saveToy</span>(<span class="params">value:string</span>)&#123;</span></span><br><span class="line"><span class="language-javascript"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;saveToy&#x27;</span>,value)</span></span><br><span class="line"><span class="language-javascript">toy.<span class="property">value</span> = value</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>子组件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;child&quot;&gt;</span><br><span class="line">    &lt;h3&gt;子组件&lt;/h3&gt;</span><br><span class="line">&lt;h4&gt;玩具：&#123;&#123; toy &#125;&#125;&lt;/h4&gt;</span><br><span class="line">&lt;button @click=&quot;emit(&#x27;send-toy&#x27;,toy)&quot;&gt;测试&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup lang=&quot;ts&quot; name=&quot;Child&quot;&gt;</span><br><span class="line">import &#123; ref &#125; from &quot;vue&quot;;</span><br><span class="line">// 数据</span><br><span class="line">let toy = ref(&#x27;奥特曼&#x27;)</span><br><span class="line">// 声明事件</span><br><span class="line">const emit =  defineEmits([&#x27;send-toy&#x27;])</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="插槽子传父"><a href="#插槽子传父" class="headerlink" title="插槽子传父"></a>插槽子传父</h2><h3 id="默认插槽"><a href="#默认插槽" class="headerlink" title="默认插槽"></a>默认插槽</h3><p>数据在父组件中给与内容到子组件的插槽位置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">父组件中：</span><br><span class="line">        &lt;Category title=&quot;今日热门游戏&quot;&gt;</span><br><span class="line">          &lt;ul&gt;</span><br><span class="line">            &lt;li v-for=&quot;g in games&quot; :key=&quot;g.id&quot;&gt;&#123;&#123; g.name &#125;&#125;&lt;/li&gt;</span><br><span class="line">          &lt;/ul&gt;</span><br><span class="line">        &lt;/Category&gt;</span><br><span class="line">子组件中：</span><br><span class="line">        &lt;template&gt;</span><br><span class="line">          &lt;div class=&quot;item&quot;&gt;</span><br><span class="line">            &lt;h3&gt;&#123;&#123; title &#125;&#125;&lt;/h3&gt;</span><br><span class="line">            &lt;!-- 默认插槽 --&gt;</span><br><span class="line">            &lt;slot&gt;&lt;/slot&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/template&gt;</span><br></pre></td></tr></table></figure><h3 id="具名插槽"><a href="#具名插槽" class="headerlink" title="具名插槽"></a>具名插槽</h3><p>父组件可以分别放多个内容不同的插槽进入子组件中(数据在父组件中)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">父组件中：</span><br><span class="line">        &lt;Category title=&quot;今日热门游戏&quot;&gt;</span><br><span class="line">          &lt;template v-slot:s1&gt;</span><br><span class="line">            &lt;ul&gt;</span><br><span class="line">              &lt;li v-for=&quot;g in games&quot; :key=&quot;g.id&quot;&gt;&#123;&#123; g.name &#125;&#125;&lt;/li&gt;</span><br><span class="line">            &lt;/ul&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">          &lt;template #s2&gt;</span><br><span class="line">            &lt;a href=&quot;&quot;&gt;更多&lt;/a&gt;</span><br><span class="line">          &lt;/template&gt;</span><br><span class="line">        &lt;/Category&gt;</span><br><span class="line">子组件中：</span><br><span class="line">        &lt;template&gt;</span><br><span class="line">          &lt;div class=&quot;item&quot;&gt;</span><br><span class="line">            &lt;h3&gt;&#123;&#123; title &#125;&#125;&lt;/h3&gt;</span><br><span class="line">            &lt;slot name=&quot;s1&quot;&gt;&lt;/slot&gt;</span><br><span class="line">            &lt;slot name=&quot;s2&quot;&gt;&lt;/slot&gt;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/template&gt;</span><br></pre></td></tr></table></figure><h3 id="作用域插槽"><a href="#作用域插槽" class="headerlink" title="作用域插槽"></a>作用域插槽</h3><p>数据在子组件中，父组件在子组件定义了绑定事件后，可以用params来调用子组件的内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">父组件中：</span><br><span class="line">      &lt;Game v-slot=&quot;params&quot;&gt;</span><br><span class="line">      &lt;!-- &lt;Game v-slot:default=&quot;params&quot;&gt; --&gt;</span><br><span class="line">      &lt;!-- &lt;Game #default=&quot;params&quot;&gt; --&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">          &lt;li v-for=&quot;g in params.games&quot; :key=&quot;g.id&quot;&gt;&#123;&#123; g.name &#125;&#125;&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">      &lt;/Game&gt;</span><br><span class="line"></span><br><span class="line">子组件中：</span><br><span class="line">      &lt;template&gt;</span><br><span class="line">        &lt;div class=&quot;category&quot;&gt;</span><br><span class="line">          &lt;h2&gt;今日游戏榜单&lt;/h2&gt;</span><br><span class="line">          &lt;slot :games=&quot;games&quot; a=&quot;哈哈&quot;&gt;&lt;/slot&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line"></span><br><span class="line">      &lt;script setup lang=&quot;ts&quot; name=&quot;Category&quot;&gt;</span><br><span class="line">        import &#123;reactive&#125; from &#x27;vue&#x27;</span><br><span class="line">        let games = reactive([</span><br><span class="line">          &#123;id:&#x27;asgdytsa01&#x27;,name:&#x27;英雄联盟&#x27;&#125;,</span><br><span class="line">          &#123;id:&#x27;asgdytsa02&#x27;,name:&#x27;王者荣耀&#x27;&#125;,</span><br><span class="line">          &#123;id:&#x27;asgdytsa03&#x27;,name:&#x27;红色警戒&#x27;&#125;,</span><br><span class="line">          &#123;id:&#x27;asgdytsa04&#x27;,name:&#x27;斗罗大陆&#x27;&#125;</span><br><span class="line">        ])</span><br><span class="line">      &lt;/script&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;常见通信方式总和&quot;&gt;&lt;a href=&quot;#常见通信方式总和&quot; class=&quot;headerlink&quot; title=&quot;常见通信方式总和&quot;&gt;&lt;/a&gt;常见通信方式总和&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;https://s2.loli.net/2024/04/12/hbIKV</summary>
      
    
    
    
    
    <category term="vue3" scheme="http://baiyi-ing.github.io/tags/vue3/"/>
    
  </entry>
  
  <entry>
    <title>vscode与微信开发工具进uniapp开发</title>
    <link href="http://baiyi-ing.github.io/2024/04/10/vscode%E4%B8%8E%E5%BE%AE%E4%BF%A1%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E8%BF%9B%E8%A1%8Cuniapp%E5%BC%80%E5%8F%91/"/>
    <id>http://baiyi-ing.github.io/2024/04/10/vscode%E4%B8%8E%E5%BE%AE%E4%BF%A1%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7%E8%BF%9B%E8%A1%8Cuniapp%E5%BC%80%E5%8F%91/</id>
    <published>2024-04-10T13:00:26.000Z</published>
    <updated>2024-04-12T08:20:31.721Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建下载程序包"><a href="#创建下载程序包" class="headerlink" title="创建下载程序包"></a>创建下载程序包</h1><p>1、命令安装vue-cil</p><p>在nodejs版本安装没有问题的情况之下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g @vue/cli</span><br></pre></td></tr></table></figure><p>2、创建ts开发工程</p><p>以下命令可能会不成功，可以去<a href="https://gitee.com/dcloud/uni-preset-vue/repository/archive/vite-ts.zip">官网下载</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx degit dcloudio/uni-preset-vue#vite-ts my-vue3-project</span><br></pre></td></tr></table></figure><p>3、解决vscode报错</p><p>在步骤2之后，会有响应的压缩包，解压后可以使用vscode打开，然后使用以下命令进行初始化(如果不成功，建议你用管理员权限打开windows powershell，然后跳转到这个文件，再执行下面的命令)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p>4、若还有其他报错</p><p>有这类问题再这样处理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;preserveValueImports&quot;: false,</span><br><span class="line">&quot;importsNotUsedAsValues&quot;: &quot;remove&quot;,</span><br></pre></td></tr></table></figure><h1 id="使用微信开发者工具"><a href="#使用微信开发者工具" class="headerlink" title="使用微信开发者工具"></a>使用微信开发者工具</h1><p>在vscode的终端中运行这个微信小程序</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run dev:mp-weixin</span><br></pre></td></tr></table></figure><p>打开微信开发者工具，把地址选入到如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">XXXX(您的文件地址)+dis\dev\mp-weixin</span><br><span class="line">C:\Users\HP\Desktop\wx-gh\dist\dev\mp-weixin</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;创建下载程序包&quot;&gt;&lt;a href=&quot;#创建下载程序包&quot; class=&quot;headerlink&quot; title=&quot;创建下载程序包&quot;&gt;&lt;/a&gt;创建下载程序包&lt;/h1&gt;&lt;p&gt;1、命令安装vue-cil&lt;/p&gt;
&lt;p&gt;在nodejs版本安装没有问题的情况之下&lt;/p&gt;
&lt;fig</summary>
      
    
    
    
    
    <category term="uniapp" scheme="http://baiyi-ing.github.io/tags/uniapp/"/>
    
    <category term="小程序" scheme="http://baiyi-ing.github.io/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>git创建分支与更新备份</title>
    <link href="http://baiyi-ing.github.io/2024/04/03/git%E7%9A%84%E4%BD%BF%E7%94%A8/git%E5%88%9B%E5%BB%BA%E5%88%86%E6%94%AF%E4%B8%8E%E6%9B%B4%E6%96%B0%E5%A4%87%E4%BB%BD/"/>
    <id>http://baiyi-ing.github.io/2024/04/03/git%E7%9A%84%E4%BD%BF%E7%94%A8/git%E5%88%9B%E5%BB%BA%E5%88%86%E6%94%AF%E4%B8%8E%E6%9B%B4%E6%96%B0%E5%A4%87%E4%BB%BD/</id>
    <published>2024-04-03T11:16:40.000Z</published>
    <updated>2024-04-09T07:01:40.520Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h1><h2 id="检查分支"><a href="#检查分支" class="headerlink" title="检查分支"></a>检查分支</h2><p>检查分支情况，笔者只有一个master根</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git branch </span><br><span class="line">* master</span><br></pre></td></tr></table></figure><h2 id="创建分支-1"><a href="#创建分支-1" class="headerlink" title="创建分支"></a>创建分支</h2><p><strong>第一种：创建分支命令（不跳转）</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#创建分支，名字叫第一个分支</span><br><span class="line">$ git branch 第一个分支</span><br><span class="line">#检查分支情况</span><br><span class="line">$ git branch</span><br><span class="line">* master</span><br><span class="line">  第一个分支</span><br></pre></td></tr></table></figure><p><strong>第二种：创建一个分支并跳转到这个分支</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -b 第二个分支</span><br></pre></td></tr></table></figure><h2 id="推送到git"><a href="#推送到git" class="headerlink" title="推送到git"></a>推送到git</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin 分支名</span><br></pre></td></tr></table></figure><h2 id="gitee界面"><a href="#gitee界面" class="headerlink" title="gitee界面"></a>gitee界面</h2><p><img src="https://s2.loli.net/2024/04/03/7cpHqQPb9reWd36.png" alt="image.png"></p><h1 id="更新备份"><a href="#更新备份" class="headerlink" title="更新备份"></a>更新备份</h1><h2 id="文件选择"><a href="#文件选择" class="headerlink" title="文件选择"></a>文件选择</h2><p>先让要备份的文件使用git init，开始使用git,这个文件会有绿点。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2024/04/03/QgunJt9COXomxdc.png" alt="image.png"></p><h2 id="选择备份分支"><a href="#选择备份分支" class="headerlink" title="选择备份分支"></a>选择备份分支</h2><p>笔者先择master分支</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout master</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2024/04/03/goOIzNHBrd7iXcy.png" alt="image.png"></p><h2 id="注意情况"><a href="#注意情况" class="headerlink" title="注意情况"></a>注意情况</h2><p><a href="https://blog.csdn.net/qq_22841387/article/details/123870533">git romote -v 没有任何内容时需要的操作</a></p><h2 id="备份操作"><a href="#备份操作" class="headerlink" title="备份操作"></a>备份操作</h2><p>将修改文件加入缓存</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br></pre></td></tr></table></figure><p>查看本地未被备份的修改或刚初始化文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git status</span><br></pre></td></tr></table></figure><p>提交到本地仓库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m 文件描述</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2024/04/03/ZvPkc5HzQL2hiEt.png" alt="image.png"></p><p>上传到git中的master分支</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure><h1 id="push不能成功情况"><a href="#push不能成功情况" class="headerlink" title="push不能成功情况"></a>push不能成功情况</h1><h2 id="1-分支没更新"><a href="#1-分支没更新" class="headerlink" title="1.分支没更新"></a>1.分支没更新</h2><p>注意：这样还是不能push，就看怎么删除commit（一般push不成功可能是同时commit了一份相同变化的文件）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push -u origin 分支名</span><br></pre></td></tr></table></figure><h2 id="2-commit没push又不想要了"><a href="#2-commit没push又不想要了" class="headerlink" title="2.commit没push又不想要了"></a>2.commit没push又不想要了</h2><p>常见报错不能push成功</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">error</span>: src refspec commit does not match any <span class="attr">error</span>: failed to push some refs to</span><br></pre></td></tr></table></figure><p>查看commit的东西</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log</span><br></pre></td></tr></table></figure><p>可以发现出现了HEAD有多个黄标的<strong>commit+id</strong>，<strong>按q退出</strong></p><p><strong>选择1：删除所有</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#add,commit都不要了</span><br><span class="line">git reset --hard HEAD^</span><br><span class="line">#只不要commit</span><br><span class="line">git reset --soft HEAD^</span><br></pre></td></tr></table></figure><p><strong>选择2：删除特定</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#add,commit都不要了</span><br><span class="line">git reset --hard id</span><br><span class="line">#只不要commit</span><br><span class="line">git reset --soft id</span><br></pre></td></tr></table></figure><h2 id="3-push后改名"><a href="#3-push后改名" class="headerlink" title="3.push后改名"></a>3.push后改名</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#本地改名</span><br><span class="line">git commit --amend -m 刚刚push了想改的的新名字</span><br><span class="line">#强制推送改名</span><br><span class="line">git push --force-with-lease origin master</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;创建分支&quot;&gt;&lt;a href=&quot;#创建分支&quot; class=&quot;headerlink&quot; title=&quot;创建分支&quot;&gt;&lt;/a&gt;创建分支&lt;/h1&gt;&lt;h2 id=&quot;检查分支&quot;&gt;&lt;a href=&quot;#检查分支&quot; class=&quot;headerlink&quot; title=&quot;检查分支&quot;&gt;&lt;/a</summary>
      
    
    
    
    
    <category term="git" scheme="http://baiyi-ing.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>git删除本地分支</title>
    <link href="http://baiyi-ing.github.io/2024/04/03/git%E7%9A%84%E4%BD%BF%E7%94%A8/git%E5%88%A0%E9%99%A4%E6%9C%AC%E5%9C%B0%E5%88%86%E6%94%AF/"/>
    <id>http://baiyi-ing.github.io/2024/04/03/git%E7%9A%84%E4%BD%BF%E7%94%A8/git%E5%88%A0%E9%99%A4%E6%9C%AC%E5%9C%B0%E5%88%86%E6%94%AF/</id>
    <published>2024-04-03T11:02:43.000Z</published>
    <updated>2024-04-09T07:01:40.522Z</updated>
    
    <content type="html"><![CDATA[<h1 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h1><p>在gitee中删除了相关分支以后，本地分支依旧还有相关的分支被保留了。</p><img src="https://s2.loli.net/2024/04/03/3wSWCadxur5BUmH.png" alt="image.png" style="zoom: 67%;" /><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git branch</span><br><span class="line">* 02_一个简单的效果</span><br><span class="line">  master</span><br></pre></td></tr></table></figure><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>使用相关的删除命令发现被拒绝删除这条分支。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -d 02_一个简单的效果</span><br><span class="line">error: Cannot delete branch &#x27;02_一个简单的效果&#x27; checked out at &#x27;D:/前端/vue3学习/shanghuigu_vue3/src&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>是因为当前目录还在要删除的这条分支上，所以被拒绝删除操作。</p><p>只要跳转到其他不要删除的分支上就可以了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout master</span><br><span class="line">Switched to branch &#x27;master&#x27;</span><br></pre></td></tr></table></figure><p>删除成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git branch -D 02_一个简单的效果</span><br><span class="line">Deleted branch 02_一个简单的效果 (was d5a3594).</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;现象&quot;&gt;&lt;a href=&quot;#现象&quot; class=&quot;headerlink&quot; title=&quot;现象&quot;&gt;&lt;/a&gt;现象&lt;/h1&gt;&lt;p&gt;在gitee中删除了相关分支以后，本地分支依旧还有相关的分支被保留了。&lt;/p&gt;
&lt;img src=&quot;https://s2.loli.net/</summary>
      
    
    
    
    
    <category term="git" scheme="http://baiyi-ing.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>ts学习</title>
    <link href="http://baiyi-ing.github.io/2024/04/02/ts%E5%AD%A6%E4%B9%A0/"/>
    <id>http://baiyi-ing.github.io/2024/04/02/ts%E5%AD%A6%E4%B9%A0/</id>
    <published>2024-04-02T10:50:44.000Z</published>
    <updated>2024-04-02T10:51:03.743Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>uniapp常见命令</title>
    <link href="http://baiyi-ing.github.io/2024/03/24/uniapp%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4/"/>
    <id>http://baiyi-ing.github.io/2024/03/24/uniapp%E5%B8%B8%E8%A7%81%E5%91%BD%E4%BB%A4/</id>
    <published>2024-03-24T11:39:25.000Z</published>
    <updated>2024-04-02T10:51:03.745Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>小程序基础</title>
    <link href="http://baiyi-ing.github.io/2024/03/24/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%9F%BA%E7%A1%80/"/>
    <id>http://baiyi-ing.github.io/2024/03/24/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%9F%BA%E7%A1%80/</id>
    <published>2024-03-24T06:51:01.000Z</published>
    <updated>2024-03-24T08:28:10.300Z</updated>
    
    <content type="html"><![CDATA[<h1 id="微信小程序基础"><a href="#微信小程序基础" class="headerlink" title="微信小程序基础"></a>微信小程序基础</h1><h2 id="常见标签"><a href="#常见标签" class="headerlink" title="常见标签"></a>常见标签</h2><h3 id="view视图"><a href="#view视图" class="headerlink" title="view视图"></a>view视图</h3><!--view相当于div、p，可以一站一行--><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="text文章"><a href="#text文章" class="headerlink" title="text文章"></a>text文章</h3><p>selcectable属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--text相当于span，selectable文档是否可选--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">selectable</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br></pre></td></tr></table></figure><p>decode属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--decode为译码如nbsp/lt/gt/amp/apos/ensp/emsp--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">decode</span>&gt;</span>世界<span class="symbol">&amp;nbsp;</span>你好<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="button按钮"><a href="#button按钮" class="headerlink" title="button按钮"></a>button按钮</h3><h4 id="type属性"><a href="#type属性" class="headerlink" title="type属性"></a>type属性</h4><p>primary首选按钮</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>primary<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>default默认按钮</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;default&quot;</span>&gt;</span>default<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>warn警告</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;warn&quot;</span>&gt;</span>warn<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="open-type属性"><a href="#open-type属性" class="headerlink" title="open-type属性"></a>open-type属性</h4><p>getPhoneNumber获取电话</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">open-type</span>=<span class="string">&quot;getPhoneNumber&quot;</span>&gt;</span>PhoneNumber<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>getUserInfo获取用户信息</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">open-type</span>=<span class="string">&quot;getUserInfo&quot;</span>&gt;</span>getUserInfo<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>contact客服</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">open-type</span>=<span class="string">&quot;contact&quot;</span>&gt;</span>contact<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="checkbox复选"><a href="#checkbox复选" class="headerlink" title="checkbox复选"></a>checkbox复选</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--复选框--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">checkbox-group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">checkbox</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">checkbox</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">checkbox-group</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="radio单选"><a href="#radio单选" class="headerlink" title="radio单选"></a>radio单选</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">radio-group</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--单选框--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">radio</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">radio</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">radio-group</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="block分块"><a href="#block分块" class="headerlink" title="block分块"></a>block分块</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--block里的标签属于一体，拆分过多标签堆积--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">block</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">style</span>=<span class="string">&quot;margin-right: 6px;&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">style</span>=<span class="string">&quot;margin-right: 6px;&quot;</span>&gt;</span>物品<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="input输入"><a href="#input输入" class="headerlink" title="input输入"></a>input输入</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--input--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">password</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">disabled</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入&quot;</span> <span class="attr">placeholder-class</span>=<span class="string">&quot;ph-style&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="事件绑定"><a href="#事件绑定" class="headerlink" title="事件绑定"></a>事件绑定</h2><p>bindinput相当于vue中的v-model实现双向数据绑定糖衣炮弹</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--绑定事件--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--bindinput实现双向绑定,data-来帮助传参--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">bindinput</span>=<span class="string">&quot;ChangeMe&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;clickMe&quot;</span> <span class="attr">data-val1</span>=<span class="string">&quot;1&quot;</span> <span class="attr">data-test</span>=<span class="string">&quot;2&quot;</span> &gt;</span>点击我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123;msg&#125;&#125; <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">page</span>(&#123;</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">  <span class="attr">msg</span>:<span class="string">&quot;原始数据&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line">    <span class="title class_">ChangeMe</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;文本框变了&quot;</span>);</span><br><span class="line">&#125;,</span><br><span class="line">    <span class="comment">//value.currentTarget.dataset可以获取data-的数据</span></span><br><span class="line"><span class="attr">clickMe</span>:<span class="keyword">function</span>(<span class="params">value</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(value.<span class="property">currentTarget</span>.<span class="property">dataset</span>);</span><br><span class="line">&#125;</span><br><span class="line">)&#125;</span><br></pre></td></tr></table></figure><h2 id="数据绑定"><a href="#数据绑定" class="headerlink" title="数据绑定"></a>数据绑定</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--数据绑定MVVM--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--model数据，v是view视图，vm是指page里面内容，是指vm中的一种协调数据和视图的功能--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;clickMe2&quot;</span>&gt;</span>点击我2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">page</span>(&#123;</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">  <span class="attr">msg</span>:<span class="string">&quot;原始数据&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line">    <span class="attr">clickMe2</span>:<span class="keyword">function</span>(<span class="params">event</span>)&#123;</span><br><span class="line">  <span class="comment">//只改变数据，不改变视图</span></span><br><span class="line">  <span class="comment">// this.data.msg=&quot;原始数据改变了，视图不变&quot;;</span></span><br><span class="line">  <span class="comment">//视图数据于真实数据一起改变</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">    <span class="attr">msg</span>:<span class="string">&quot;原始数据的内容和视图内容都发生了改变&quot;</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">msg</span>);</span><br><span class="line">&#125;,</span><br><span class="line">)&#125;</span><br></pre></td></tr></table></figure><h2 id="微信API调用"><a href="#微信API调用" class="headerlink" title="微信API调用"></a>微信API调用</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--微信API调用--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--获取用户的信息不能使用bindtap来绑定事件，而是使用bindgetuserInfo--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--将open-type=&quot;getUserInfo&quot;属性获得的用户数据给到绑定事件getUserInfo--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">open-type</span>=<span class="string">&quot;getUserInfo&quot;</span> <span class="attr">bindgetuserinfo</span>=<span class="string">&quot;getUserInfo&quot;</span>&gt;</span>获取用户信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">open-type</span>=<span class="string">&quot;getPhoneNumber&quot;</span> <span class="attr">bindgetphonenumber</span>=<span class="string">&quot;getPhoneNumber&quot;</span>&gt;</span>获取电话<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">open-type</span>=<span class="string">&quot;contact&quot;</span> <span class="attr">bindcontact</span>=<span class="string">&quot;getContact&quot;</span>&gt;</span>联系客服<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">page</span>(&#123;</span><br><span class="line">    <span class="comment">//获取用户信息</span></span><br><span class="line"><span class="title function_">getUserInfo</span>(<span class="params">e</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(e)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//获取用户电话</span></span><br><span class="line"><span class="title function_">getPhoneNumber</span>(<span class="params">e</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(e);</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//联系客服</span></span><br><span class="line"><span class="title function_">getContact</span>(<span class="params">e</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(e);</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="富文本标签"><a href="#富文本标签" class="headerlink" title="富文本标签"></a>富文本标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--富文本控件使用rich-text--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--该标签类似于vue中的v-html可以用来放标签事件而不是单纯的文本---&gt;</span></span><br><span class="line"><span class="comment">&lt;!--img标签只认网络图片，站内路径不会被认识--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">rich-text</span> <span class="attr">nodes</span>=<span class="string">&quot;&#123;&#123;msg2&#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">rich-text</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">page</span>(&#123;</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line"> <span class="attr">msg2</span>:<span class="string">&quot;&lt;b&gt;加粗&lt;/b&gt;&lt;p style=&#x27;color:red&#x27;&gt;变红&lt;/p&gt;&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line">)&#125;</span><br></pre></td></tr></table></figure><h2 id="微信弹窗"><a href="#微信弹窗" class="headerlink" title="微信弹窗"></a>微信弹窗</h2><h3 id="弹窗样式"><a href="#弹窗样式" class="headerlink" title="弹窗样式"></a>弹窗样式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--小程序弹窗功能--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;showAlert&quot;</span>&gt;</span>弹窗按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//弹窗的使用</span></span><br><span class="line"><span class="comment">//一个弹窗事件只能有一次弹窗，如果有两次事件，会被后面的覆盖掉</span></span><br><span class="line"><span class="title function_">showAlert</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="comment">//icon状态:loading(加载)、success（成功选中）、none（提示），duration持续两秒</span></span><br><span class="line">  wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&#x27;成功&#x27;</span>,</span><br><span class="line">    <span class="attr">icon</span>:<span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">    <span class="attr">duration</span>:<span class="number">2000</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="comment">//showloading是一种icon为loading的简写</span></span><br><span class="line">  wx.<span class="title function_">showLoading</span>(&#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&#x27;加载中&#x27;</span>,</span><br><span class="line">    <span class="attr">duration</span>:<span class="number">2000</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="comment">//模式窗体二选一</span></span><br><span class="line">  wx.<span class="title function_">showModal</span>(&#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&#x27;提示&#x27;</span>,</span><br><span class="line">    <span class="attr">content</span>: <span class="string">&#x27;这是一个模式框&#x27;</span>,</span><br><span class="line">    <span class="attr">complete</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (res.<span class="property">cancel</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;点击了取消&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="keyword">if</span> (res.<span class="property">confirm</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;点击了确定&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="弹窗跳转"><a href="#弹窗跳转" class="headerlink" title="弹窗跳转"></a>弹窗跳转</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--页面跳转--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;navi&quot;</span>&gt;</span>页面跳转<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//弹窗跳转</span></span><br><span class="line"><span class="title function_">navi</span>(<span class="params"></span>)&#123;</span><br><span class="line">  wx.<span class="title function_">navigateTo</span>(&#123;</span><br><span class="line">    <span class="comment">//不要选定test.wxml是不会默认跳转的</span></span><br><span class="line">    <span class="comment">//当前页面传参到另外的页面?id=1</span></span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/pages/test1/test1?id=1&#x27;</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="弹窗前后端交互"><a href="#弹窗前后端交互" class="headerlink" title="弹窗前后端交互"></a>弹窗前后端交互</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&#x27;getData&#x27;</span>&gt;</span>获取后端数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//弹窗实现前后端交互request</span></span><br><span class="line"><span class="title function_">getData</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> that=<span class="variable language_">this</span>;</span><br><span class="line">  wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="comment">//获取后端数据jobs类</span></span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;http://localhost:10737//jobs&#x27;</span>,</span><br><span class="line">    <span class="comment">//request是一个回调函数，this并不能获取到相关的数据,要用that变量作为中转来实现交互</span></span><br><span class="line">    <span class="title function_">success</span>(<span class="params">res</span>)&#123;</span><br><span class="line">      <span class="keyword">var</span> data = res.<span class="property">data</span>;</span><br><span class="line">      that.<span class="title function_">setData</span>(&#123;</span><br><span class="line">        <span class="attr">jobs</span>:data</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(that.<span class="property">data</span>.<span class="property">jobs</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;微信小程序基础&quot;&gt;&lt;a href=&quot;#微信小程序基础&quot; class=&quot;headerlink&quot; title=&quot;微信小程序基础&quot;&gt;&lt;/a&gt;微信小程序基础&lt;/h1&gt;&lt;h2 id=&quot;常见标签&quot;&gt;&lt;a href=&quot;#常见标签&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    
    <category term="微信小程序" scheme="http://baiyi-ing.github.io/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    <category term="前端" scheme="http://baiyi-ing.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>vue学习</title>
    <link href="http://baiyi-ing.github.io/2024/03/04/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/vue%E5%AD%A6%E4%B9%A0/"/>
    <id>http://baiyi-ing.github.io/2024/03/04/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/vue%E5%AD%A6%E4%B9%A0/</id>
    <published>2024-03-04T10:27:37.000Z</published>
    <updated>2024-03-24T07:59:30.130Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vue基础学习"><a href="#vue基础学习" class="headerlink" title="vue基础学习"></a>vue基础学习</h1><h2 id="1-创建一个vue程序"><a href="#1-创建一个vue程序" class="headerlink" title="1.创建一个vue程序"></a>1.创建一个vue程序</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;vue基础学习&quot;&gt;&lt;a href=&quot;#vue基础学习&quot; class=&quot;headerlink&quot; title=&quot;vue基础学习&quot;&gt;&lt;/a&gt;vue基础学习&lt;/h1&gt;&lt;h2 id=&quot;1-创建一个vue程序&quot;&gt;&lt;a href=&quot;#1-创建一个vue程序&quot; class=&quot;he</summary>
      
    
    
    
    
    <category term="前端" scheme="http://baiyi-ing.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>C-排队</title>
    <link href="http://baiyi-ing.github.io/2022/07/02/ACwing/C-%E6%8E%92%E9%98%9F/"/>
    <id>http://baiyi-ing.github.io/2022/07/02/ACwing/C-%E6%8E%92%E9%98%9F/</id>
    <published>2022-07-02T08:03:45.000Z</published>
    <updated>2024-03-24T07:59:30.124Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C-排队"><a href="#C-排队" class="headerlink" title="C-排队"></a>C-排队</h1><p>链接：<a href="https://atcoder.jp/contests/arc133/tasks/arc133_b?lang=en">https://atcoder.jp/contests/arc133/tasks/arc133_b?lang=en</a></p><p>来源：AtCoder Regular Contest 133</p><hr><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><img src="https://s2.loli.net/2022/07/02/xSN2hleoYzOyBGP.png" alt="image.png"></p><p><img src="https://s2.loli.net/2022/07/02/JWItFHfay19kp6M.png" alt="image.png"></p><h3 id="样例一"><a href="#样例一" class="headerlink" title="样例一"></a>样例一</h3><p><strong>输入</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">3 1 4 2</span><br><span class="line">4 2 1 3</span><br></pre></td></tr></table></figure><p><strong>输出</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h3 id="样例二"><a href="#样例二" class="headerlink" title="样例二"></a>样例二</h3><p><strong>输入</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">1 2 3 4 5</span><br><span class="line">5 4 3 2 1</span><br></pre></td></tr></table></figure><p><strong>输出</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h3 id="样例三"><a href="#样例三" class="headerlink" title="样例三"></a>样例三</h3><p><strong>输入</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">10</span><br><span class="line">4 3 1 10 9 2 8 6 5 7</span><br><span class="line">9 6 5 4 2 3 8 10 1 7</span><br></pre></td></tr></table></figure><p><strong>输出</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure><h2 id="算法描述"><a href="#算法描述" class="headerlink" title="算法描述"></a>算法描述</h2><p>本题使用<a href="https://baiyi-ing.github.io/2022/06/28/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95%E7%9F%A5%E8%AF%86/ACwing896-%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97%EF%BC%882%EF%BC%89/">LIS（2）（最长上升子序列）</a>算法求解</p><p>首先求出在数组b中所有a[i]的倍数的<strong>下标</strong>全部存子入链表中，再对子链表进行<strong>从大到小排序</strong>（这一步很关键，因为从大到小排序在进行寻找最长上升子序列时才能正确的找寻到结果）</p><h2 id="笔者代码"><a href="#笔者代码" class="headerlink" title="笔者代码"></a>笔者代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(<span class="keyword">new</span> <span class="title class_">BufferedInputStream</span>(System.in));</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">sc</span><span class="params">()</span>&#123;<span class="keyword">return</span> sc.nextInt();&#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span> <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PrintWriter</span>(<span class="keyword">new</span> <span class="title class_">OutputStreamWriter</span>(System.out));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> (<span class="type">int</span>)<span class="number">2e5</span>+<span class="number">10</span>,P = <span class="number">131</span>,MOD = (<span class="type">int</span>)<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line">    <span class="keyword">static</span>  <span class="type">int</span> n;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span>[] b = <span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">    <span class="comment">//使用h来储存各个数字的下标</span></span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span>[] h = <span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> INF= <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        n = sc();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;i&lt;=n;i++)&#123;a[i]=sc();&#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            b[i]=sc();</span><br><span class="line">            <span class="comment">//记录b[i]值的下标</span></span><br><span class="line">            h[b[i]] = i;</span><br><span class="line">           <span class="comment">// out.print(h[b[i]]+&quot; &quot;);</span></span><br><span class="line">        &#125; </span><br><span class="line">        List&lt;Integer&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">       </span><br><span class="line">        <span class="type">int</span> len=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span>[] dp = <span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">        dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">             <span class="comment">//寻找该数的所有在b中有倍数的下标</span></span><br><span class="line">             list.addAll(find(a[i]));</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line">         <span class="comment">//进行二分求最长上升子序列，因为我们需要存储合法的序列的下标只有在下标满足上升规则的时候才能使用</span></span><br><span class="line">         <span class="comment">//对每个下标进行排序</span></span><br><span class="line">         <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i&lt;list.size();i++)&#123;</span><br><span class="line">            <span class="comment">//out.print(list.get(i)+&quot; &quot;);</span></span><br><span class="line">            <span class="type">int</span> l=<span class="number">0</span>,r = len;</span><br><span class="line">             <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">                 <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> l+r+<span class="number">1</span>&gt;&gt;<span class="number">1</span>;</span><br><span class="line">                 <span class="keyword">if</span>(list.get(i)&gt;dp[mid])&#123;</span><br><span class="line">                     l = mid;</span><br><span class="line">                 &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                     r = mid-<span class="number">1</span>;</span><br><span class="line">                 &#125;</span><br><span class="line">                </span><br><span class="line">             &#125;</span><br><span class="line">             len = Math.max(len,r+<span class="number">1</span>);</span><br><span class="line">                 </span><br><span class="line">             dp[r+<span class="number">1</span>] = list.get(i);</span><br><span class="line">            <span class="comment">// out.println(r+&quot; &quot;+len);</span></span><br><span class="line">         &#125;</span><br><span class="line">       </span><br><span class="line">        out.println(len);</span><br><span class="line">        out.close();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;Integer&gt;find(<span class="type">int</span> num)&#123;</span><br><span class="line">        List&lt;Integer&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        <span class="comment">//由于数字范围为1~n，所以我们在1~n范围内开始寻找</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">1</span>;k*num&lt;=n;k++)&#123;</span><br><span class="line">            <span class="comment">//添加该数字的下标</span></span><br><span class="line">            list.add(h[num*k]);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//从大到小排序下表链表，因为为了对后续的二分做准备</span></span><br><span class="line">        <span class="comment">//因为这种情况下最多会添加一个数，进入上升排列数组中。</span></span><br><span class="line">         Collections.sort(list,(o1,o2)-&gt;o2-o1);</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;C-排队&quot;&gt;&lt;a href=&quot;#C-排队&quot; class=&quot;headerlink&quot; title=&quot;C-排队&quot;&gt;&lt;/a&gt;C-排队&lt;/h1&gt;&lt;p&gt;链接：&lt;a href=&quot;https://atcoder.jp/contests/arc133/tasks/arc133_b?</summary>
      
    
    
    
    
    <category term="LIS" scheme="http://baiyi-ing.github.io/tags/LIS/"/>
    
    <category term="二分" scheme="http://baiyi-ing.github.io/tags/%E4%BA%8C%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>ACwing896-最长上升子序列（2）</title>
    <link href="http://baiyi-ing.github.io/2022/06/28/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95%E7%9F%A5%E8%AF%86/ACwing896-%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97%EF%BC%882%EF%BC%89/"/>
    <id>http://baiyi-ing.github.io/2022/06/28/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95%E7%9F%A5%E8%AF%86/ACwing896-%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97%EF%BC%882%EF%BC%89/</id>
    <published>2022-06-28T15:55:53.000Z</published>
    <updated>2022-06-29T03:06:45.110Z</updated>
    
    <content type="html"><![CDATA[<h1 id="最长上升子序列（2）"><a href="#最长上升子序列（2）" class="headerlink" title="最长上升子序列（2）"></a>最长上升子序列（2）</h1><p>链接：<a href="https://www.acwing.com/problem/content/898/">https://www.acwing.com/problem/content/898/</a></p><p>来源：ACWing 算法基础课</p><hr><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一个长度为 N 的数列，求数值严格单调递增的子序列的长度最长是多少。</p><p><strong>输入格式</strong></p><p>第一行包含整数 N。</p><p>第二行包含 N 个整数，表示完整序列。</p><p><strong>输出格式</strong></p><p>输出一个整数，表示最大长度。</p><p><strong>数据范围</strong></p><p>1≤N≤100000<br>−109≤数列中的数≤109</p><p><strong>输入样例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">7</span><br><span class="line">3 1 2 1 8 5 6</span><br></pre></td></tr></table></figure><p><strong>输出样例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><h2 id="算法描述"><a href="#算法描述" class="headerlink" title="算法描述"></a>算法描述</h2><p>本题数据范围较大，不宜使用<strong>双层for循环+DP</strong>的方法进行编写。</p><p>则采用优化进阶版的<strong>二分算法</strong>来进行编写</p><h3 id="状态表示"><a href="#状态表示" class="headerlink" title="状态表示"></a>状态表示</h3><p>找到相应的上升子序列长度结尾的最小值，每次都这样找的话就可以找到一个呈现递增状态的数组，递增状态的属性满足了使用二分的基本规则</p><h3 id="状态计算（集合划分）"><a href="#状态计算（集合划分）" class="headerlink" title="状态计算（集合划分）"></a>状态计算（集合划分）</h3><ol><li><p>使用dp[len]来记录当0~len各个长度下的最小值</p></li><li><p>当a[i]&gt;dp[len]中的所有值时，len的长度要增加</p></li><li><p>更新a[i]成为1~len的某个长度下的最小值</p></li></ol><h2 id="笔者代码"><a href="#笔者代码" class="headerlink" title="笔者代码"></a>笔者代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 白依</span></span><br><span class="line"><span class="comment"> * 思路整理结果:二分小于某个数的最大的数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> <span class="number">100010</span>;</span><br><span class="line">        <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">        <span class="type">int</span>[] q = <span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            arr[i] = scanner.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">         q[<span class="number">0</span>] = Integer.MAX_VALUE;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="type">int</span> l=<span class="number">0</span>,r=len;</span><br><span class="line">            <span class="keyword">while</span> (l&lt;r)&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> <span class="number">1</span>+l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(q[mid]&lt;arr[i])&#123;</span><br><span class="line">                    l = mid;</span><br><span class="line">                &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">                    r=mid-<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            len = Math.max(len,r+<span class="number">1</span>);</span><br><span class="line">            q[r+<span class="number">1</span>] = arr[i];</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(len);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;最长上升子序列（2）&quot;&gt;&lt;a href=&quot;#最长上升子序列（2）&quot; class=&quot;headerlink&quot; title=&quot;最长上升子序列（2）&quot;&gt;&lt;/a&gt;最长上升子序列（2）&lt;/h1&gt;&lt;p&gt;链接：&lt;a href=&quot;https://www.acwing.com/pro</summary>
      
    
    
    
    
    <category term="LIS" scheme="http://baiyi-ing.github.io/tags/LIS/"/>
    
    <category term="二分" scheme="http://baiyi-ing.github.io/tags/%E4%BA%8C%E5%88%86/"/>
    
    <category term="DP" scheme="http://baiyi-ing.github.io/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>ACwing895-最长上升子序列</title>
    <link href="http://baiyi-ing.github.io/2022/06/28/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95%E7%9F%A5%E8%AF%86/ACwing895-%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/"/>
    <id>http://baiyi-ing.github.io/2022/06/28/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95%E7%9F%A5%E8%AF%86/ACwing895-%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/</id>
    <published>2022-06-28T15:55:36.000Z</published>
    <updated>2022-06-29T03:04:43.629Z</updated>
    
    <content type="html"><![CDATA[<h1 id="最长上升子序列"><a href="#最长上升子序列" class="headerlink" title="最长上升子序列"></a>最长上升子序列</h1><p>链接：<a href="https://www.acwing.com/problem/content/897/">https://www.acwing.com/problem/content/897/</a></p><p>来源：ACWing 算法基础课</p><hr><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一个长度为 N 的数列，求数值严格单调递增的子序列的长度最长是多少。</p><p><strong>输入格式</strong></p><p>第一行包含整数 N。</p><p>第二行包含 N 个整数，表示完整序列。</p><p><strong>输出格式</strong></p><p>输出一个整数，表示最大长度。</p><p><strong>数据范围</strong></p><p>1≤N≤1000<br>−109≤数列中的数≤109</p><p><strong>输入样例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">7</span><br><span class="line">3 1 2 1 8 5 6</span><br></pre></td></tr></table></figure><p><strong>输出样例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><h2 id="算法描述"><a href="#算法描述" class="headerlink" title="算法描述"></a>算法描述</h2><p>本题数据范围较小，可以使用<strong>双层for循环+DP</strong>进行编写。</p><h3 id="状态表示"><a href="#状态表示" class="headerlink" title="状态表示"></a>状态表示</h3><p>f[i]表示以a[0]开始到a[i]的最大上升子序列的长度。</p><h3 id="状态计算（集合划分）"><a href="#状态计算（集合划分）" class="headerlink" title="状态计算（集合划分）"></a>状态计算（集合划分）</h3><p>判断是否上升</p><ol><li>如果当前数a[i]大于其前面的数a[j],则说明两数符合上升规则</li><li>在符合上升规则时，再用dp[j]+1与当前的dp[i]的值作比较，不断更新dp[i]的值，再遍历完后顺利找到0 ~ i-1范围内的最大值，则值f[i]的值</li></ol><h2 id="笔者代码"><a href="#笔者代码" class="headerlink" title="笔者代码"></a>笔者代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1010</span>];</span><br><span class="line">        <span class="type">int</span>[] f = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1010</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            a[i] = scanner.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n ; i++) &#123;</span><br><span class="line">            f[i] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt; i; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[j] &lt; a[i])&#123;</span><br><span class="line">                    f[i] = Math.max(f[i],f[j]+<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n ; i++) &#123;</span><br><span class="line">            res = Math.max(f[i],res);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(res);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;最长上升子序列&quot;&gt;&lt;a href=&quot;#最长上升子序列&quot; class=&quot;headerlink&quot; title=&quot;最长上升子序列&quot;&gt;&lt;/a&gt;最长上升子序列&lt;/h1&gt;&lt;p&gt;链接：&lt;a href=&quot;https://www.acwing.com/problem/content</summary>
      
    
    
    
    
    <category term="LIS" scheme="http://baiyi-ing.github.io/tags/LIS/"/>
    
    <category term="DP" scheme="http://baiyi-ing.github.io/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>ACwing897-最长公共子序列</title>
    <link href="http://baiyi-ing.github.io/2022/06/28/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95%E7%9F%A5%E8%AF%86/ACwing897-%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/"/>
    <id>http://baiyi-ing.github.io/2022/06/28/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95%E7%9F%A5%E8%AF%86/ACwing897-%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/</id>
    <published>2022-06-28T15:55:07.000Z</published>
    <updated>2022-06-29T03:04:43.631Z</updated>
    
    <content type="html"><![CDATA[<h1 id="最长公共子序列"><a href="#最长公共子序列" class="headerlink" title="最长公共子序列"></a>最长公共子序列</h1><p>链接：<a href="https://www.acwing.com/problem/content/898/">https://www.acwing.com/problem/content/898/</a></p><p>来源：ACWing 算法基础课</p><hr><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定两个长度分别为 N 和 M 的字符串 A 和 B，求既是 A 的子序列又是 B 的子序列的字符串长度最长是多少。</p><p><strong>输入格式</strong></p><p>第一行包含两个整数 N 和 M。</p><p>第二行包含一个长度为 N 的字符串，表示字符串 A。</p><p>第三行包含一个长度为 M 的字符串，表示字符串 B。</p><p>字符串均由小写字母构成。</p><p><strong>输出格式</strong></p><p>输出一个整数，表示最大长度。</p><p><strong>数据范围</strong></p><p>1≤N,M≤1000</p><p><strong>输入样例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">4 5</span><br><span class="line">acbd</span><br><span class="line">abedc</span><br></pre></td></tr></table></figure><p><strong>输出样例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h2 id="算法描述"><a href="#算法描述" class="headerlink" title="算法描述"></a>算法描述</h2><h3 id="状态表示"><a href="#状态表示" class="headerlink" title="状态表示"></a>状态表示</h3><p>本题使用二维数组dp来分别描述a，b两个char数组，在相应长度下的最长公共字符长度。</p><h3 id="集合划分"><a href="#集合划分" class="headerlink" title="集合划分"></a>集合划分</h3><p><strong>以b[j]为结尾基准</strong>，可以这么理解——在i长度下，与b[j]的最大公共长度。</p><ol><li>让dp[i] [j]&#x3D;dp[i-1] [j]，应为<strong>i长度下肯定能包含i-1长度下的最大公共值</strong></li><li>判断更新dp[i] [j] &#x3D; max(dp[i] [j-1]，dp[i-1] [j]),因为在前面的1~j更新范围时，<strong>dp[i] [j-1]的值很有可能发生变化</strong></li><li>进行了前面的两步操作，当a[i] &#x3D; b[j]时，我们就可以让<strong>dp[i] [j]直接与dp[i-1] [j-1]+1进行比较，因为后者是直接还没有a[i]和b[j]的状态下获得的长度，</strong>找到了一样的加一，但由于底二步的的更新，则需要对两者进行比较。</li><li>在上述过程进行完成之后，我么就得到了最长公共子序列的值了</li></ol><h2 id="笔者代码"><a href="#笔者代码" class="headerlink" title="笔者代码"></a>笔者代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> <span class="number">1010</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">String</span> <span class="variable">A</span> <span class="operator">=</span> scanner.next();</span><br><span class="line">        <span class="type">String</span> <span class="variable">B</span> <span class="operator">=</span> scanner.next();</span><br><span class="line">        <span class="type">char</span>[] a = <span class="keyword">new</span> <span class="title class_">char</span>[N];</span><br><span class="line">        <span class="type">char</span>[] b = <span class="keyword">new</span> <span class="title class_">char</span>[N];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">            a[i] = A.charAt(i-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">            b[i] = B.charAt(i-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span>[][] f = <span class="keyword">new</span> <span class="title class_">int</span>[N][N];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n ; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= m ; j++) &#123;</span><br><span class="line">                f[i][j] = Math.max(f[i-<span class="number">1</span>][j],f[i][j-<span class="number">1</span>]);</span><br><span class="line">                <span class="keyword">if</span>(a[i] == b[j])&#123;</span><br><span class="line">                    f[i][j] = Math.max(f[i][j],f[i-<span class="number">1</span>][j-<span class="number">1</span>]+<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(f[n][m]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;最长公共子序列&quot;&gt;&lt;a href=&quot;#最长公共子序列&quot; class=&quot;headerlink&quot; title=&quot;最长公共子序列&quot;&gt;&lt;/a&gt;最长公共子序列&lt;/h1&gt;&lt;p&gt;链接：&lt;a href=&quot;https://www.acwing.com/problem/content</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>牛客小白月赛-环上食虫</title>
    <link href="http://baiyi-ing.github.io/2022/06/21/2022%E6%9A%91%E5%81%87%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E7%89%9B%E5%AE%A2%E5%B0%8F%E7%99%BD%E6%9C%88%E8%B5%9B-%E7%8E%AF%E4%B8%8A%E9%A3%9F%E8%99%AB/"/>
    <id>http://baiyi-ing.github.io/2022/06/21/2022%E6%9A%91%E5%81%87%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E7%89%9B%E5%AE%A2%E5%B0%8F%E7%99%BD%E6%9C%88%E8%B5%9B-%E7%8E%AF%E4%B8%8A%E9%A3%9F%E8%99%AB/</id>
    <published>2022-06-21T08:25:27.000Z</published>
    <updated>2022-06-21T09:07:01.564Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目来源"><a href="#题目来源" class="headerlink" title="题目来源"></a>题目来源</h1><p>链接：<a href="https://ac.nowcoder.com/acm/contest/11229/D">https://ac.nowcoder.com/acm/contest/11229/D</a><br>来源：牛客网</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>牛牛参加了牛妹的派对。<br> 牛牛面前有一个圆桌，圆桌边缘按顺序摆上了 n 个蛋糕（第一个蛋糕和第 n个蛋糕相邻）。<br> 每个蛋糕都有一个饱腹值和奶油含量。<br> 牛牛不喜欢吃奶油，所以他想要在保证自己能吃饱（所吃蛋糕的饱腹度的和大于等于 sss）的情况下，所选择的蛋糕中奶油含量最大的那一个的奶油含量越低越好。我们知道，牛牛一直都是个绅士。所以他选择的蛋糕应该是相邻的（也就是对应圆上的一段弧（也可以是整个圆））。<br> 现在它想请你帮它计算在能够吃饱的情况下，他吃到蛋糕中奶油含量最高的那一个最低会是多少？</p><p><strong>输入描述:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入共三行。</span><br><span class="line">第一行两个正整数 n,s 。</span><br><span class="line">接下来的一行 n 个整数 a1...a代表第一个到第 n 个蛋糕每个蛋糕的饱腹值。</span><br><span class="line"></span><br><span class="line">接下来的一行 n个整数 b1...bn 代表第一个到第 n 个蛋糕每个蛋糕的奶油含量。</span><br><span class="line">保证：1≤n≤2×105;   1≤s≤109;   1≤ai,bi≤109 (1≤i≤n);</span><br></pre></td></tr></table></figure><p><strong>输出描述:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输出共一行代表答案。</span><br><span class="line">特别的，若牛牛吃掉所有蛋糕都无法吃饱                     </span><br></pre></td></tr></table></figure><p><strong>输入</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5 9</span><br><span class="line">4 3 7 6 1</span><br><span class="line">1 3 9 2 5</span><br></pre></td></tr></table></figure><p><strong>输出</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><p><strong>说明</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">选择第 1，2，4，5 个蛋糕：</span><br><span class="line">    饱腹值：4+3+6+1=14&gt;9</span><br><span class="line"></span><br><span class="line">    最大奶油含量：max⁡&#123;1,3,2,5&#125;=5</span><br><span class="line"></span><br><span class="line">所以输出 5。</span><br></pre></td></tr></table></figure><h2 id="算法解析"><a href="#算法解析" class="headerlink" title="算法解析"></a>算法解析</h2><p>本题使用算法为，环形问题 +  双指针 </p><h3 id="环形问题"><a href="#环形问题" class="headerlink" title="环形问题"></a>环形问题</h3><p>因为牛牛是只吃旁边的蛋糕，而且蛋糕排列呈现环形，我们可以定义大小为 2*n 的数组来进行环形处理。这样无论牛牛从那个蛋糕开始吃，我们都能让这个蛋糕数组的后面有其它所有蛋糕的数据。</p><h3 id="双指针"><a href="#双指针" class="headerlink" title="双指针"></a>双指针</h3><p>分析题目可知，我们要在吃的饱的情况下，找到他吃到<strong>蛋糕中奶油含量最高的那一个最低</strong>（若不理解可以看题目说明）会是多少？</p><p>每个蛋糕的最大奶油含量为1&lt;&#x3D;b&lt;&#x3D;10^9,那我们只要在这个范围内进行双指针判定就可以拉，通过双指针定位可以以满足条件的奶油含量。</p><h2 id="笔者代码"><a href="#笔者代码" class="headerlink" title="笔者代码"></a>笔者代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"><span class="keyword">static</span> <span class="type">int</span>[] arr ; </span><br><span class="line"><span class="keyword">static</span> <span class="type">int</span>[] v ;</span><br><span class="line"><span class="keyword">static</span> <span class="type">int</span> s,n;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">n = scanner.nextInt();</span><br><span class="line">s = scanner.nextInt();</span><br><span class="line"><span class="type">long</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span> ;</span><br><span class="line"></span><br><span class="line">arr = <span class="keyword">new</span> <span class="title class_">int</span> [n*<span class="number">2</span>+<span class="number">1</span>]; </span><br><span class="line">v = <span class="keyword">new</span> <span class="title class_">int</span> [n*<span class="number">2</span>+<span class="number">1</span>]; </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">arr[i] = scanner.nextInt();</span><br><span class="line">arr[i+n] = arr[i];</span><br><span class="line">sum +=arr[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">v[i] = scanner.nextInt();</span><br><span class="line">v[i+n] = v[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//当所有的蛋糕加起来少于，能够吃饱的总量则返回-1</span></span><br><span class="line"><span class="keyword">if</span>(sum&lt;s)&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用二分法测算符合范围的奶油的可能</span></span><br><span class="line"><span class="comment">//题目要求为：所选择的蛋糕中奶油含量最大的那一个的奶油含量越低越好</span></span><br><span class="line"><span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">1</span>,r = (<span class="type">int</span>) (<span class="number">1e9</span>+<span class="number">10</span>);</span><br><span class="line"><span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> (l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(check(mid))&#123;</span><br><span class="line">r =mid;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">l = mid+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//找到了在符合吃饱要求的情况下，吃到含奶油最多的蛋糕的最小情况</span></span><br><span class="line">System.out.println(l);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">check</span><span class="params">(<span class="type">int</span> ans)</span>&#123;</span><br><span class="line"><span class="type">long</span> <span class="variable">eatcake</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i&lt;<span class="number">2</span>*n;i++)&#123;</span><br><span class="line"><span class="comment">//如果有奶油的量，比当前的猜测奶油量还大，就不符合最蛋糕大奶油猜测，</span></span><br><span class="line"><span class="comment">//说明不能像这样连续吃，则重新开始吃</span></span><br><span class="line"><span class="keyword">if</span>(v[i]&gt;ans)&#123;</span><br><span class="line">eatcake = <span class="number">0</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">eatcake+=arr[i];</span><br><span class="line"><span class="comment">//已经能够吃饱，并且奶油量符合范围</span></span><br><span class="line"><span class="keyword">if</span>(eatcake&gt;=s)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;题目来源&quot;&gt;&lt;a href=&quot;#题目来源&quot; class=&quot;headerlink&quot; title=&quot;题目来源&quot;&gt;&lt;/a&gt;题目来源&lt;/h1&gt;&lt;p&gt;链接：&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/11229/D&quot;&gt;https</summary>
      
    
    
    
    
    <category term="双指针" scheme="http://baiyi-ing.github.io/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
    <category term="环问题" scheme="http://baiyi-ing.github.io/tags/%E7%8E%AF%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
</feed>
