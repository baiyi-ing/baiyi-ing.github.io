<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>随意</title>
  
  
  <link href="http://baiyi-ing.github.io/atom.xml" rel="self"/>
  
  <link href="http://baiyi-ing.github.io/"/>
  <updated>2024-03-24T08:27:57.101Z</updated>
  <id>http://baiyi-ing.github.io/</id>
  
  <author>
    <name>白依</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>小程序基础</title>
    <link href="http://baiyi-ing.github.io/2024/03/24/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%9F%BA%E7%A1%80/"/>
    <id>http://baiyi-ing.github.io/2024/03/24/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%9F%BA%E7%A1%80/</id>
    <published>2024-03-24T06:51:01.000Z</published>
    <updated>2024-03-24T08:27:57.101Z</updated>
    
    <content type="html"><![CDATA[<h1 id="微信小程序基础"><a href="#微信小程序基础" class="headerlink" title="微信小程序基础"></a>微信小程序基础</h1><h2 id="常见标签"><a href="#常见标签" class="headerlink" title="常见标签"></a>常见标签</h2><h3 id="view视图"><a href="#view视图" class="headerlink" title="view视图"></a>view视图</h3><!--view相当于div、p，可以一站一行--><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="text文章"><a href="#text文章" class="headerlink" title="text文章"></a>text文章</h3><p>selcectable属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--text相当于span，selectable文档是否可选--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">selectable</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br></pre></td></tr></table></figure><p>decode属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--decode为译码如nbsp/lt/gt/amp/apos/ensp/emsp--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">decode</span>&gt;</span>世界<span class="symbol">&amp;nbsp;</span>你好<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="button按钮"><a href="#button按钮" class="headerlink" title="button按钮"></a>button按钮</h3><h4 id="type属性"><a href="#type属性" class="headerlink" title="type属性"></a>type属性</h4><p>primary首选按钮</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>primary<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>default默认按钮</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;default&quot;</span>&gt;</span>default<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>warn警告</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;warn&quot;</span>&gt;</span>warn<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="open-type属性"><a href="#open-type属性" class="headerlink" title="open-type属性"></a>open-type属性</h4><p>getPhoneNumber获取电话</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">open-type</span>=<span class="string">&quot;getPhoneNumber&quot;</span>&gt;</span>PhoneNumber<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>getUserInfo获取用户信息</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">open-type</span>=<span class="string">&quot;getUserInfo&quot;</span>&gt;</span>getUserInfo<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>contact客服</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">open-type</span>=<span class="string">&quot;contact&quot;</span>&gt;</span>contact<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="checkbox复选"><a href="#checkbox复选" class="headerlink" title="checkbox复选"></a>checkbox复选</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--复选框--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">checkbox-group</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">checkbox</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">checkbox</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">checkbox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">checkbox-group</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="radio单选"><a href="#radio单选" class="headerlink" title="radio单选"></a>radio单选</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">radio-group</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--单选框--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">radio</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">radio</span> <span class="attr">value</span>=<span class="string">&quot;2&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">radio</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">radio-group</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="block分块"><a href="#block分块" class="headerlink" title="block分块"></a>block分块</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--block里的标签属于一体，拆分过多标签堆积--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">block</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">style</span>=<span class="string">&quot;margin-right: 6px;&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">style</span>=<span class="string">&quot;margin-right: 6px;&quot;</span>&gt;</span>物品<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="input输入"><a href="#input输入" class="headerlink" title="input输入"></a>input输入</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--input--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">password</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;number&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">disabled</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入&quot;</span> <span class="attr">placeholder-class</span>=<span class="string">&quot;ph-style&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="事件绑定"><a href="#事件绑定" class="headerlink" title="事件绑定"></a>事件绑定</h2><p>bindinput相当于vue中的v-model实现双向数据绑定糖衣炮弹</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--绑定事件--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--bindinput实现双向绑定,data-来帮助传参--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">bindinput</span>=<span class="string">&quot;ChangeMe&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;clickMe&quot;</span> <span class="attr">data-val1</span>=<span class="string">&quot;1&quot;</span> <span class="attr">data-test</span>=<span class="string">&quot;2&quot;</span> &gt;</span>点击我<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123;msg&#125;&#125; <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">page</span>(&#123;</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">  <span class="attr">msg</span>:<span class="string">&quot;原始数据&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line">    <span class="title class_">ChangeMe</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;文本框变了&quot;</span>);</span><br><span class="line">&#125;,</span><br><span class="line">    <span class="comment">//value.currentTarget.dataset可以获取data-的数据</span></span><br><span class="line"><span class="attr">clickMe</span>:<span class="keyword">function</span>(<span class="params">value</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(value.<span class="property">currentTarget</span>.<span class="property">dataset</span>);</span><br><span class="line">&#125;</span><br><span class="line">)&#125;</span><br></pre></td></tr></table></figure><h2 id="数据绑定"><a href="#数据绑定" class="headerlink" title="数据绑定"></a>数据绑定</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--数据绑定MVVM--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--model数据，v是view视图，vm是指page里面内容，是指vm中的一种协调数据和视图的功能--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;clickMe2&quot;</span>&gt;</span>点击我2<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">page</span>(&#123;</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">  <span class="attr">msg</span>:<span class="string">&quot;原始数据&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line">    <span class="attr">clickMe2</span>:<span class="keyword">function</span>(<span class="params">event</span>)&#123;</span><br><span class="line">  <span class="comment">//只改变数据，不改变视图</span></span><br><span class="line">  <span class="comment">// this.data.msg=&quot;原始数据改变了，视图不变&quot;;</span></span><br><span class="line">  <span class="comment">//视图数据于真实数据一起改变</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">    <span class="attr">msg</span>:<span class="string">&quot;原始数据的内容和视图内容都发生了改变&quot;</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">msg</span>);</span><br><span class="line">&#125;,</span><br><span class="line">)&#125;</span><br></pre></td></tr></table></figure><h2 id="微信API调用"><a href="#微信API调用" class="headerlink" title="微信API调用"></a>微信API调用</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--微信API调用--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--获取用户的信息不能使用bindtap来绑定事件，而是使用bindgetuserInfo--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--将open-type=&quot;getUserInfo&quot;属性获得的用户数据给到绑定事件getUserInfo--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">open-type</span>=<span class="string">&quot;getUserInfo&quot;</span> <span class="attr">bindgetuserinfo</span>=<span class="string">&quot;getUserInfo&quot;</span>&gt;</span>获取用户信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">open-type</span>=<span class="string">&quot;getPhoneNumber&quot;</span> <span class="attr">bindgetphonenumber</span>=<span class="string">&quot;getPhoneNumber&quot;</span>&gt;</span>获取电话<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">open-type</span>=<span class="string">&quot;contact&quot;</span> <span class="attr">bindcontact</span>=<span class="string">&quot;getContact&quot;</span>&gt;</span>联系客服<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">page</span>(&#123;</span><br><span class="line">    <span class="comment">//获取用户信息</span></span><br><span class="line"><span class="title function_">getUserInfo</span>(<span class="params">e</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(e)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//获取用户电话</span></span><br><span class="line"><span class="title function_">getPhoneNumber</span>(<span class="params">e</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(e);</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">//联系客服</span></span><br><span class="line"><span class="title function_">getContact</span>(<span class="params">e</span>)&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(e);</span><br><span class="line">&#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="富文本标签"><a href="#富文本标签" class="headerlink" title="富文本标签"></a>富文本标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--富文本控件使用rich-text--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--该标签类似于vue中的v-html可以用来放标签事件而不是单纯的文本---&gt;</span></span><br><span class="line"><span class="comment">&lt;!--img标签只认网络图片，站内路径不会被认识--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">rich-text</span> <span class="attr">nodes</span>=<span class="string">&quot;&#123;&#123;msg2&#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">rich-text</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">page</span>(&#123;</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line"> <span class="attr">msg2</span>:<span class="string">&quot;&lt;b&gt;加粗&lt;/b&gt;&lt;p style=&#x27;color:red&#x27;&gt;变红&lt;/p&gt;&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line">)&#125;</span><br></pre></td></tr></table></figure><h2 id="微信弹窗"><a href="#微信弹窗" class="headerlink" title="微信弹窗"></a>微信弹窗</h2><h3 id="弹窗样式"><a href="#弹窗样式" class="headerlink" title="弹窗样式"></a>弹窗样式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--小程序弹窗功能--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;showAlert&quot;</span>&gt;</span>弹窗按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//弹窗的使用</span></span><br><span class="line"><span class="comment">//一个弹窗事件只能有一次弹窗，如果有两次事件，会被后面的覆盖掉</span></span><br><span class="line"><span class="title function_">showAlert</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="comment">//icon状态:loading(加载)、success（成功选中）、none（提示），duration持续两秒</span></span><br><span class="line">  wx.<span class="title function_">showToast</span>(&#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&#x27;成功&#x27;</span>,</span><br><span class="line">    <span class="attr">icon</span>:<span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">    <span class="attr">duration</span>:<span class="number">2000</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="comment">//showloading是一种icon为loading的简写</span></span><br><span class="line">  wx.<span class="title function_">showLoading</span>(&#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&#x27;加载中&#x27;</span>,</span><br><span class="line">    <span class="attr">duration</span>:<span class="number">2000</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="comment">//模式窗体二选一</span></span><br><span class="line">  wx.<span class="title function_">showModal</span>(&#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&#x27;提示&#x27;</span>,</span><br><span class="line">    <span class="attr">content</span>: <span class="string">&#x27;这是一个模式框&#x27;</span>,</span><br><span class="line">    <span class="attr">complete</span>: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (res.<span class="property">cancel</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;点击了取消&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  </span><br><span class="line">      <span class="keyword">if</span> (res.<span class="property">confirm</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;点击了确定&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="弹窗跳转"><a href="#弹窗跳转" class="headerlink" title="弹窗跳转"></a>弹窗跳转</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--页面跳转--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&quot;navi&quot;</span>&gt;</span>页面跳转<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//弹窗跳转</span></span><br><span class="line"><span class="title function_">navi</span>(<span class="params"></span>)&#123;</span><br><span class="line">  wx.<span class="title function_">navigateTo</span>(&#123;</span><br><span class="line">    <span class="comment">//不要选定test.wxml是不会默认跳转的</span></span><br><span class="line">    <span class="comment">//当前页面传参到另外的页面?id=1</span></span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/pages/test1/test1?id=1&#x27;</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="弹窗前后端交互"><a href="#弹窗前后端交互" class="headerlink" title="弹窗前后端交互"></a>弹窗前后端交互</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">&#x27;getData&#x27;</span>&gt;</span>获取后端数据<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//弹窗实现前后端交互request</span></span><br><span class="line"><span class="title function_">getData</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> that=<span class="variable language_">this</span>;</span><br><span class="line">  wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="comment">//获取后端数据jobs类</span></span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;http://localhost:10737//jobs&#x27;</span>,</span><br><span class="line">    <span class="comment">//request是一个回调函数，this并不能获取到相关的数据,要用that变量作为中转来实现交互</span></span><br><span class="line">    <span class="title function_">success</span>(<span class="params">res</span>)&#123;</span><br><span class="line">      <span class="keyword">var</span> data = res.<span class="property">data</span>;</span><br><span class="line">      that.<span class="title function_">setData</span>(&#123;</span><br><span class="line">        <span class="attr">jobs</span>:data</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(that.<span class="property">data</span>.<span class="property">jobs</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;微信小程序基础&quot;&gt;&lt;a href=&quot;#微信小程序基础&quot; class=&quot;headerlink&quot; title=&quot;微信小程序基础&quot;&gt;&lt;/a&gt;微信小程序基础&lt;/h1&gt;&lt;h2 id=&quot;常见标签&quot;&gt;&lt;a href=&quot;#常见标签&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    
    <category term="前端" scheme="http://baiyi-ing.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="微信小程序" scheme="http://baiyi-ing.github.io/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>vue学习</title>
    <link href="http://baiyi-ing.github.io/2024/03/04/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/vue%E5%AD%A6%E4%B9%A0/"/>
    <id>http://baiyi-ing.github.io/2024/03/04/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/vue%E5%AD%A6%E4%B9%A0/</id>
    <published>2024-03-04T10:27:37.000Z</published>
    <updated>2024-03-24T07:59:30.130Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vue基础学习"><a href="#vue基础学习" class="headerlink" title="vue基础学习"></a>vue基础学习</h1><h2 id="1-创建一个vue程序"><a href="#1-创建一个vue程序" class="headerlink" title="1.创建一个vue程序"></a>1.创建一个vue程序</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;vue基础学习&quot;&gt;&lt;a href=&quot;#vue基础学习&quot; class=&quot;headerlink&quot; title=&quot;vue基础学习&quot;&gt;&lt;/a&gt;vue基础学习&lt;/h1&gt;&lt;h2 id=&quot;1-创建一个vue程序&quot;&gt;&lt;a href=&quot;#1-创建一个vue程序&quot; class=&quot;he</summary>
      
    
    
    
    
    <category term="前端" scheme="http://baiyi-ing.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>C-排队</title>
    <link href="http://baiyi-ing.github.io/2022/07/02/C-%E6%8E%92%E9%98%9F/"/>
    <id>http://baiyi-ing.github.io/2022/07/02/C-%E6%8E%92%E9%98%9F/</id>
    <published>2022-07-02T08:03:45.000Z</published>
    <updated>2024-03-24T07:59:30.124Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C-排队"><a href="#C-排队" class="headerlink" title="C-排队"></a>C-排队</h1><p>链接：<a href="https://atcoder.jp/contests/arc133/tasks/arc133_b?lang=en">https://atcoder.jp/contests/arc133/tasks/arc133_b?lang=en</a></p><p>来源：AtCoder Regular Contest 133</p><hr><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><img src="https://s2.loli.net/2022/07/02/xSN2hleoYzOyBGP.png" alt="image.png"></p><p><img src="https://s2.loli.net/2022/07/02/JWItFHfay19kp6M.png" alt="image.png"></p><h3 id="样例一"><a href="#样例一" class="headerlink" title="样例一"></a>样例一</h3><p><strong>输入</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">3 1 4 2</span><br><span class="line">4 2 1 3</span><br></pre></td></tr></table></figure><p><strong>输出</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h3 id="样例二"><a href="#样例二" class="headerlink" title="样例二"></a>样例二</h3><p><strong>输入</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">1 2 3 4 5</span><br><span class="line">5 4 3 2 1</span><br></pre></td></tr></table></figure><p><strong>输出</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h3 id="样例三"><a href="#样例三" class="headerlink" title="样例三"></a>样例三</h3><p><strong>输入</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">10</span><br><span class="line">4 3 1 10 9 2 8 6 5 7</span><br><span class="line">9 6 5 4 2 3 8 10 1 7</span><br></pre></td></tr></table></figure><p><strong>输出</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure><h2 id="算法描述"><a href="#算法描述" class="headerlink" title="算法描述"></a>算法描述</h2><p>本题使用<a href="https://baiyi-ing.github.io/2022/06/28/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95%E7%9F%A5%E8%AF%86/ACwing896-%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97%EF%BC%882%EF%BC%89/">LIS（2）（最长上升子序列）</a>算法求解</p><p>首先求出在数组b中所有a[i]的倍数的<strong>下标</strong>全部存子入链表中，再对子链表进行<strong>从大到小排序</strong>（这一步很关键，因为从大到小排序在进行寻找最长上升子序列时才能正确的找寻到结果）</p><h2 id="笔者代码"><a href="#笔者代码" class="headerlink" title="笔者代码"></a>笔者代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(<span class="keyword">new</span> <span class="title class_">BufferedInputStream</span>(System.in));</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">sc</span><span class="params">()</span>&#123;<span class="keyword">return</span> sc.nextInt();&#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span> <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PrintWriter</span>(<span class="keyword">new</span> <span class="title class_">OutputStreamWriter</span>(System.out));</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> (<span class="type">int</span>)<span class="number">2e5</span>+<span class="number">10</span>,P = <span class="number">131</span>,MOD = (<span class="type">int</span>)<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line">    <span class="keyword">static</span>  <span class="type">int</span> n;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span>[] b = <span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">    <span class="comment">//使用h来储存各个数字的下标</span></span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span>[] h = <span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> INF= <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">        n = sc();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;i&lt;=n;i++)&#123;a[i]=sc();&#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            b[i]=sc();</span><br><span class="line">            <span class="comment">//记录b[i]值的下标</span></span><br><span class="line">            h[b[i]] = i;</span><br><span class="line">           <span class="comment">// out.print(h[b[i]]+&quot; &quot;);</span></span><br><span class="line">        &#125; </span><br><span class="line">        List&lt;Integer&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">       </span><br><span class="line">        <span class="type">int</span> len=<span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span>[] dp = <span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">        dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">             <span class="comment">//寻找该数的所有在b中有倍数的下标</span></span><br><span class="line">             list.addAll(find(a[i]));</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line">         <span class="comment">//进行二分求最长上升子序列，因为我们需要存储合法的序列的下标只有在下标满足上升规则的时候才能使用</span></span><br><span class="line">         <span class="comment">//对每个下标进行排序</span></span><br><span class="line">         <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i&lt;list.size();i++)&#123;</span><br><span class="line">            <span class="comment">//out.print(list.get(i)+&quot; &quot;);</span></span><br><span class="line">            <span class="type">int</span> l=<span class="number">0</span>,r = len;</span><br><span class="line">             <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">                 <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> l+r+<span class="number">1</span>&gt;&gt;<span class="number">1</span>;</span><br><span class="line">                 <span class="keyword">if</span>(list.get(i)&gt;dp[mid])&#123;</span><br><span class="line">                     l = mid;</span><br><span class="line">                 &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                     r = mid-<span class="number">1</span>;</span><br><span class="line">                 &#125;</span><br><span class="line">                </span><br><span class="line">             &#125;</span><br><span class="line">             len = Math.max(len,r+<span class="number">1</span>);</span><br><span class="line">                 </span><br><span class="line">             dp[r+<span class="number">1</span>] = list.get(i);</span><br><span class="line">            <span class="comment">// out.println(r+&quot; &quot;+len);</span></span><br><span class="line">         &#125;</span><br><span class="line">       </span><br><span class="line">        out.println(len);</span><br><span class="line">        out.close();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;Integer&gt;find(<span class="type">int</span> num)&#123;</span><br><span class="line">        List&lt;Integer&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        <span class="comment">//由于数字范围为1~n，所以我们在1~n范围内开始寻找</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">1</span>;k*num&lt;=n;k++)&#123;</span><br><span class="line">            <span class="comment">//添加该数字的下标</span></span><br><span class="line">            list.add(h[num*k]);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//从大到小排序下表链表，因为为了对后续的二分做准备</span></span><br><span class="line">        <span class="comment">//因为这种情况下最多会添加一个数，进入上升排列数组中。</span></span><br><span class="line">         Collections.sort(list,(o1,o2)-&gt;o2-o1);</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;C-排队&quot;&gt;&lt;a href=&quot;#C-排队&quot; class=&quot;headerlink&quot; title=&quot;C-排队&quot;&gt;&lt;/a&gt;C-排队&lt;/h1&gt;&lt;p&gt;链接：&lt;a href=&quot;https://atcoder.jp/contests/arc133/tasks/arc133_b?</summary>
      
    
    
    
    
    <category term="LIS" scheme="http://baiyi-ing.github.io/tags/LIS/"/>
    
    <category term="二分" scheme="http://baiyi-ing.github.io/tags/%E4%BA%8C%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>ACwing896-最长上升子序列（2）</title>
    <link href="http://baiyi-ing.github.io/2022/06/28/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95%E7%9F%A5%E8%AF%86/ACwing896-%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97%EF%BC%882%EF%BC%89/"/>
    <id>http://baiyi-ing.github.io/2022/06/28/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95%E7%9F%A5%E8%AF%86/ACwing896-%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97%EF%BC%882%EF%BC%89/</id>
    <published>2022-06-28T15:55:53.000Z</published>
    <updated>2022-06-29T03:06:45.110Z</updated>
    
    <content type="html"><![CDATA[<h1 id="最长上升子序列（2）"><a href="#最长上升子序列（2）" class="headerlink" title="最长上升子序列（2）"></a>最长上升子序列（2）</h1><p>链接：<a href="https://www.acwing.com/problem/content/898/">https://www.acwing.com/problem/content/898/</a></p><p>来源：ACWing 算法基础课</p><hr><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一个长度为 N 的数列，求数值严格单调递增的子序列的长度最长是多少。</p><p><strong>输入格式</strong></p><p>第一行包含整数 N。</p><p>第二行包含 N 个整数，表示完整序列。</p><p><strong>输出格式</strong></p><p>输出一个整数，表示最大长度。</p><p><strong>数据范围</strong></p><p>1≤N≤100000<br>−109≤数列中的数≤109</p><p><strong>输入样例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">7</span><br><span class="line">3 1 2 1 8 5 6</span><br></pre></td></tr></table></figure><p><strong>输出样例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><h2 id="算法描述"><a href="#算法描述" class="headerlink" title="算法描述"></a>算法描述</h2><p>本题数据范围较大，不宜使用<strong>双层for循环+DP</strong>的方法进行编写。</p><p>则采用优化进阶版的<strong>二分算法</strong>来进行编写</p><h3 id="状态表示"><a href="#状态表示" class="headerlink" title="状态表示"></a>状态表示</h3><p>找到相应的上升子序列长度结尾的最小值，每次都这样找的话就可以找到一个呈现递增状态的数组，递增状态的属性满足了使用二分的基本规则</p><h3 id="状态计算（集合划分）"><a href="#状态计算（集合划分）" class="headerlink" title="状态计算（集合划分）"></a>状态计算（集合划分）</h3><ol><li><p>使用dp[len]来记录当0~len各个长度下的最小值</p></li><li><p>当a[i]&gt;dp[len]中的所有值时，len的长度要增加</p></li><li><p>更新a[i]成为1~len的某个长度下的最小值</p></li></ol><h2 id="笔者代码"><a href="#笔者代码" class="headerlink" title="笔者代码"></a>笔者代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 白依</span></span><br><span class="line"><span class="comment"> * 思路整理结果:二分小于某个数的最大的数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> <span class="number">100010</span>;</span><br><span class="line">        <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">        <span class="type">int</span>[] q = <span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            arr[i] = scanner.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">         q[<span class="number">0</span>] = Integer.MAX_VALUE;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="type">int</span> l=<span class="number">0</span>,r=len;</span><br><span class="line">            <span class="keyword">while</span> (l&lt;r)&#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> <span class="number">1</span>+l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(q[mid]&lt;arr[i])&#123;</span><br><span class="line">                    l = mid;</span><br><span class="line">                &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">                    r=mid-<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            len = Math.max(len,r+<span class="number">1</span>);</span><br><span class="line">            q[r+<span class="number">1</span>] = arr[i];</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(len);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;最长上升子序列（2）&quot;&gt;&lt;a href=&quot;#最长上升子序列（2）&quot; class=&quot;headerlink&quot; title=&quot;最长上升子序列（2）&quot;&gt;&lt;/a&gt;最长上升子序列（2）&lt;/h1&gt;&lt;p&gt;链接：&lt;a href=&quot;https://www.acwing.com/pro</summary>
      
    
    
    
    
    <category term="LIS" scheme="http://baiyi-ing.github.io/tags/LIS/"/>
    
    <category term="二分" scheme="http://baiyi-ing.github.io/tags/%E4%BA%8C%E5%88%86/"/>
    
    <category term="DP" scheme="http://baiyi-ing.github.io/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>ACwing895-最长上升子序列</title>
    <link href="http://baiyi-ing.github.io/2022/06/28/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95%E7%9F%A5%E8%AF%86/ACwing895-%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/"/>
    <id>http://baiyi-ing.github.io/2022/06/28/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95%E7%9F%A5%E8%AF%86/ACwing895-%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/</id>
    <published>2022-06-28T15:55:36.000Z</published>
    <updated>2022-06-29T03:04:43.629Z</updated>
    
    <content type="html"><![CDATA[<h1 id="最长上升子序列"><a href="#最长上升子序列" class="headerlink" title="最长上升子序列"></a>最长上升子序列</h1><p>链接：<a href="https://www.acwing.com/problem/content/897/">https://www.acwing.com/problem/content/897/</a></p><p>来源：ACWing 算法基础课</p><hr><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一个长度为 N 的数列，求数值严格单调递增的子序列的长度最长是多少。</p><p><strong>输入格式</strong></p><p>第一行包含整数 N。</p><p>第二行包含 N 个整数，表示完整序列。</p><p><strong>输出格式</strong></p><p>输出一个整数，表示最大长度。</p><p><strong>数据范围</strong></p><p>1≤N≤1000<br>−109≤数列中的数≤109</p><p><strong>输入样例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">7</span><br><span class="line">3 1 2 1 8 5 6</span><br></pre></td></tr></table></figure><p><strong>输出样例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><h2 id="算法描述"><a href="#算法描述" class="headerlink" title="算法描述"></a>算法描述</h2><p>本题数据范围较小，可以使用<strong>双层for循环+DP</strong>进行编写。</p><h3 id="状态表示"><a href="#状态表示" class="headerlink" title="状态表示"></a>状态表示</h3><p>f[i]表示以a[0]开始到a[i]的最大上升子序列的长度。</p><h3 id="状态计算（集合划分）"><a href="#状态计算（集合划分）" class="headerlink" title="状态计算（集合划分）"></a>状态计算（集合划分）</h3><p>判断是否上升</p><ol><li>如果当前数a[i]大于其前面的数a[j],则说明两数符合上升规则</li><li>在符合上升规则时，再用dp[j]+1与当前的dp[i]的值作比较，不断更新dp[i]的值，再遍历完后顺利找到0 ~ i-1范围内的最大值，则值f[i]的值</li></ol><h2 id="笔者代码"><a href="#笔者代码" class="headerlink" title="笔者代码"></a>笔者代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1010</span>];</span><br><span class="line">        <span class="type">int</span>[] f = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1010</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            a[i] = scanner.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n ; i++) &#123;</span><br><span class="line">            f[i] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt; i; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[j] &lt; a[i])&#123;</span><br><span class="line">                    f[i] = Math.max(f[i],f[j]+<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">res</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n ; i++) &#123;</span><br><span class="line">            res = Math.max(f[i],res);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(res);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;最长上升子序列&quot;&gt;&lt;a href=&quot;#最长上升子序列&quot; class=&quot;headerlink&quot; title=&quot;最长上升子序列&quot;&gt;&lt;/a&gt;最长上升子序列&lt;/h1&gt;&lt;p&gt;链接：&lt;a href=&quot;https://www.acwing.com/problem/content</summary>
      
    
    
    
    
    <category term="LIS" scheme="http://baiyi-ing.github.io/tags/LIS/"/>
    
    <category term="DP" scheme="http://baiyi-ing.github.io/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>ACwing897-最长公共子序列</title>
    <link href="http://baiyi-ing.github.io/2022/06/28/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95%E7%9F%A5%E8%AF%86/ACwing897-%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/"/>
    <id>http://baiyi-ing.github.io/2022/06/28/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95%E7%9F%A5%E8%AF%86/ACwing897-%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97/</id>
    <published>2022-06-28T15:55:07.000Z</published>
    <updated>2022-06-29T03:04:43.631Z</updated>
    
    <content type="html"><![CDATA[<h1 id="最长公共子序列"><a href="#最长公共子序列" class="headerlink" title="最长公共子序列"></a>最长公共子序列</h1><p>链接：<a href="https://www.acwing.com/problem/content/898/">https://www.acwing.com/problem/content/898/</a></p><p>来源：ACWing 算法基础课</p><hr><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定两个长度分别为 N 和 M 的字符串 A 和 B，求既是 A 的子序列又是 B 的子序列的字符串长度最长是多少。</p><p><strong>输入格式</strong></p><p>第一行包含两个整数 N 和 M。</p><p>第二行包含一个长度为 N 的字符串，表示字符串 A。</p><p>第三行包含一个长度为 M 的字符串，表示字符串 B。</p><p>字符串均由小写字母构成。</p><p><strong>输出格式</strong></p><p>输出一个整数，表示最大长度。</p><p><strong>数据范围</strong></p><p>1≤N,M≤1000</p><p><strong>输入样例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">4 5</span><br><span class="line">acbd</span><br><span class="line">abedc</span><br></pre></td></tr></table></figure><p><strong>输出样例：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h2 id="算法描述"><a href="#算法描述" class="headerlink" title="算法描述"></a>算法描述</h2><h3 id="状态表示"><a href="#状态表示" class="headerlink" title="状态表示"></a>状态表示</h3><p>本题使用二维数组dp来分别描述a，b两个char数组，在相应长度下的最长公共字符长度。</p><h3 id="集合划分"><a href="#集合划分" class="headerlink" title="集合划分"></a>集合划分</h3><p><strong>以b[j]为结尾基准</strong>，可以这么理解——在i长度下，与b[j]的最大公共长度。</p><ol><li>让dp[i] [j]&#x3D;dp[i-1] [j]，应为<strong>i长度下肯定能包含i-1长度下的最大公共值</strong></li><li>判断更新dp[i] [j] &#x3D; max(dp[i] [j-1]，dp[i-1] [j]),因为在前面的1~j更新范围时，<strong>dp[i] [j-1]的值很有可能发生变化</strong></li><li>进行了前面的两步操作，当a[i] &#x3D; b[j]时，我们就可以让<strong>dp[i] [j]直接与dp[i-1] [j-1]+1进行比较，因为后者是直接还没有a[i]和b[j]的状态下获得的长度，</strong>找到了一样的加一，但由于底二步的的更新，则需要对两者进行比较。</li><li>在上述过程进行完成之后，我么就得到了最长公共子序列的值了</li></ol><h2 id="笔者代码"><a href="#笔者代码" class="headerlink" title="笔者代码"></a>笔者代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> <span class="number">1010</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">String</span> <span class="variable">A</span> <span class="operator">=</span> scanner.next();</span><br><span class="line">        <span class="type">String</span> <span class="variable">B</span> <span class="operator">=</span> scanner.next();</span><br><span class="line">        <span class="type">char</span>[] a = <span class="keyword">new</span> <span class="title class_">char</span>[N];</span><br><span class="line">        <span class="type">char</span>[] b = <span class="keyword">new</span> <span class="title class_">char</span>[N];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=n; i++)&#123;</span><br><span class="line">            a[i] = A.charAt(i-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>; i&lt;=m; i++)&#123;</span><br><span class="line">            b[i] = B.charAt(i-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span>[][] f = <span class="keyword">new</span> <span class="title class_">int</span>[N][N];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n ; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= m ; j++) &#123;</span><br><span class="line">                f[i][j] = Math.max(f[i-<span class="number">1</span>][j],f[i][j-<span class="number">1</span>]);</span><br><span class="line">                <span class="keyword">if</span>(a[i] == b[j])&#123;</span><br><span class="line">                    f[i][j] = Math.max(f[i][j],f[i-<span class="number">1</span>][j-<span class="number">1</span>]+<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(f[n][m]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;最长公共子序列&quot;&gt;&lt;a href=&quot;#最长公共子序列&quot; class=&quot;headerlink&quot; title=&quot;最长公共子序列&quot;&gt;&lt;/a&gt;最长公共子序列&lt;/h1&gt;&lt;p&gt;链接：&lt;a href=&quot;https://www.acwing.com/problem/content</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>牛客小白月赛-环上食虫</title>
    <link href="http://baiyi-ing.github.io/2022/06/21/2022%E6%9A%91%E5%81%87%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E7%89%9B%E5%AE%A2%E5%B0%8F%E7%99%BD%E6%9C%88%E8%B5%9B-%E7%8E%AF%E4%B8%8A%E9%A3%9F%E8%99%AB/"/>
    <id>http://baiyi-ing.github.io/2022/06/21/2022%E6%9A%91%E5%81%87%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E7%89%9B%E5%AE%A2%E5%B0%8F%E7%99%BD%E6%9C%88%E8%B5%9B-%E7%8E%AF%E4%B8%8A%E9%A3%9F%E8%99%AB/</id>
    <published>2022-06-21T08:25:27.000Z</published>
    <updated>2022-06-21T09:07:01.564Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目来源"><a href="#题目来源" class="headerlink" title="题目来源"></a>题目来源</h1><p>链接：<a href="https://ac.nowcoder.com/acm/contest/11229/D">https://ac.nowcoder.com/acm/contest/11229/D</a><br>来源：牛客网</p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>牛牛参加了牛妹的派对。<br> 牛牛面前有一个圆桌，圆桌边缘按顺序摆上了 n 个蛋糕（第一个蛋糕和第 n个蛋糕相邻）。<br> 每个蛋糕都有一个饱腹值和奶油含量。<br> 牛牛不喜欢吃奶油，所以他想要在保证自己能吃饱（所吃蛋糕的饱腹度的和大于等于 sss）的情况下，所选择的蛋糕中奶油含量最大的那一个的奶油含量越低越好。我们知道，牛牛一直都是个绅士。所以他选择的蛋糕应该是相邻的（也就是对应圆上的一段弧（也可以是整个圆））。<br> 现在它想请你帮它计算在能够吃饱的情况下，他吃到蛋糕中奶油含量最高的那一个最低会是多少？</p><p><strong>输入描述:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入共三行。</span><br><span class="line">第一行两个正整数 n,s 。</span><br><span class="line">接下来的一行 n 个整数 a1...a代表第一个到第 n 个蛋糕每个蛋糕的饱腹值。</span><br><span class="line"></span><br><span class="line">接下来的一行 n个整数 b1...bn 代表第一个到第 n 个蛋糕每个蛋糕的奶油含量。</span><br><span class="line">保证：1≤n≤2×105;   1≤s≤109;   1≤ai,bi≤109 (1≤i≤n);</span><br></pre></td></tr></table></figure><p><strong>输出描述:</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输出共一行代表答案。</span><br><span class="line">特别的，若牛牛吃掉所有蛋糕都无法吃饱                     </span><br></pre></td></tr></table></figure><p><strong>输入</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5 9</span><br><span class="line">4 3 7 6 1</span><br><span class="line">1 3 9 2 5</span><br></pre></td></tr></table></figure><p><strong>输出</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><p><strong>说明</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">选择第 1，2，4，5 个蛋糕：</span><br><span class="line">    饱腹值：4+3+6+1=14&gt;9</span><br><span class="line"></span><br><span class="line">    最大奶油含量：max⁡&#123;1,3,2,5&#125;=5</span><br><span class="line"></span><br><span class="line">所以输出 5。</span><br></pre></td></tr></table></figure><h2 id="算法解析"><a href="#算法解析" class="headerlink" title="算法解析"></a>算法解析</h2><p>本题使用算法为，环形问题 +  双指针 </p><h3 id="环形问题"><a href="#环形问题" class="headerlink" title="环形问题"></a>环形问题</h3><p>因为牛牛是只吃旁边的蛋糕，而且蛋糕排列呈现环形，我们可以定义大小为 2*n 的数组来进行环形处理。这样无论牛牛从那个蛋糕开始吃，我们都能让这个蛋糕数组的后面有其它所有蛋糕的数据。</p><h3 id="双指针"><a href="#双指针" class="headerlink" title="双指针"></a>双指针</h3><p>分析题目可知，我们要在吃的饱的情况下，找到他吃到<strong>蛋糕中奶油含量最高的那一个最低</strong>（若不理解可以看题目说明）会是多少？</p><p>每个蛋糕的最大奶油含量为1&lt;&#x3D;b&lt;&#x3D;10^9,那我们只要在这个范围内进行双指针判定就可以拉，通过双指针定位可以以满足条件的奶油含量。</p><h2 id="笔者代码"><a href="#笔者代码" class="headerlink" title="笔者代码"></a>笔者代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line"><span class="keyword">static</span> <span class="type">int</span>[] arr ; </span><br><span class="line"><span class="keyword">static</span> <span class="type">int</span>[] v ;</span><br><span class="line"><span class="keyword">static</span> <span class="type">int</span> s,n;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">n = scanner.nextInt();</span><br><span class="line">s = scanner.nextInt();</span><br><span class="line"><span class="type">long</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span> ;</span><br><span class="line"></span><br><span class="line">arr = <span class="keyword">new</span> <span class="title class_">int</span> [n*<span class="number">2</span>+<span class="number">1</span>]; </span><br><span class="line">v = <span class="keyword">new</span> <span class="title class_">int</span> [n*<span class="number">2</span>+<span class="number">1</span>]; </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">arr[i] = scanner.nextInt();</span><br><span class="line">arr[i+n] = arr[i];</span><br><span class="line">sum +=arr[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">v[i] = scanner.nextInt();</span><br><span class="line">v[i+n] = v[i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//当所有的蛋糕加起来少于，能够吃饱的总量则返回-1</span></span><br><span class="line"><span class="keyword">if</span>(sum&lt;s)&#123;</span><br><span class="line">System.out.println(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用二分法测算符合范围的奶油的可能</span></span><br><span class="line"><span class="comment">//题目要求为：所选择的蛋糕中奶油含量最大的那一个的奶油含量越低越好</span></span><br><span class="line"><span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">1</span>,r = (<span class="type">int</span>) (<span class="number">1e9</span>+<span class="number">10</span>);</span><br><span class="line"><span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">mid</span> <span class="operator">=</span> (l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(check(mid))&#123;</span><br><span class="line">r =mid;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">l = mid+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//找到了在符合吃饱要求的情况下，吃到含奶油最多的蛋糕的最小情况</span></span><br><span class="line">System.out.println(l);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">check</span><span class="params">(<span class="type">int</span> ans)</span>&#123;</span><br><span class="line"><span class="type">long</span> <span class="variable">eatcake</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i&lt;<span class="number">2</span>*n;i++)&#123;</span><br><span class="line"><span class="comment">//如果有奶油的量，比当前的猜测奶油量还大，就不符合最蛋糕大奶油猜测，</span></span><br><span class="line"><span class="comment">//说明不能像这样连续吃，则重新开始吃</span></span><br><span class="line"><span class="keyword">if</span>(v[i]&gt;ans)&#123;</span><br><span class="line">eatcake = <span class="number">0</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">eatcake+=arr[i];</span><br><span class="line"><span class="comment">//已经能够吃饱，并且奶油量符合范围</span></span><br><span class="line"><span class="keyword">if</span>(eatcake&gt;=s)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;题目来源&quot;&gt;&lt;a href=&quot;#题目来源&quot; class=&quot;headerlink&quot; title=&quot;题目来源&quot;&gt;&lt;/a&gt;题目来源&lt;/h1&gt;&lt;p&gt;链接：&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/11229/D&quot;&gt;https</summary>
      
    
    
    
    
    <category term="双指针" scheme="http://baiyi-ing.github.io/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
    <category term="环问题" scheme="http://baiyi-ing.github.io/tags/%E7%8E%AF%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>cf1676-D.X-Sum</title>
    <link href="http://baiyi-ing.github.io/2022/06/21/2022%E6%9A%91%E5%81%87%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/cf1676-D-X-Sum/"/>
    <id>http://baiyi-ing.github.io/2022/06/21/2022%E6%9A%91%E5%81%87%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/cf1676-D-X-Sum/</id>
    <published>2022-06-20T18:10:12.000Z</published>
    <updated>2022-06-21T02:54:31.816Z</updated>
    
    <content type="html"><![CDATA[<h1 id="D-X-Sum"><a href="#D-X-Sum" class="headerlink" title="D. X-Sum"></a><a href="https://codeforces.com/contest/1676/problem/D">D. X-Sum</a></h1><p>time limit per test</p><p>2 seconds</p><p>memory limit per test</p><p>256 megabytes</p><p>input</p><p>standard input</p><p>output</p><p>standard output</p><p>Timur’s grandfather gifted him a chessboard to practice his chess skills. This chessboard is a grid $$$a$$$ with $$$n$$$ rows and $$$m$$$ columns with each cell having a <strong>non-negative</strong> integer written on it.</p><p>Timur’s challenge is to place a bishop on the board such that the sum of all cells attacked by the bishop is <strong>maximal</strong>. The bishop attacks in all directions diagonally, and there is no limit to the distance which the bishop can attack. Note that the cell on which the bishop is placed is also considered attacked. Help him find the maximal sum he can get.</p><p>Input</p><p>The first line of the input contains a single integer $$$t$$$ ($$$1 \le t \le 1000$$$) — the number of test cases. The description of test cases follows.</p><p>The first line of each test case contains the integers $$$n$$$ and $$$m$$$ ($$$1 \le n \le 200$$$, $$$1 \leq m \leq 200$$$).</p><p>The following $$$n$$$ lines contain $$$m$$$ integers each, the $$$j$$$-th element of the $$$i$$$-th line $$$a_{ij}$$$ is the number written in the $$$j$$$-th cell of the $$$i$$$-th row $$$(0\leq a_{ij} \leq 10^6)$$$</p><p>It is guaranteed that the sum of $$$n\cdot m$$$ over all test cases does not exceed $$$4\cdot10^4$$$.</p><p>Output</p><p>For each test case output a single integer, the maximum sum over all possible placements of the bishop.</p><p>Example</p><p>input</p><p>Copy</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">4 4</span><br><span class="line">1 2 2 1</span><br><span class="line">2 4 2 4</span><br><span class="line">2 2 3 1</span><br><span class="line">2 4 2 4</span><br><span class="line">2 1</span><br><span class="line">1</span><br><span class="line">0</span><br><span class="line">3 3</span><br><span class="line">1 1 1</span><br><span class="line">1 1 1</span><br><span class="line">1 1 1</span><br><span class="line">3 3</span><br><span class="line">0 1 1</span><br><span class="line">1 0 1</span><br><span class="line">1 1 0</span><br></pre></td></tr></table></figure><p>output</p><p>Copy</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">20</span><br><span class="line">1</span><br><span class="line">5</span><br><span class="line">3</span><br></pre></td></tr></table></figure><p>Note</p><p>For the first test case here the best sum is achieved by the bishop being in this position:</p><p><img src="https://espresso.codeforces.com/e102ade3729bd6edb0c8b10820edc11bedeed940.png" alt="img"></p><h1 id="笔者解析"><a href="#笔者解析" class="headerlink" title="笔者解析"></a>笔者解析</h1><p><strong>译文大意</strong>：本题皇后可以吃他自己两斜边的值，包括自己本身，要找到皇后在哪一个位置时，能够吃到总和最大的数值</p><p><strong>笔者思路</strong>： 皇后所在的点一定和两斜边有着某种关系，由题观察可知皇后的横行和竖行的变化确实存在某种关系。可发现<strong>皇后在竖列上的移动距离和皇后在横行上移动的距离时相等</strong>的，而且在横行还可以根据竖列移动的位置向两边移动，只要不超出数组范围就是可达的</p><h1 id="笔者代码"><a href="#笔者代码" class="headerlink" title="笔者代码"></a>笔者代码</h1><h2 id="java版本"><a href="#java版本" class="headerlink" title="java版本"></a>java版本</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="type">int</span> n,m;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"><span class="type">BufferedReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in) );</span><br><span class="line"><span class="type">int</span> <span class="variable">t</span> <span class="operator">=</span> Integer.parseInt(reader.readLine());</span><br><span class="line"><span class="keyword">while</span>(t--&gt;<span class="number">0</span>)&#123;</span><br><span class="line">String[] string = reader.readLine().split(<span class="string">&quot; &quot;</span>);</span><br><span class="line"> n = Integer.parseInt(string[<span class="number">0</span>]);</span><br><span class="line"> m = Integer.parseInt(string[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span>[][] arr = <span class="keyword">new</span> <span class="title class_">int</span>[n][m];</span><br><span class="line">String[] strings =  <span class="keyword">new</span> <span class="title class_">String</span> [m];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">strings = reader.readLine().split(<span class="string">&quot; &quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>;j &lt; m;j++)&#123;</span><br><span class="line">arr[i][j] = Integer.parseInt(strings[j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="variable">ans</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span><span class="number">0</span>;j&lt;m;j++)&#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">now</span> <span class="operator">=</span> -arr[i][j];<span class="comment">//减去重复加的自身</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">0</span>;k&lt;n;k++)&#123;</span><br><span class="line"><span class="type">int</span> <span class="variable">d</span> <span class="operator">=</span> Math.abs(i-k);<span class="comment">//此时遍历的行与原来实际行的距离差</span></span><br><span class="line"><span class="keyword">if</span>(j-d&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">now+=arr[k][j-d];<span class="comment">//此时的左边列在距离差范围内</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(j+d&lt;m)&#123;</span><br><span class="line">now+=arr[k][j+d];<span class="comment">//此时右边列在距离范围内</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ans = Math.max(ans , now);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(ans);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="c-版本"><a href="#c-版本" class="headerlink" title="c++版本"></a>c++版本</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">210</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="type">int</span> w[N][N];</span><br><span class="line"><span class="type">int</span> T,n,m;</span><br><span class="line"> </span><br><span class="line"><span class="function">LL <span class="title">get</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">     <span class="type">int</span> res=w[x][y];</span><br><span class="line">     <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">200</span>;i++)</span><br><span class="line">     &#123;</span><br><span class="line">         <span class="keyword">if</span>(x-i&gt;=<span class="number">1</span>&amp;&amp;y-i&gt;=<span class="number">1</span>) res+=w[x-i][y-i];</span><br><span class="line">         <span class="keyword">if</span>(x+i&lt;=n&amp;&amp;y+i&lt;=m) res+=w[x+i][y+i];</span><br><span class="line">         <span class="keyword">if</span>(x+i&lt;=n&amp;&amp;y-i&gt;=<span class="number">1</span>) res+=w[x+i][y-i];</span><br><span class="line">         <span class="keyword">if</span>(x-i&gt;=<span class="number">1</span>&amp;&amp;y+i&lt;=m) res+=w[x-i][y+i];</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">          <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">          &#123;</span><br><span class="line">              <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;w[i][j]);</span><br><span class="line">          &#125;</span><br><span class="line">        LL res=<span class="number">0</span>;  </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">          <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">          &#123;</span><br><span class="line">              res=<span class="built_in">max</span>(res,<span class="built_in">get</span>(i,j));</span><br><span class="line">          &#125;</span><br><span class="line">          </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,res);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;D-X-Sum&quot;&gt;&lt;a href=&quot;#D-X-Sum&quot; class=&quot;headerlink&quot; title=&quot;D. X-Sum&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://codeforces.com/contest/1676/problem/D&quot;&gt;D. X-Sum</summary>
      
    
    
    
    
    <category term="棋盘模型" scheme="http://baiyi-ing.github.io/tags/%E6%A3%8B%E7%9B%98%E6%A8%A1%E5%9E%8B/"/>
    
  </entry>
  
  <entry>
    <title>ACwing4484-有限小数</title>
    <link href="http://baiyi-ing.github.io/2022/06/21/ACwing/ACwing4484-%E6%9C%89%E9%99%90%E5%B0%8F%E6%95%B0/"/>
    <id>http://baiyi-ing.github.io/2022/06/21/ACwing/ACwing4484-%E6%9C%89%E9%99%90%E5%B0%8F%E6%95%B0/</id>
    <published>2022-06-20T17:53:50.000Z</published>
    <updated>2022-06-21T02:51:17.225Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><h2 id="来源：ACwing4484-有限小数"><a href="#来源：ACwing4484-有限小数" class="headerlink" title="来源：ACwing4484-有限小数"></a>来源：<a href="https://www.acwing.com/problem/content/description/4487/">ACwing4484-有限小数</a></h2><p>给定三个整数 p,q,b，请你计算十进制表示下的 p&#x2F;q 的结果在 b进制下是否为有限小数。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>第一行包含整数 TT，表示共有 TT 组测试数据。</p><p>每组数据占一行，包含三个整数 p,q,b。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>每组数据输出一行结果，如果 p&#x2F;q的结果在 b 进制下是有限小数，则输出 <code>YES</code>，否则输出 <code>NO</code>。</p><h2 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h2><p>前五个测试点满足 1≤T≤101≤T≤10。<br>所有测试点满足 1≤T≤105，0≤p≤1018，1≤q≤1018，2≤b≤1018。</p><h2 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">6 12 10</span><br><span class="line">4 3 10</span><br></pre></td></tr></table></figure><h2 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br><span class="line">NO</span><br></pre></td></tr></table></figure><h2 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">1 1 2</span><br><span class="line">9 36 2</span><br><span class="line">4 12 3</span><br><span class="line">3 5 4</span><br></pre></td></tr></table></figure><h2 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br><span class="line">YES</span><br><span class="line">YES</span><br><span class="line">NO</span><br></pre></td></tr></table></figure><h1 id="笔者解析"><a href="#笔者解析" class="headerlink" title="笔者解析"></a>笔者解析</h1><p>本题为ACwing的周赛困难题。所运用到的主要知识为：</p><h2 id="小数进制转换计算"><a href="#小数进制转换计算" class="headerlink" title="小数进制转换计算"></a>小数进制转换计算</h2><p><strong>十进制小数→R进制小数</strong></p><p><strong>乘R取整顺序法：乘基数取整，连续乘以基数，并取其整数，直到积为零或达到所要求的精度时，将所得整数正序排列即可。</strong></p><p>由此题将小数转换为二进制，可看出是小数不断的乘2，取最整数位为结果位，取小数位为下一个继续计算位，直到下一计算位最终取值为0。</p><p><a href="https://iknow-pic.cdn.bcebos.com/279759ee3d6d55fbab6c52db66224f4a21a4dda0"><img src="https://iknow-pic.cdn.bcebos.com/279759ee3d6d55fbab6c52db66224f4a21a4dda0?x-bce-process=image/resize,m_lfit,w_600,h_800,limit_1/quality,q_85/format,f_auto" alt="img"></a></p><h2 id="约分"><a href="#约分" class="headerlink" title="约分"></a>约分</h2><p>本题有两个地方需要约分</p><ol><li><p>初始的p&#x2F;q，要进行初始约分去除两数之间的公因数。</p></li><li><p>要拿q与d进行不断约分，每次找到最大公因数g,不断使用q&#x2F;&#x3D;d，直到q与d之间的最大公约数为g&#x3D;1</p><p>为什么要这样计算呢?因为我们的q一定要能被<strong>d的次方整除</strong>，才可以被转换成其它进制的有限小数，使用d的次方，也就需要不断要取得新的q与d的g值。</p></li></ol><h1 id="笔者代码"><a href="#笔者代码" class="headerlink" title="笔者代码"></a>笔者代码</h1><h2 id="java版本"><a href="#java版本" class="headerlink" title="java版本"></a>java版本</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">BufferedReader</span> <span class="variable">bufferedReader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> Integer.parseInt(bufferedReader.readLine());;</span><br><span class="line">        <span class="keyword">while</span> (n--&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="type">int</span> []arr = <span class="keyword">new</span> <span class="title class_">int</span>[n];</span><br><span class="line">            String []a = bufferedReader.readLine().split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">            <span class="type">long</span> p= Long.parseLong(a[<span class="number">0</span>]);</span><br><span class="line">            <span class="type">long</span> q= Long.parseLong(a[<span class="number">1</span>]);</span><br><span class="line">            <span class="type">long</span> b= Long.parseLong(a[<span class="number">2</span>]);</span><br><span class="line">            <span class="keyword">if</span>(p%q==<span class="number">0</span>||p == <span class="number">0</span>)&#123;System.out.println(<span class="string">&quot;YES&quot;</span>);<span class="keyword">continue</span>;&#125;</span><br><span class="line">            <span class="type">long</span> <span class="variable">y</span> <span class="operator">=</span> gcd(p,q);</span><br><span class="line">            p/=y;q/=y;</span><br><span class="line">            <span class="type">long</span> g ;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">                g = gcd(q,b);</span><br><span class="line">                <span class="keyword">if</span>(g == <span class="number">1</span>)&#123; <span class="keyword">break</span>;&#125;</span><br><span class="line">                <span class="keyword">while</span>(q%g==<span class="number">0</span>)&#123; q /= g; &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(q == <span class="number">1</span>)&#123;</span><br><span class="line">               System.out.println(<span class="string">&quot;YES&quot;</span>);</span><br><span class="line">               <span class="keyword">continue</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">               System.out.println(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;</span><br><span class="line">        bufferedReader.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">long</span> <span class="title function_">gcd</span><span class="params">(<span class="type">long</span> a,<span class="type">long</span> b)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(a%b == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> b;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> gcd(b,a%b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="c-y总版"><a href="#c-y总版" class="headerlink" title="c++ y总版"></a>c++ y总版</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">gcd</span><span class="params">(LL a, LL b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b ? <span class="built_in">gcd</span>(b, a % b) : a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T -- )</span><br><span class="line">    &#123;</span><br><span class="line">        LL p, q, b;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld%lld&quot;</span>, &amp;p, &amp;q, &amp;b);</span><br><span class="line">        LL d = <span class="built_in">gcd</span>(p, q);</span><br><span class="line">        q /= d;</span><br><span class="line">        <span class="keyword">while</span> (q &gt; <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            d = <span class="built_in">gcd</span>(q, b);</span><br><span class="line">            <span class="keyword">if</span> (d == <span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">while</span> (q % d == <span class="number">0</span>) q /= d;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (q == <span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">&quot;YES&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">作者：yxc</span><br><span class="line">链接：https:<span class="comment">//www.acwing.com/activity/content/code/content/3628074/</span></span><br><span class="line">来源：AcWing</span><br><span class="line">著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;h2 id=&quot;来源：ACwing4484-有限小数&quot;&gt;&lt;a href=&quot;#来源：ACwing4484-有限小数&quot; class=&quot;headerli</summary>
      
    
    
    
    
    <category term="进制转换" scheme="http://baiyi-ing.github.io/tags/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2/"/>
    
    <category term="约数" scheme="http://baiyi-ing.github.io/tags/%E7%BA%A6%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>牛客小白月赛-说谎的机器</title>
    <link href="http://baiyi-ing.github.io/2022/06/19/2022%E6%9A%91%E5%81%87%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E7%89%9B%E5%AE%A2%E5%B0%8F%E7%99%BD%E6%9C%88%E8%B5%9B-%E8%AF%B4%E8%B0%8E%E7%9A%84%E6%9C%BA%E5%99%A8/"/>
    <id>http://baiyi-ing.github.io/2022/06/19/2022%E6%9A%91%E5%81%87%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/%E7%89%9B%E5%AE%A2%E5%B0%8F%E7%99%BD%E6%9C%88%E8%B5%9B-%E8%AF%B4%E8%B0%8E%E7%9A%84%E6%9C%BA%E5%99%A8/</id>
    <published>2022-06-19T11:25:26.000Z</published>
    <updated>2022-06-19T12:25:24.477Z</updated>
    
    <content type="html"><![CDATA[<p>链接：<a href="https://ac.nowcoder.com/acm/contest/11229/C">https://ac.nowcoder.com/acm/contest/11229/C</a><br>来源：牛客网</p><h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>牛牛在和它的机器玩猜数字，可是机器好像坏了……<br> 具体来说，机器首先会随机生成一个 1…n的数字 k，紧接着机器会给牛牛 m 条指令，指令的格式有如下三种：<br> 1、op x y；这里，op&#x3D;1 代表有 x≤k≤y<br> 2、op x；这里，  op&#x3D;2 代表有 x≤k≤n<br> 3、op x；这里，  op&#x3D;3 代表有 1≤k≤x<br> 牛牛知道这台机器已经学会了说谎，所以它所描述的指令可能都是错误的，现在牛牛想知道机器错误的程度以便来制定修理它的方案。</p><p>  所以牛牛想请你告诉它，当 k 取 1…n 这个范围内的值时，机器最多有多少条指令是错误的，而 k  又有多少种取值方式使得机器的错误指令数最多。 </p><h2 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述:"></a>输入描述:</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">第一行两个整数代表 n,mn,mn,m </span><br><span class="line"></span><br><span class="line">接下来 mmm 行每行一条指令，指令格式见题面。</span><br><span class="line">保证：</span><br><span class="line">1≤n≤106;    1≤m≤2×105; 1≤op≤3;  </span><br></pre></td></tr></table></figure><h2 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述:"></a>输出描述:</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输出共一行两个整数，分别代表机器最多的错误指令数，以及有多少种 k 的取值会使得机器的错误指令数最多。</span><br></pre></td></tr></table></figure><p> 示例1                        </p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p><a href="javascript:void(0);">复制</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">9 5</span><br><span class="line">1 3 6</span><br><span class="line">2 7</span><br><span class="line">1 2 3</span><br><span class="line">3 2</span><br><span class="line">1 5 8</span><br></pre></td></tr></table></figure><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p><a href="javascript:void(0);">复制</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 3</span><br></pre></td></tr></table></figure><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">最多的错误指令数为 4。</span><br><span class="line">使得错误指令数最多的取值有 3 种，分别是：</span><br><span class="line">  取值为 1，此时第 1、2、3、5 条指令是错误的。</span><br><span class="line">  取值为 4，此时第 2、3、4、5 条指令是错误的。</span><br><span class="line">  取值为 9，此时第 1、3、4、5 条指令是错误的。</span><br></pre></td></tr></table></figure><h1 id="笔者解析"><a href="#笔者解析" class="headerlink" title="笔者解析"></a>笔者解析</h1><p>本题是小白月赛中的第三题，使用一维差分数组来计算相关所需数据。</p><p>若要是的计算范围为错误的，则要避开正确答案</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">p1 则错误的情况为1&lt;= k &lt; x &amp;&amp; y &lt; k &lt;=n</span><br><span class="line">p2 则表示1&lt;=k&lt;x &amp;&amp;n&lt;k,但是题目已经告知k在1~n范围内</span><br><span class="line">p3 则表示x&lt;k&lt;=n</span><br></pre></td></tr></table></figure><h1 id="笔者代码"><a href="#笔者代码" class="headerlink" title="笔者代码"></a>笔者代码</h1><h2 id="java版本"><a href="#java版本" class="headerlink" title="java版本"></a>java版本</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> <span class="number">1000010</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"><span class="comment">// 使用差分来进行处理本题</span></span><br><span class="line"><span class="type">BufferedReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">String[] str = reader.readLine().split(<span class="string">&quot; &quot;</span>);</span><br><span class="line"><span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> Integer.parseInt(str[<span class="number">0</span>]);</span><br><span class="line"><span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> Integer.parseInt(str[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">//差分数组</span></span><br><span class="line"><span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[N];</span><br><span class="line"></span><br><span class="line"><span class="comment">//所需的书据</span></span><br><span class="line"><span class="type">int</span> x,y;</span><br><span class="line"></span><br><span class="line"><span class="comment">//进行差分运算</span></span><br><span class="line"><span class="keyword">while</span>(m--&gt;<span class="number">0</span>)&#123;</span><br><span class="line">str = reader.readLine().split(<span class="string">&quot; &quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(str[<span class="number">0</span>].equals(<span class="string">&quot;1&quot;</span>))&#123;</span><br><span class="line">x = Integer.parseInt(str[<span class="number">1</span>]);</span><br><span class="line">y = Integer.parseInt(str[<span class="number">2</span>]);</span><br><span class="line"><span class="comment">//则错误的情况为1&lt;= k &lt; x &amp;&amp; y &lt; k &lt;=n</span></span><br><span class="line">a[<span class="number">1</span>]++;a[x]--;</span><br><span class="line">a[y+<span class="number">1</span>]++;a[n+<span class="number">1</span>]--;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(str[<span class="number">0</span>].equals(<span class="string">&quot;2&quot;</span>))&#123;</span><br><span class="line">x = Integer.parseInt(str[<span class="number">1</span>]);</span><br><span class="line"><span class="comment">//则表示1&lt;=k&lt;x &amp;&amp;n&lt;k,但是题目已经告知k在1~n范围内</span></span><br><span class="line">a[<span class="number">1</span>]++;a[x]--;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">x = Integer.parseInt(str[<span class="number">1</span>]);</span><br><span class="line"><span class="comment">//则表示x&lt;k&lt;=n</span></span><br><span class="line">a[x+<span class="number">1</span>]++;a[n+<span class="number">1</span>]--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用差分数组计算前缀和</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">a[i] += a[i-<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> -<span class="number">1</span>,all = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">max=Math.max(max, a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]==max)&#123;all++;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">System.out.println(max+<span class="string">&quot; &quot;</span>+all);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="C-版本"><a href="#C-版本" class="headerlink" title="C++版本"></a>C++版本</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">while</span> (m -- )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> op,x,y;</span><br><span class="line">        cin&gt;&gt;op&gt;&gt;x;</span><br><span class="line">        <span class="keyword">if</span>(op==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cin&gt;&gt;y;</span><br><span class="line">            a[<span class="number">1</span>]++,a[x]--;</span><br><span class="line">            a[y+<span class="number">1</span>]++,a[n+<span class="number">1</span>]--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(op==<span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            a[<span class="number">1</span>]++,a[x]--;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            a[x+<span class="number">1</span>]++,a[n+<span class="number">1</span>]--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) a[i]+=a[i<span class="number">-1</span>];</span><br><span class="line">    <span class="type">int</span> maxn=<span class="number">0</span>,res=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        maxn=<span class="built_in">max</span>(maxn,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="keyword">if</span>(a[i]==maxn) res++;</span><br><span class="line">    cout&lt;&lt;maxn&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;链接：&lt;a href=&quot;https://ac.nowcoder.com/acm/contest/11229/C&quot;&gt;https://ac.nowcoder.com/acm/contest/11229/C&lt;/a&gt;&lt;br&gt;来源：牛客网&lt;/p&gt;
&lt;h1 id=&quot;题目描述&quot;&gt;&lt;a h</summary>
      
    
    
    
    
    <category term="前缀和" scheme="http://baiyi-ing.github.io/tags/%E5%89%8D%E7%BC%80%E5%92%8C/"/>
    
  </entry>
  
  <entry>
    <title>ACwing4269-校庆</title>
    <link href="http://baiyi-ing.github.io/2022/06/16/2022%E6%9A%91%E5%81%87%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/ACwing4269-%E6%A0%A1%E5%BA%86/"/>
    <id>http://baiyi-ing.github.io/2022/06/16/2022%E6%9A%91%E5%81%87%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/ACwing4269-%E6%A0%A1%E5%BA%86/</id>
    <published>2022-06-16T12:28:39.000Z</published>
    <updated>2022-06-16T13:01:46.745Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>2019年浙江大学将要庆祝成立 122 周年。</p><p>为了准备校庆，校友会收集了所有校友的身份证号。</p><p>现在需要请你编写程序，根据来参加校庆的所有人士的身份证号，统计来了多少校友。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入在第一行给出正整数 N。</p><p>随后 N 行，每行给出一位校友的身份证号（18 位由数字和大写字母 X 组成的字符串）。题目保证身份证号不重复。</p><p>随后给出前来参加校庆的所有人士的信息：</p><p>首先是一个正整数 M。</p><p>随后 M 行，每行给出一位人士的身份证号。题目保证身份证号不重复。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>首先在第一行输出参加校庆的校友的人数。</p><p>然后在第二行输出最年长的校友的身份证号 —— 注意身份证第 7−14位给出的是 <code>yyyymmdd</code> 格式的生日。</p><p>如果没有校友来，则在第二行输出最年长的来宾的身份证号。题目保证这样的校友或来宾必是唯一的。</p><h2 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h2><p>1≤N,M≤105</p><h2 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">372928196906118710</span><br><span class="line">610481197806202213</span><br><span class="line">440684198612150417</span><br><span class="line">13072819571002001X</span><br><span class="line">150702193604190912</span><br><span class="line">6</span><br><span class="line">530125197901260019</span><br><span class="line">150702193604190912</span><br><span class="line">220221196701020034</span><br><span class="line">610481197806202213</span><br><span class="line">440684198612150417</span><br><span class="line">370205198709275042</span><br></pre></td></tr></table></figure><h2 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">150702193604190912</span><br></pre></td></tr></table></figure><h1 id="笔者解析"><a href="#笔者解析" class="headerlink" title="笔者解析"></a>笔者解析</h1><p>本题的输入输量巨大，而输出量却相对较少。在java编程中对于巨大的输出，我们应该尽量选择使用BufferedReader，而不是使用Scanner进行输入。两者的输入输出效率差异巨大，具体可由下图所示。</p><h2 id="Scanner输入"><a href="#Scanner输入" class="headerlink" title="Scanner输入"></a>Scanner输入</h2><p><img src="https://s2.loli.net/2022/06/16/oKnvIO7mfcsZMxH.png" alt="G41DB4_4~___W_UVU__TVIN.png"></p><h2 id="BufferedReader输入"><a href="#BufferedReader输入" class="headerlink" title="BufferedReader输入"></a>BufferedReader输入</h2><p><img src="https://s2.loli.net/2022/06/16/iuwV8MhyAL1m9IG.png" alt="~B1C77_06_6N9B_0LTX4_2U.png"></p><p>可见两者的效率差距还是特别巨大的，所以在这种输入量比较大的情况下尽量使用BufferedReader进行输入</p><h1 id="笔者代码"><a href="#笔者代码" class="headerlink" title="笔者代码"></a>笔者代码</h1><h2 id="Scanner版本"><a href="#Scanner版本" class="headerlink" title="Scanner版本"></a>Scanner版本</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        HashSet&lt;String&gt; alumnus = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        HashSet&lt;String&gt; come = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        HashSet&lt;String&gt; alumnusCome = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="comment">//存储所有校友</span></span><br><span class="line">            alumnus.add(scanner.next());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> scanner.nextInt(),count = <span class="number">0</span>;</span><br><span class="line">        String temp;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">            temp = scanner.next();come.add(temp);</span><br><span class="line">            <span class="keyword">if</span>(alumnus.contains(temp))&#123;</span><br><span class="line">                alumnusCome.add(temp);</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(count);</span><br><span class="line">        <span class="type">int</span> <span class="variable">old</span> <span class="operator">=</span> Integer.MAX_VALUE,t;</span><br><span class="line">        <span class="type">String</span> <span class="variable">oldNum</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(count&gt;<span class="number">0</span>)&#123;</span><br><span class="line">           come = alumnusCome;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> ( String men:come) &#123;</span><br><span class="line">            temp = men.substring(<span class="number">6</span>,<span class="number">14</span>);</span><br><span class="line">            t = Integer.parseInt(temp);</span><br><span class="line">            <span class="keyword">if</span>(old &gt; t)&#123;</span><br><span class="line">                old = t;</span><br><span class="line">                oldNum = men;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(oldNum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="BufferedReader版本"><a href="#BufferedReader版本" class="headerlink" title="BufferedReader版本"></a>BufferedReader版本</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">BufferedReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        HashSet&lt;String&gt; alumnus = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        HashSet&lt;String&gt; come = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        HashSet&lt;String&gt; alumnusCome = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//首先在第一行输出参加校庆的校友的人数。</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> Integer.parseInt(reader.readLine());</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="comment">//存储所有校友</span></span><br><span class="line">            alumnus.add(reader.readLine());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> Integer.parseInt(reader.readLine()),count = <span class="number">0</span>;</span><br><span class="line">        String temp;</span><br><span class="line">        <span class="comment">//随后给出前来参加校庆的所有人士的信息：</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">            temp = reader.readLine();</span><br><span class="line">            <span class="comment">//加入来宾set中</span></span><br><span class="line">            come.add(temp);</span><br><span class="line">            <span class="comment">//如果属于校友就加入 校友来宾set</span></span><br><span class="line">            <span class="keyword">if</span>(alumnus.contains(temp))&#123;</span><br><span class="line">                alumnusCome.add(temp);</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(count);</span><br><span class="line">        <span class="type">int</span> <span class="variable">old</span> <span class="operator">=</span> Integer.MAX_VALUE,t;</span><br><span class="line">        <span class="type">String</span> <span class="variable">oldNum</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="comment">//有校友来就从来了的校友里找年纪最长者，否则就到所有来宾中间找</span></span><br><span class="line">        <span class="keyword">if</span>(count&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            come = alumnusCome;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> ( String men:come) &#123;</span><br><span class="line">            temp = men.substring(<span class="number">6</span>,<span class="number">14</span>);</span><br><span class="line">            t = Integer.parseInt(temp);</span><br><span class="line">            <span class="keyword">if</span>(old &gt; t)&#123;</span><br><span class="line">                old = t;</span><br><span class="line">                oldNum = men;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(oldNum);</span><br><span class="line">        reader.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;2019年浙江大学将要庆祝成立 122 周年。&lt;/p&gt;
&lt;p&gt;为了准备校庆，校友会收集了所有校友的身份证号。&lt;/p&gt;
&lt;p&gt;现在需要请你编写</summary>
      
    
    
    
    
    <category term="输入输出" scheme="http://baiyi-ing.github.io/tags/%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA/"/>
    
  </entry>
  
  <entry>
    <title>ACwing4268-性感素数</title>
    <link href="http://baiyi-ing.github.io/2022/06/16/2022%E6%9A%91%E5%81%87%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/ACwing4268-%E6%80%A7%E6%84%9F%E7%B4%A0%E6%95%B0/"/>
    <id>http://baiyi-ing.github.io/2022/06/16/2022%E6%9A%91%E5%81%87%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/ACwing4268-%E6%80%A7%E6%84%9F%E7%B4%A0%E6%95%B0/</id>
    <published>2022-06-16T03:35:22.000Z</published>
    <updated>2022-06-16T03:52:30.437Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>“<a href="http://mathworld.wolfram.com/SexyPrimes.html">性感素数</a> ”是指形如 (p,p+6) 这样的一对素数。</p><p>之所以叫这个名字，是因为拉丁语管“六”叫“sex”（即英语的“性感”）。</p><p>现给定一个整数，请你判断其是否为一个性感素数。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a><strong>输入格式</strong></h2><p>输入在一行中给出一个正整数 NN。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a><strong>输出格式</strong></h2><p>若 N 是一个性感素数，则在一行中输出 <code>Yes</code>，并在第二行输出与 N 配对的另一个性感素数（若这样的数不唯一，输出较小的那个）。</p><p>若 N 不是性感素数，则在一行中输出 <code>No</code>，然后在第二行输出大于 N 的最小性感素数。</p><h2 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a><strong>数据范围</strong></h2><p>1≤N≤108</p><h2 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">47</span><br></pre></td></tr></table></figure><h2 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Yes</span><br><span class="line">41</span><br></pre></td></tr></table></figure><h2 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">21</span><br></pre></td></tr></table></figure><h2 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">No</span><br><span class="line">23</span><br></pre></td></tr></table></figure><h1 id="笔者解析"><a href="#笔者解析" class="headerlink" title="笔者解析"></a>笔者解析</h1><p>本题运用了经典求<a href="https://baike.baidu.com/item/%E8%B4%A8%E6%95%B0/263515">素数</a>的方法求解，使用的判断素数算法模板如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">prime</span> <span class="params">(<span class="type">int</span> num)</span>&#123;</span><br><span class="line">       <span class="keyword">if</span>(num&lt;=<span class="number">1</span>)&#123;<span class="keyword">return</span> <span class="literal">false</span>;&#125;</span><br><span class="line">       <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>; i &lt;= num/i; i++) &#123;</span><br><span class="line">           <span class="keyword">if</span>(num%i == <span class="number">0</span>)&#123;<span class="keyword">return</span> <span class="literal">false</span>;&#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><strong>本题的可能情况有一下几种</strong></p><ol><li>输入的数据num是素数，当num-6是素数，则输出num-6</li><li>输入的数据num是素数，当num-6是不素数，但num+6是素数，则输出num+6</li><li>输入的数据num不是素数，则开始不断加1，知道找到符合情况1或情况2数字，输出这个数</li></ol><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><h2 id="笔者java代码"><a href="#笔者java代码" class="headerlink" title="笔者java代码"></a>笔者java代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">a</span> <span class="operator">=</span> prime(n-<span class="number">6</span>);</span><br><span class="line">       </span><br><span class="line">        <span class="keyword">if</span>(prime(n)&amp;&amp;(a||prime(n+<span class="number">6</span>)))&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(a)&#123;</span><br><span class="line">                 <span class="comment">//输入的数据num是素数，当num-6是素数，则输出num-6</span></span><br><span class="line">                System.out.println(n-<span class="number">6</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//输入的数据num是素数，当num-6是不素数，但num+6是素数，则输出num+6</span></span><br><span class="line">                System.out.println(n+<span class="number">6</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//输入的数据num不是素数，则开始不断加1，知道找到符合情况1或情况2数字，输出这个数</span></span><br><span class="line">            System.out.println(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">            <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">                n++;</span><br><span class="line">                a=prime(n-<span class="number">6</span>);</span><br><span class="line">                <span class="keyword">if</span>(prime(n)&amp;&amp;(a||prime(n+<span class="number">6</span>)))&#123;</span><br><span class="line">                    System.out.println(n);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">prime</span> <span class="params">(<span class="type">int</span> num)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(num&lt;=<span class="number">1</span>)&#123;<span class="keyword">return</span> <span class="literal">false</span>;&#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">2</span>; i &lt;= num/i; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(num%i == <span class="number">0</span>)&#123;<span class="keyword">return</span> <span class="literal">false</span>;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="闫式C-代码"><a href="#闫式C-代码" class="headerlink" title="闫式C++代码"></a>闫式C++代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">is_prime</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x &lt; <span class="number">2</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= x / i; i ++ )</span><br><span class="line">        <span class="keyword">if</span> (x % i == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n - <span class="number">6</span>; i &lt;= n + <span class="number">6</span>; i += <span class="number">12</span>)</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">is_prime</span>(i) &amp;&amp; <span class="built_in">is_prime</span>(n))</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;Yes&quot;</span> &lt;&lt; endl;</span><br><span class="line">            cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n + <span class="number">1</span>;; i ++ )</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">is_prime</span>(i) &amp;&amp; (<span class="built_in">is_prime</span>(i - <span class="number">6</span>) || <span class="built_in">is_prime</span>(i + <span class="number">6</span>)))</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;No&quot;</span> &lt;&lt; endl;</span><br><span class="line">            cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">作者：yxc</span><br><span class="line">链接：https:<span class="comment">//www.acwing.com/activity/content/code/content/3590406/</span></span><br><span class="line">来源：AcWing</span><br><span class="line">著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;“&lt;a href=&quot;http://mathworld.wolfram.com/SexyPrimes.html&quot;&gt;性感素数&lt;/a&gt; ”是指形如</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>哈夫曼树</title>
    <link href="http://baiyi-ing.github.io/2022/06/15/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95%E7%9F%A5%E8%AF%86/%E5%93%88%E5%A4%AB%E6%9B%BC%E6%A0%91/"/>
    <id>http://baiyi-ing.github.io/2022/06/15/%E5%9F%BA%E7%A1%80%E7%AE%97%E6%B3%95%E7%9F%A5%E8%AF%86/%E5%93%88%E5%A4%AB%E6%9B%BC%E6%A0%91/</id>
    <published>2022-06-15T14:10:30.000Z</published>
    <updated>2022-06-15T17:02:26.779Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p><strong>笔者使用来自于acwing-148. 合并果子这题来对哈夫曼树的构建及其使用做出声明</strong></p><p>在一个果园里，达达已经将所有的果子打了下来，而且按果子的不同种类分成了不同的堆。</p><p>达达决定把所有的果子合成一堆。</p><p>每一次合并，达达可以把两堆果子合并到一起，消耗的体力等于两堆果子的重量之和。</p><p>可以看出，所有的果子经过 n−1 次合并之后，就只剩下一堆了。</p><p>达达在合并果子时总共消耗的体力等于每次合并所耗体力之和。</p><p>因为还要花大力气把这些果子搬回家，所以达达在合并果子时要尽可能地节省体力。</p><p>假定每个果子重量都为 1，并且已知果子的种类数和每种果子的数目，你的任务是设计出合并的次序方案，使达达耗费的体力最少，并输出这个最小的体力耗费值。</p><p>例如有 33种果子，数目依次为 1，2，9。</p><p>可以先将 1、2堆合并，新堆数目为 3，耗费体力为 3。</p><p>接着，将新堆与原先的第三堆合并，又得到新的堆，数目为 12，耗费体力为 12。</p><p>所以达达总共耗费体力&#x3D;3+12&#x3D;15。</p><p>可以证明 15 为最小的体力耗费值。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入包括两行，第一行是一个整数 n，表示果子的种类数。</p><p>第二行包含 n 个整数，用空格分隔，第 i 个整数 ai 是第 i 种果子的数目。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出包括一行，这一行只包含一个整数，也就是最小的体力耗费值。</p><p>输入数据保证这个值小于 231。</p><h2 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h2><p>1≤n≤10000<br>1≤ai≤20000</p><h2 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3 </span><br><span class="line">1 2 9 </span><br></pre></td></tr></table></figure><h2 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">15</span><br></pre></td></tr></table></figure><h1 id="笔者解析"><a href="#笔者解析" class="headerlink" title="笔者解析"></a>笔者解析</h1><p>本题实际上是哈夫曼树的应用题目，原理与哈夫曼树相似，<strong>即每次找两个最小堆合并成一堆</strong>，最终得到最小花费。最终的值的大小为个子<strong>叶*度（子叶的高度或者说子叶在的层数减一）</strong></p><p><img src="https://s2.loli.net/2022/06/16/OdvSZUwVJIiBboM.png" alt="image.png"></p><h1 id="笔者代码"><a href="#笔者代码" class="headerlink" title="笔者代码"></a>笔者代码</h1><h2 id="java版本"><a href="#java版本" class="headerlink" title="java版本"></a><strong>java版本</strong></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="comment">//定义一个小根堆</span></span><br><span class="line">        PriorityQueue&lt;Integer&gt; queue = <span class="keyword">new</span> <span class="title class_">PriorityQueue</span>&lt;&gt;();</span><br><span class="line">        <span class="comment">//定义读写变量</span></span><br><span class="line">        <span class="type">BufferedReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        <span class="type">BufferedWriter</span> <span class="variable">writer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedWriter</span>(<span class="keyword">new</span> <span class="title class_">OutputStreamWriter</span>(System.out));</span><br><span class="line">        <span class="comment">//输入数据个数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> Integer.parseInt(reader.readLine());</span><br><span class="line">        <span class="comment">//输入具体数据</span></span><br><span class="line">        String []s = reader.readLine().split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            queue.offer(Integer.parseInt(s[i]));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//开始构建哈夫曼树</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">ans</span> <span class="operator">=</span> <span class="number">0</span>,a,b;</span><br><span class="line">        <span class="comment">//当最终只剩下一个数据的时候，极为最小力气花费量</span></span><br><span class="line">        <span class="keyword">while</span> (queue.size()&gt;<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="comment">//取最小的两个数据，最小数据在堆顶，用掉并删除,再添加两个较小数据的和进入堆中</span></span><br><span class="line">            a=queue.poll();</span><br><span class="line">            b=queue.poll();</span><br><span class="line">            ans =ans+a+b;</span><br><span class="line">            queue.add(a+b);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出答案</span></span><br><span class="line">        writer.write(ans+<span class="string">&quot; &quot;</span>);</span><br><span class="line">        writer.flush();</span><br><span class="line">        writer.close();</span><br><span class="line">        reader.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="闫式C-版本"><a href="#闫式C-版本" class="headerlink" title="闫式C++版本"></a>闫式C++版本</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"></span><br><span class="line">    priority_queue&lt;<span class="type">int</span>, vector&lt;<span class="type">int</span>&gt;, greater&lt;<span class="type">int</span>&gt;&gt; heap;</span><br><span class="line">    <span class="keyword">while</span> (n -- )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">        heap.<span class="built_in">push</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (heap.<span class="built_in">size</span>() &gt; <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a = heap.<span class="built_in">top</span>(); heap.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="type">int</span> b = heap.<span class="built_in">top</span>(); heap.<span class="built_in">pop</span>();</span><br><span class="line">        res += a + b;</span><br><span class="line">        heap.<span class="built_in">push</span>(a + b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, res);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">作者：yxc</span><br><span class="line">链接：https:<span class="comment">//www.acwing.com/solution/content/3258/</span></span><br><span class="line">来源：AcWing</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;笔者使用来自于acwing-148. 合并果子这题来对哈夫曼树的构建及其使用做出声明&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在一个</summary>
      
    
    
    
    
    <category term="贪心算法" scheme="http://baiyi-ing.github.io/tags/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>计算机网络复习</title>
    <link href="http://baiyi-ing.github.io/2022/05/30/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/"/>
    <id>http://baiyi-ing.github.io/2022/05/30/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/</id>
    <published>2022-05-30T14:34:01.000Z</published>
    <updated>2022-06-03T06:35:26.521Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h1><h2 id="1-为什么要对计算机网络进行分层？分层的原则？"><a href="#1-为什么要对计算机网络进行分层？分层的原则？" class="headerlink" title="1. 为什么要对计算机网络进行分层？分层的原则？"></a>1. 为什么要对计算机网络进行分层？分层的原则？</h2><p>a．因为计算机网络是一个复杂的系统，采用层次化结构的方法来描述它，可以将复杂的网络间题分解为许多比较小的、界线比较清晰简单的部分来处理； </p><p>b．分层的一般原则是将一组相近的功能放在一起，形成一个网络的结构层次。 </p><h2 id="2-冗余码"><a href="#2-冗余码" class="headerlink" title="2. 冗余码"></a>2. 冗余码</h2><p>及所给的计算数据<strong>M尾部加上多项式最高幂次个0</strong>，然后再将多项式的各个<strong>常数项</strong>进行提取，<strong>有就写1没有就写0</strong>，然后诸位异或计算，若最后的余数不为0，则M的数据就有问题。(P77)</p><p><img src="https://s2.loli.net/2022/06/01/IhSjO6ZW23xoVQN.jpg" alt="055AB9C5813ED0CE23063C42C0E345B3.jpg"></p><h2 id="3-CSMA-x2F-CD（载波监听多点接入-x2F-碰撞）"><a href="#3-CSMA-x2F-CD（载波监听多点接入-x2F-碰撞）" class="headerlink" title="3. CSMA&#x2F;CD（载波监听多点接入&#x2F;碰撞）"></a>3. CSMA&#x2F;CD（载波监听多点接入&#x2F;碰撞）</h2><p><strong>工作方式：</strong>许多计算机以多点接入的方式连接到一根总线上（MA）。每一个站在发送帧之前有检测冲突就等待发送。发送数据之中，每个站都必须继续不停的检测信道，发现冲突停止发送（CS&#x2F;CD）</p><p><strong>优缺点：</strong>  原理比较简单，技术上易实现，网络中各工作站处于平等地位 ，不需集中控制，不提供优先级控制。但在网络负载增大时，发送时间增长，发送效率急剧下降。</p><h2 id="4-TCP-x2F-UDP"><a href="#4-TCP-x2F-UDP" class="headerlink" title="4. TCP&#x2F;UDP"></a>4. TCP&#x2F;UDP</h2><p><strong>简述：</strong>TCP和UDP都是<a href="https://so.csdn.net/so/search?q=%E4%BC%A0%E8%BE%93%E5%B1%82%E5%8D%8F%E8%AE%AE&spm=1001.2101.3001.7020">传输层协议</a>。TCP&#x2F;IP是一个协议簇，里面包含了很多协议，UDP和TCP只是其中两个协议，之所以命为TCP&#x2F;IP，是因为这两个协议非常重要。</p><p><strong>区别：</strong>TCP提供面向链接服务，在传送数据之前必须要先建立链接，数据传送结束后要释放链接。UDP在传输数据之前不需要建立链接。</p><p>因此，通常来说TCP是可靠稳定的但是效率不够高，而UDP则相反。</p><p>(P45)</p><h2 id="5-常用编码方式"><a href="#5-常用编码方式" class="headerlink" title="5. 常用编码方式"></a>5. 常用编码方式</h2><p><img src="https://s2.loli.net/2022/06/01/RtOrS7dUfa2N5EC.png" alt="image.png"></p><p><strong>不归零制：</strong> 正电平表示1，负电平表示0。</p><p><strong>归零制：</strong>向上正脉冲表示1，向下负脉冲表示0.</p><p><strong>曼切斯特编码：</strong>每一位的中心向上跳为1，向下跳为0</p><p><strong>差分马切斯特编码：</strong>开始边界有和上一位末尾不一样，有跳变代表1，无跳变代表0</p><p>注意：0和1可以换身份，如曼切斯特编码也可以是向上为0，向下为1。</p><h2 id="6-计算机网络的组成部分"><a href="#6-计算机网络的组成部分" class="headerlink" title="6.计算机网络的组成部分"></a>6.计算机网络的组成部分</h2><p>计算机网络主要由<strong>软件、硬件、协议</strong>三部分组成。</p><p><strong>硬件：</strong>主要由主机、物理链路（双绞线与光纤）、交换设备（如路由与交换机）、通信处理机（如网卡）等组成。</p><p><strong>软件：</strong>软件包括各种实现资源共享的软件和方便用户使用的各种工具软件，软件多属于应用层。</p><p><strong>协议：</strong>协议是核心，规定了网络传输时所遵循的规范。就像现实世界的法律一样。</p><h2 id="7-虚电路与数据报"><a href="#7-虚电路与数据报" class="headerlink" title="7. 虚电路与数据报"></a>7. 虚电路与数据报</h2><p><img src="https://s2.loli.net/2022/06/01/QgrmGLaWMHJfDT7.png" alt="image.png"></p><p>(P117)</p><hr><h2 id="8-域名系统DNS"><a href="#8-域名系统DNS" class="headerlink" title="8.域名系统DNS"></a>8.域名系统DNS</h2><p>存在意义：为了让人类好记忆好阅读，使用DNS域名系统给网站起别名，这样网站除了使用IP地址可访问外还可以使用域名来访问（如<a href="http://www.baidu.com)/">www.baidu.com）</a></p><p><img src="https://s2.loli.net/2022/06/03/CodBG1u4EqtkIsx.jpg" alt="F3CDF1E2B41302A0BEFDAD23735AF197.jpg"></p><p>(P283)</p><h2 id="9-面向链接的三阶段"><a href="#9-面向链接的三阶段" class="headerlink" title="9. 面向链接的三阶段"></a>9. 面向链接的三阶段</h2><p>此问题为运输层的相关内容，与TCP的运输链接管理有关，这三个阶段为：<strong>链接建立、数据传送、链接释放</strong>。</p><p><strong>链接建立</strong>：此过程是三次报文握手，除了互相接受消息的，回复接收到消息的两次握手外，再加上了第三次握手是为了防止接收端的回复握手意外丢失后，接收端任然以为已经建立好了链接，实际上发送端没有正常的消息。第三次握手可确保前面两次相互握手都顺利执行了。</p><p><img src="https://s2.loli.net/2022/06/03/l7gfG5OFR1idSk8.png" alt="image.png"></p><p><strong>链接释放：</strong>此过程是四报文握手，这个需要注意的是，设置的2MSL的等待时间，是为了确保最后一次报文握手，在服务器接收端正常接收到然后正常关闭。若未设置，则最后一次握手数据报意外丢失后，服务器接收端未能正常接收到此提示关闭消息而未关闭，但客户端发送主机却已经先一步关闭。</p><p><img src="https://s2.loli.net/2022/06/03/haTGCP5F7eEQ1IO.png" alt="image.png"></p><h2 id="10-IP地址的分类"><a href="#10-IP地址的分类" class="headerlink" title="10. IP地址的分类"></a>10. IP地址的分类</h2><p><img src="https://s2.loli.net/2022/06/03/a7kyJoIe2WMTV6C.png" alt="image.png"></p><h2 id="11-TCP传输应用"><a href="#11-TCP传输应用" class="headerlink" title="11. TCP传输应用"></a>11. TCP传输应用</h2><p>当对网络通讯质量有要求的时候，比如：整个数据要准确无误的传递给对方，这往往用于一些要求可靠的应用，比如HTTP、HTTPS、FTP等传输文件的协议，POP、SMTP等邮件传输的协议。</p><p>在日常生活中，常见使用TCP协议的应用如下：</p><ul><li>浏览器</li><li>QQ文件传输</li></ul><h2 id="12-网络协议三要素"><a href="#12-网络协议三要素" class="headerlink" title="12. 网络协议三要素"></a>12. 网络协议三要素</h2><p><strong>语义：</strong>语义是解释控制信息每个部分的意义。它规定了需要发出何种控制信息，以及完成的动作与做出什么样的响应。</p><p><strong>语法：</strong>语法是用户数据与控制信息的结构与格式，以及数据出现的顺序。</p><p><strong>时序：</strong>时序是对事件发生顺序的详细说明。</p><p>计算机网络是由多个互连的结点组成，结点之间需要不断地进行数据交换，每个结点必须要奉行一致的规则。这些规则规定了所有交换数据的格式和时序。这些<strong>为网络数据交换而制定的规则、约定与标准被称为网络协议</strong></p><h2 id="13-密码技术五大基本要素"><a href="#13-密码技术五大基本要素" class="headerlink" title="13. 密码技术五大基本要素"></a>13. 密码技术五大基本要素</h2><p>信息安全的五个基本要素，即需保证信息的<strong>保密性、真实性、完整性、可用性、不可否认性</strong>。</p><p><strong>1、保密性</strong></p><p>要求保护数据内容不被泄漏，加密是实现机密性要求的常用手段。</p><p>它是信息安全一诞生就具有的特性，也是信息安全主要的研究内容之一。更通俗地讲，就是说未授权的用户不能够获取敏感信息。</p><p>对纸质文档信息，我们只需要保护好文件，不被非授权者接触即可。而对计算机及网络环境中的信息，不仅要制止非授权者对信息的阅读。也要阻止授权者将其访问的信息传递给非授权者，以致信息被泄漏。</p><p><strong>2、真实性</strong></p><p>对信息的来源进行判断，能对伪造来源的信息予以鉴别。</p><p><strong>3、完整性</strong></p><p>要求保护的数据内容是完整的、没有被篡改的。常见的保证一致性的技术手段是数字签名。</p><p>它是保护信息保持原始的状态，使信息保持其真实性。如果这些信息被蓄意地修改、插入、删除等，形成虚假信息将带来严重的后果。</p><p><strong>4、可用性</strong></p><p>是指授权主体在需要信息时能及时得到服务的能力。可用性是在信息安全保护阶段对信息安全提出的新要求，也是在网络化空间中必须满足的一项信息安全要求。</p><p><strong>5、不可否认性</strong></p><p>指在网络环境中，信息交换的双方不能否认其在交换过程中发送信息或接收信息的行为。</p><h2 id="14-常见的网络操作系统"><a href="#14-常见的网络操作系统" class="headerlink" title="14. 常见的网络操作系统"></a>14. 常见的网络操作系统</h2><p><strong>Windows操作系统：</strong>是微软公司开发的一款图形化工作界面操作系统；</p><p><strong>NetWare系统：</strong>是一个开放的网络服务器平台；</p><p><strong>Unix系统：</strong>一般用于大型机和小型机；</p><p><strong>Linux系统：</strong>是一种源代码开放的网络操作系统。</p><h2 id="15-虚拟局域网的划分方式"><a href="#15-虚拟局域网的划分方式" class="headerlink" title="15. 虚拟局域网的划分方式"></a>15. 虚拟局域网的划分方式</h2><p>划分有四种方式：</p><p><strong>1.根据端口来划分</strong></p><p>许多VLAN厂商都利用交换机的端口来划分VLAN成员。被设定的端口都在同一个广播域中。例如，一个交换机的1，2，3，4，5端口被定义为虚拟网AAA，同一交换机的6，7，8端口组成虚拟网BBB。这样做允许各端口之间的通讯，并允许共享型网络的升级。但是，这种划分模式将虚拟网限制在了一台交换机上。</p><p>第二代端口VLAN技术允许跨越多个交换机的多个不同端口划分VLAN，不同交换机上的若干个端口可以组成同一个虚拟网。</p><p>以交换机端口来划分网络成员，其配置过程简单明了。因此，从目前来看，这种根据端口来划分VLAN的方式仍然是最常用的一种方式。</p><p><strong>2.根据MAC地址划分</strong></p><p>这种划分VLAN的方法是根据每个主机的MAC地址来划分，即对每个MAC地址的主机都配置它属于哪个组。这种划分VLAN方法的最大优点就是当用户物理位置移动时，即从一个交换机换到其他的交换机时，VLAN不用重新配置，所以，可以认为这种根据MAC地址的划分方法是基于用户的VLAN，这种方法的缺点是初始化时，所有的用户都必须进行配置，如果有几百个甚至上千个用户的话，配置是非常累的。而且这种划分的方法也导致了交换机执行效率的降低，因为在每一个交换机的端口都可能存在很多个VLAN组的成员，这样就无法限制广播包了。另外，对于使用笔记本电脑的用户来说，他们的网卡可能经常更换，这样，VLAN就必须不停地配置。</p><p><strong>3.根据网络层划分</strong></p><p>这种划分VLAN的方法是根据每个主机的网络层地址或协议类型(如果支持多协议)划分的，虽然这种划分方法是根据网络地址，比如IP地址，但它不是路由，与网络层的路由毫无关系。</p><p>其优点是用户的物理位置改变了，不需要重新配置所属的VLAN，而且可以根据协议类型来划分VLAN，这对网络管理者来说很重要，还有，这种方法不需要附加的帧标签来识别VLAN，这样可以减少网络的通信量。其缺点是效率低，因为检查每一个数据包的网络层地址是需要消耗处理时间的(相对于前面两种方法)，一般的交换机芯片都可以自动检查网络上数据包的以太网帧头，但要让芯片能检查IP帧头，需要更高的技术，同时也更费时。当然，这与各个厂商的实现方法有关。</p><p><strong>4.根据IP组播划分</strong></p><p>IP 组播实际上也是一种VLAN的定义，即认为一个组播组就是一个VLAN，这种划分的方法将VLAN扩大到了广域网，因此这种方法具有更大的灵活性，而且也很容易通过路由器进行扩展，当然这种方法不适合局域网，主要是效率不高。</p><h2 id="16-内部网关协议"><a href="#16-内部网关协议" class="headerlink" title="16. 内部网关协议"></a>16. 内部网关协议</h2><p>主要有RIP和OSPF协议</p><p><img src="https://s2.loli.net/2022/06/03/QuXARDaFE7MntB1.jpg" alt="2FC64CBEFA306A1329B4A77CDD3E7FE2.jpg"></p><p><strong>a. 适用范围不同</strong></p><p>RIP适用于中小网络，比较简单。没有系统内外、系统分区，边界等概念，用到不是分类的路由。</p><p>OSPF适用于较大规模网络。它把自治系统分成若干个区域，通过系列内外路由的不同处理，区域内和区域间路由的不同处理方法，减少网络数据量大传输。</p><p><strong>b.运行有区别</strong></p><p>RIP运行时，首先向外发送请求报文，其他运行RIP的路由器收到请求后，马上把自己的路由表发送过去，在没收到请求时，会将路由删除，并广播自己新的路由表。</p><p>OSPF要求每个路由器周期性的发送链路状态信息，使得区域内所有路由器最终都能形成一个跟踪网络链路状态的链路状态数据库。利用链路状态数据库，每一个路由器都可以以自己为“根”，建立一个最短路径优先树，用来描述以自己出发，到达每个目的网络所需的开销。</p><p><strong>c.使用情况不同</strong></p><p><strong>OSPF占用的实际链</strong>路带宽比RIP少；OSPF使用的CPU时间比RIP少；OSPF适用的内存比RIP大；RIP在网络上达到平衡用的时间比OSPF多。</p><h2 id="17-码分复用"><a href="#17-码分复用" class="headerlink" title="17.码分复用"></a>17.码分复用</h2><p>简述： A·R&#x3D;A·(a + b + c + d);.</p><p><img src="https://s2.loli.net/2022/06/03/NXWfdbCpJ897neY.jpg" alt="19C8A8889A9D4B3926D65F9776B69781.jpg"></p><p>（P60）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;计算机网络&quot;&gt;&lt;a href=&quot;#计算机网络&quot; class=&quot;headerlink&quot; title=&quot;计算机网络&quot;&gt;&lt;/a&gt;计算机网络&lt;/h1&gt;&lt;h2 id=&quot;1-为什么要对计算机网络进行分层？分层的原则？&quot;&gt;&lt;a href=&quot;#1-为什么要对计算机网络进行分层？分</summary>
      
    
    
    
    
    <category term="计算机网络" scheme="http://baiyi-ing.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>HTML学习总结</title>
    <link href="http://baiyi-ing.github.io/2022/05/15/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/HTML%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    <id>http://baiyi-ing.github.io/2022/05/15/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/HTML%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/</id>
    <published>2022-05-15T11:31:06.000Z</published>
    <updated>2022-05-18T09:41:28.835Z</updated>
    
    <content type="html"><![CDATA[<h2 id="入门基础知识"><a href="#入门基础知识" class="headerlink" title="入门基础知识"></a>入门基础知识</h2><h3 id="１．前端三大件"><a href="#１．前端三大件" class="headerlink" title="１．前端三大件"></a>１．前端三大件</h3><p>首先我们要知道<strong>HTML、CSS、Javascript</strong>三者并称为<strong>前端三大件</strong>，一个正常的网页可以</p><p><strong>通过HTML进行基本的框架构建，通过CSS进行页面美化和排版，通过JS来实现网页的功能</strong></p><h3 id="２．HTML简介"><a href="#２．HTML简介" class="headerlink" title="２．HTML简介"></a>２．HTML简介</h3><p>HTML的全称为<a href="https://baike.baidu.com/item/%E8%B6%85%E6%96%87%E6%9C%AC%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/6972570">超文本标记语言</a>，是一种<a href="https://baike.baidu.com/item/%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/5964436">标记语言</a>。它包括一系列<a href="https://baike.baidu.com/item/%E6%A0%87%E7%AD%BE/2440469">标签</a>．通过这些标签可以将网络上的<a href="https://baike.baidu.com/item/%E6%96%87%E6%A1%A3/1009768">文档</a>格式统一，使分散的<a href="https://baike.baidu.com/item/Internet/272794">Internet</a>资源连接为一个逻辑整体。HTML文本是由HTML命令组成的描述性<a href="https://baike.baidu.com/item/%E6%96%87%E6%9C%AC/5443630">文本</a>，HTML命令可以说明<a href="https://baike.baidu.com/item/%E6%96%87%E5%AD%97/612910">文字</a>，<a href="https://baike.baidu.com/item/%E5%9B%BE%E5%BD%A2/773307">图形</a>、<a href="https://baike.baidu.com/item/%E5%8A%A8%E7%94%BB/206564">动画</a>、<a href="https://baike.baidu.com/item/%E5%A3%B0%E9%9F%B3/33686">声音</a>、<a href="https://baike.baidu.com/item/%E8%A1%A8%E6%A0%BC/3371820">表格</a>、<a href="https://baike.baidu.com/item/%E9%93%BE%E6%8E%A5/2665501">链接</a>等。</p><p><a href="https://baike.baidu.com/item/%E8%B6%85%E6%96%87%E6%9C%AC/2832422">超文本</a>是一种组织信息的<a href="https://baike.baidu.com/item/%E6%96%B9%E5%BC%8F/3616191">方式</a>，它通过<a href="https://baike.baidu.com/item/%E8%B6%85%E7%BA%A7%E9%93%BE%E6%8E%A5/313121">超级链接</a>方法将文本中的文字、图表与其他<a href="https://baike.baidu.com/item/%E4%BF%A1%E6%81%AF%E5%AA%92%E4%BD%93/8400627">信息媒体</a>相关联。这些相互关联的信息媒体可能在同一文本中，也可能是其他文件，或是<a href="https://baike.baidu.com/item/%E5%9C%B0%E7%90%86%E4%BD%8D%E7%BD%AE/797988">地理位置</a>相距遥远的某台<a href="https://baike.baidu.com/item/%E8%AE%A1%E7%AE%97%E6%9C%BA/140338">计算机</a>上的文件。这种组织信息方式将分布在不同位置的信息资源用随机方式进行连接，为人们查找，<a href="https://baike.baidu.com/item/%E6%A3%80%E7%B4%A2/11003896">检索</a>信息提供方便。</p><h3 id="３．HTML版本须知"><a href="#３．HTML版本须知" class="headerlink" title="３．HTML版本须知"></a>３．HTML版本须知</h3><p>HTML历史上有如下版本： [5] </p><p>①HTML 1.0：在1993年6月作为互联网工程工作小组(IETF)工作草案发布。 [5] </p><p>②HTML 2.0：1995年1 1月作为RFC 1866发布，于2000年6月发布之后被宣布已经过时。 [5] </p><p>③HTML 3.2：1997年1月14日，W3C推荐标准。 [5] </p><p>④HTML 4.0：1997年12月18日，W3C推荐标准。 [5] </p><p>⑤HTML 4.01（微小改进）：1999年12月24日，W3C推荐标准。 [5] </p><p>⑥[HTML 5](<a href="https://baike.baidu.com/item/HTML">https://baike.baidu.com/item/HTML</a> 5&#x2F;8762673)：HTML5是公认的下一代Web语言，极大地提升了Web在富媒体、富内容和富应用等方面的能力，被喻为终将改变移动互联网的重要推手。Internet Explorer 8及以前的版本不支持。 [6] </p><h3 id="４．使用的工具"><a href="#４．使用的工具" class="headerlink" title="４．使用的工具"></a>４．使用的工具</h3><p><strong>使用Google Chrome浏览器来实现，使用vscode来编译</strong>，建议官网下载，下面是笔者的VScode百度网盘资源</p><p>链接: <a href="https://pan.baidu.com/s/1-UlhQVi0RkQNyPDp_aSsfw?pwd=igsg">https://pan.baidu.com/s/1-UlhQVi0RkQNyPDp_aSsfw?pwd=igsg</a> 提取码: igsg </p><p>其实一开始使用vscode写HTML还是细节满满的，这是笔者找的相对比较好的<a href="https://blog.csdn.net/qq_51604330/article/details/116567496">安装vscode后第一个HTML网页教程</a></p><h2 id="HTML入门"><a href="#HTML入门" class="headerlink" title="HTML入门"></a>HTML入门</h2><h3 id="一．基本框架"><a href="#一．基本框架" class="headerlink" title="一．基本框架"></a>一．基本框架</h3><p>如下图所示，这是<strong>极简化基本框架模板</strong>，由“<!DOCTYPE html>”<strong>说明文件类型</strong>，由用角括号包裹一对htlm，在这之中就是html编写主板。</p><p>两个head中间写htlm文件的网站资讯，如<strong>网页名字和网页编码格式等</strong>。</p><p>两个body中间写html文件的网站内容主，如<strong>图片，链接，文章等</strong></p><img src="https://s2.loli.net/2022/05/15/fumenPRQ2T89rhN.png" alt="image.png" style="zoom:150%;" /><h3 id="二．第一个网页"><a href="#二．第一个网页" class="headerlink" title="二．第一个网页"></a>二．第一个网页</h3><p>了解了基本框架后，让我们一起来编写第一个简单网页吧！加油！</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>page2<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是我们的第一个HTML网页哦！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/15/3CQZiHehRDM1T9Y.png" alt="image.png"></p><p><strong>笔者来提示注意事项并展示成果了哦！</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 注意事项 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 角括号里！--为注释标签哦！--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- head用来放网页的资讯 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- meta用来确定编码格式 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 可以不要p直接在body中写相关内容哦！--&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 可以下载相关插件后，直接使用alt+b浏览器阅览网页 --&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/15/Ch2ZBTg4yI6OatA.png" alt="image.png"></p><h3 id="三-基本标签"><a href="#三-基本标签" class="headerlink" title="三. 基本标签"></a>三. 基本标签</h3><p>由上文可知角括号里总包括一些标签字母，来实现各种不同的功能</p><p>由于实在是太多拉，这里笔者给大家找了一个相当不错的<a href="https://special.rhky.com/mobile/mooc/tocourse/214380988?t=1652865943244">《HTML标签》大全</a>哦，建议收藏。</p><p>下图是笔者自己写的个别标签使用图片哦！</p><p><img src="https://s2.loli.net/2022/05/15/oqF6gfOR8SVX451.png" alt="image.png"></p><p><strong>相关代码</strong></p><p>可以偷懒使用作者的代码进行简单修改（jpg、MP4文件需要自己本地的），但是还是建议自己敲一遍熟悉熟悉</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span> </span><br><span class="line">        <span class="comment">&lt;!-- head用来放网页的资讯 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- meta用来确定编码格式 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;周杰伦最帅,不愧是我喜欢的银，（对网页的描述）&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mata</span> <span class="attr">name</span>=<span class="string">&quot;author&quot;</span> <span class="attr">content</span>=<span class="string">&quot;周杰伦&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">mata</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mata</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;标签，周杰伦，html，自学&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--不同设备视口调试--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mate</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width = device-width,initial-scale=1.0&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>第一个html网页哦<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- body里面放内容 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 基本标签学习 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>第一篇文章<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>今天开始<span class="tag">&lt;<span class="name">i</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>入门<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>了呢<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">hr</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>第二篇文章<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>开心<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- html的链接&amp;图片 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://baiyi-ing.github.io/&quot;</span>&gt;</span>白依的博客<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;page2.html&quot;</span>&gt;</span>page2<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;HTML/page3.html&quot;</span>&gt;</span>page3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;1650390422890.jpg&quot;</span>&gt;</span>鸭鸭<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://sm.ms/image/y9aOnjLwukBxHZC&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://s2.loli.net/2022/05/14/y9aOnjLwukBxHZC.png&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;1650390422890.jpg&quot;</span> <span class="attr">width</span>=<span class="string">&quot;400&quot;</span> <span class="attr">height</span>=<span class="string">&quot;500&quot;</span>/&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!--在网页中加入影片 &amp; 嵌入YouTube影片--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;前奏.mp4&quot;</span> <span class="attr">controls</span> <span class="attr">width</span>=<span class="string">&quot;400&quot;</span>&gt;</span>一个本地视频<span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 列表 &amp; 表格 --&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">lo</span> <span class="attr">type</span>=<span class="string">&quot;A&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: red;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>ol是可以排序的哦<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>这就是相应效果哦<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>加入type可以改变存档情况<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>A表示用大写字母排序<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>a表示用小写字母排序<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>i表示用小写罗马字排序<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>I表示用大写写罗马字排序<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">lo</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">&quot;400&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>日期<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>数学<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>英文<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>2.8<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>90<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>90<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 容器div &amp; 容器span --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color: blueviolet;&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--在学习css的时候如果我们善用容器div后期会方便美化--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">&quot;400&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>日期<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>数学<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>英文<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>2.8<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>90<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>90<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span> div <span class="tag">&lt;/<span class="name">dic</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span> div会换行 <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span> span <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">spam</span>&gt;</span> span不会换行 <span class="tag">&lt;/<span class="name">spam</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- HTML输入文本、form表单 --&gt;</span></span><br><span class="line">        表单<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">        账号：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入账号&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入密码&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;keyword&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;搜索&quot;</span>/&gt;</span>   </span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;date&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;range&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">textarea</span>&gt;</span>你好鸭，可以在这里输入哦！<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意：图片img、MP4等使用前要提前保存到所在文件中才能使用哦</strong></p><p><img src="https://s2.loli.net/2022/05/15/DiIs8jkF2tfCgET.png" alt="image.png"></p><h3 id="四-子页跳转"><a href="#四-子页跳转" class="headerlink" title="四. 子页跳转"></a>四. 子页跳转</h3><p><strong>建立Page2和Page3作为主页index的子页</strong>,不同于其它网页链接，这两个子页都是总文件中的文件，而且page3还<strong>不是直接在总文件夹中的文件</strong>。如下图是两个不同子页<strong>跳转到首页</strong>（index.html）的写法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- head用来放网页的资讯 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- meta用来确定编码格式 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Page2<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index.html&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Page3<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span>&gt;</span>Page3<span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--page3和主页并不是一个资料夹，所以要../返回上一个文件夹--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;../index.html&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/05/15/OiSQYK4E7vFCuxe.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;入门基础知识&quot;&gt;&lt;a href=&quot;#入门基础知识&quot; class=&quot;headerlink&quot; title=&quot;入门基础知识&quot;&gt;&lt;/a&gt;入门基础知识&lt;/h2&gt;&lt;h3 id=&quot;１．前端三大件&quot;&gt;&lt;a href=&quot;#１．前端三大件&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    
    <category term="前端" scheme="http://baiyi-ing.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
    <category term="HTML" scheme="http://baiyi-ing.github.io/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>前端规划</title>
    <link href="http://baiyi-ing.github.io/2022/05/12/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF%E8%A7%84%E5%88%92/"/>
    <id>http://baiyi-ing.github.io/2022/05/12/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/%E5%89%8D%E7%AB%AF%E8%A7%84%E5%88%92/</id>
    <published>2022-05-12T12:38:52.000Z</published>
    <updated>2022-05-12T14:01:39.736Z</updated>
    
    <content type="html"><![CDATA[<p><strong>此前端规划只是初版，后续会找朋友帮忙提供相应改进意见，如果后期笔者只是想要入门学习的话，笔者最多会规划实行前三阶段，等确定好大方向后，笔者会选择是否深入话学习</strong></p><p><strong>第一阶段</strong></p><p>入门很显然要从<strong>HTML和css</strong>开始打基础，后学习<strong>js</strong>相关技术，然后学习一个入门框架**<a href="https://baike.baidu.com/item/jQuery/5385065?fr=aladdin">jQuery</a>**</p><p><img src="https://s2.loli.net/2022/05/12/MKBSlJVfULuZamx.png" alt="image.png"></p><p><strong>第二阶段</strong></p><p>主要是HTML5的学习和移动web开发</p><p><img src="https://s2.loli.net/2022/05/12/f8NQGeOXb7ycYW3.png" alt="image.png"></p><p><strong>第三阶段</strong></p><p>主要是HTTP的学习和<strong>AJAX</strong>编程学习</p><p><img src="https://s2.loli.net/2022/05/12/8lFBpHagU7zvwhs.png" alt="image.png"></p><p><strong>第四阶段</strong></p><p><img src="https://s2.loli.net/2022/05/12/HXZpotwi69gWCbK.png" alt="BF_M8K51__CF@ICU_O_B8QH.png"></p><p><strong>第五阶段</strong></p><p><img src="https://s2.loli.net/2022/05/12/efauTmhJ1F4iLc2.png" alt="image.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;此前端规划只是初版，后续会找朋友帮忙提供相应改进意见，如果后期笔者只是想要入门学习的话，笔者最多会规划实行前三阶段，等确定好大方向后，笔者会选择是否深入话学习&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第一阶段&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;入门很显</summary>
      
    
    
    
    
    <category term="前端" scheme="http://baiyi-ing.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>ACwing4417-选区间</title>
    <link href="http://baiyi-ing.github.io/2022/05/07/ACwing/ACwing4417-%E9%80%89%E5%8C%BA%E9%97%B4/"/>
    <id>http://baiyi-ing.github.io/2022/05/07/ACwing/ACwing4417-%E9%80%89%E5%8C%BA%E9%97%B4/</id>
    <published>2022-05-07T13:03:23.000Z</published>
    <updated>2022-05-12T11:19:59.862Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-题目描述"><a href="#一-题目描述" class="headerlink" title="一. 题目描述"></a>一. 题目描述</h1><p>给定 n 个一类区间 (l1,i,r1,i)。</p><p>给定 m 个二类区间 (l2,i,r2,i)。</p><p>请你从一类区间中挑选一个区间，从二类区间中挑选一个区间。</p><p>要求，选出的两个区间之间的距离尽可能大。</p><p>请你输出最大可能距离。</p><p>关于两区间 (l1,r1)和 (l2,r2) 之间的距离，我们规定：</p><ul><li>如果两区间存在交集，则区间距离为 0。</li><li>如果两区间不存在交集，则区间距离为 |i−j| 的最小可能值，其中 l1≤i≤r1,l2≤j≤r2。</li></ul><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含一个整数 n。</p><p>接下来 n 行，每行包含两个整数 l1,i,r1,i。</p><p>再一行包含一个整数 m。</p><p>最后 mm 行，每行包含两个整数 l2,i,r2,il2,i,r2,i。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>一个整数，表示最大可能距离。</p><h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>前三个测试点满足 1≤n,m≤10。<br>所有测试点满足 1≤n,m≤2×105，1≤l1,i≤r1,i≤1091≤l1，1≤l2,i≤r2,i≤109。</p><h4 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">1 5</span><br><span class="line">2 6</span><br><span class="line">2 3</span><br><span class="line">2</span><br><span class="line">2 4</span><br><span class="line">6 8</span><br></pre></td></tr></table></figure><h4 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h4 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">1 5</span><br><span class="line">2 6</span><br><span class="line">3 7</span><br><span class="line">2</span><br><span class="line">2 4</span><br><span class="line">1 4</span><br></pre></td></tr></table></figure><h4 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><h1 id="二-笔者解析"><a href="#二-笔者解析" class="headerlink" title="二. 笔者解析"></a>二. 笔者解析</h1><p>本题为经典的区间集合判断题，一般区间判断题我们优先考虑选用<strong>贪心算法</strong>来解题，但由于贪心算法比较玄学，通常为题目中隐藏的数学常识题，所以我们要结合具体问题来分析原题中的隐藏数学原理</p><h1 id="三-笔者代码"><a href="#三-笔者代码" class="headerlink" title="三. 笔者代码"></a>三. 笔者代码</h1><ol><li>c++复杂代码</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line">PII q[N],q2[N];</span><br><span class="line">PII q1[N],q3[N];</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;q[i].y, &amp;q[i].x);</span><br><span class="line">        q1[i].x=q[i].y,q1[i].y=q[i].x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(q+<span class="number">1</span>,q+n+<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">sort</span>(q1+<span class="number">1</span>,q1+n+<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;q2[i].x, &amp;q2[i].y);</span><br><span class="line">        q3[i].x=q2[i].y,q3[i].y=q2[i].x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(q2+<span class="number">1</span>,q2+m+<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">sort</span>(q3+<span class="number">1</span>,q3+m+<span class="number">1</span>);</span><br><span class="line">    <span class="type">int</span> a=<span class="built_in">max</span>(<span class="number">0</span>,q2[m].x-q[<span class="number">1</span>].x);</span><br><span class="line">    <span class="type">int</span> b=<span class="built_in">max</span>(<span class="number">0</span>,q1[n].x-q3[<span class="number">1</span>].x);</span><br><span class="line">    cout&lt;&lt;<span class="built_in">max</span>(a,b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>c++贪心常识简化代码</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="type">int</span> max1=<span class="number">0</span>,min1=<span class="number">1e9</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a,b;</span><br><span class="line">        cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        max1=<span class="built_in">max</span>(max1,a);</span><br><span class="line">        min1=<span class="built_in">min</span>(min1,b);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">     <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">    <span class="type">int</span> max2=<span class="number">0</span>,min2=<span class="number">1e9</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a,b;</span><br><span class="line">        cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        max2=<span class="built_in">max</span>(max2,a);</span><br><span class="line">        min2=<span class="built_in">min</span>(min2,b);</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">max</span>(<span class="number">0</span>,<span class="built_in">max</span>(max2-min1,max1-min2))&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li>java贪心常识简化代码</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">max</span> <span class="operator">=</span> Integer.MIN_VALUE;</span><br><span class="line">        <span class="type">int</span> <span class="variable">min</span> <span class="operator">=</span> Integer.MAX_VALUE;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="comment">//找到n区间的最大左端点和最小右端点</span></span><br><span class="line">            max = Math.max(scanner.nextInt(),max);</span><br><span class="line">            min = Math.min(scanner.nextInt(),min);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">min1</span> <span class="operator">=</span> Integer.MAX_VALUE;</span><br><span class="line">        <span class="type">int</span> <span class="variable">max1</span> <span class="operator">=</span> Integer.MIN_VALUE;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="comment">//找到m区间的最大左端点和最小右端点</span></span><br><span class="line">            max1 = Math.max(scanner.nextInt(),max1);</span><br><span class="line">            min1 = Math.min(scanner.nextInt(),min1);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//最大的左端点减最小的右端点，则为最大不相交区间，本题分两种情况，n区间于m区间的位置不确定</span></span><br><span class="line">        System.out.println(Math.max(<span class="number">0</span>,Math.max(max - min1,max1-min)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="四-本题解法"><a href="#四-本题解法" class="headerlink" title="四. 本题解法"></a>四. 本题解法</h1><p>我们可以发现：</p><p><strong>两段不相交的区间中间的间隔 &#x3D; 右边区间的最小值 — 左边区间的最大值</strong></p><p>由此可以得出结论，左边最大值越小或者在右边最小值越大，间隔的范围就越大。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一-题目描述&quot;&gt;&lt;a href=&quot;#一-题目描述&quot; class=&quot;headerlink&quot; title=&quot;一. 题目描述&quot;&gt;&lt;/a&gt;一. 题目描述&lt;/h1&gt;&lt;p&gt;给定 n 个一类区间 (l1,i,r1,i)。&lt;/p&gt;
&lt;p&gt;给定 m 个二类区间 (l2,i,r2,i</summary>
      
    
    
    
    
    <category term="贪心算法" scheme="http://baiyi-ing.github.io/tags/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>ACwing4394-最长连续子序列</title>
    <link href="http://baiyi-ing.github.io/2022/04/03/ACwing/ACwing4394-%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%AD%90%E5%BA%8F%E5%88%97/"/>
    <id>http://baiyi-ing.github.io/2022/04/03/ACwing/ACwing4394-%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%AD%90%E5%BA%8F%E5%88%97/</id>
    <published>2022-04-03T08:03:14.000Z</published>
    <updated>2022-04-04T17:00:11.757Z</updated>
    
    <content type="html"><![CDATA[<h1 id="详细题目"><a href="#详细题目" class="headerlink" title="详细题目"></a>详细题目</h1><p><a href="https://www.acwing.com/problem/content/4397/">ACwing4394最长连续子序列</a></p><p>给定一个长度为 n 的整数序列 a1,a2,…</p><p>请你找出它的一个最长<strong>连续</strong>子序列，要求该子序列包含不超过 k 个不同的值。</p><p><strong>输入格式</strong></p><p>第一行包含两个整数 n,k</p><p>第二行包含 nn 个整数 a1,a2,…</p><p><strong>输出格式</strong></p><p>共一行，两个整数 l,r 表示你找出的满足条件的最长连续子序列的最左端元素下标和最右端元素下标。</p><p>如果答案不唯一，输出任意合理方案均可。</p><p><strong>数据范围</strong></p><p>前 66 个测试点满足 1≤k≤n≤10<br>所有测试点满足 1≤k≤n≤5×10^5, 0≤ai≤10^6</p><p><strong>输入样例1：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5 5</span><br><span class="line">1 2 3 4 5</span><br></pre></td></tr></table></figure><p><strong>输出样例1：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 5</span><br></pre></td></tr></table></figure><p><strong>输入样例2：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">9 3</span><br><span class="line">6 5 1 2 3 2 1 4 5</span><br></pre></td></tr></table></figure><p><strong>输出样例2：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 7</span><br></pre></td></tr></table></figure><p><strong>输入样例3：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3 1</span><br><span class="line">1 2 3</span><br></pre></td></tr></table></figure><p><strong>输出样例3：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 1</span><br></pre></td></tr></table></figure><h1 id="笔者解析"><a href="#笔者解析" class="headerlink" title="笔者解析"></a>笔者解析</h1><ol><li>看清题目意思，不同的数只要小于等于k个</li><li>连续不是指递增，不需要选取的数是者递增的</li><li>就是找k个不同的数，看他们如何组成相应的数</li></ol><h1 id="笔者代码"><a href="#笔者代码" class="headerlink" title="笔者代码"></a>笔者代码</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> scanner.nextInt();</span><br><span class="line">        <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[n+<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断该数有没有出现过</span></span><br><span class="line">        <span class="type">int</span>[] cont = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1000010</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            arr[i] = scanner.nextInt();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//双指针判断l和r的下标</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">r</span> <span class="operator">=</span> <span class="number">1</span>,l=<span class="number">1</span>,max = <span class="number">0</span>,num = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">start</span> <span class="operator">=</span> <span class="number">1</span>,end = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (r &lt;= n) &#123;</span><br><span class="line">            <span class="keyword">if</span>(num&gt;k)&#123;</span><br><span class="line">                <span class="comment">//当窗口中已经有k个数的时候</span></span><br><span class="line">                <span class="comment">//当左端数只出现过一次后，直接去掉左端此数，继续向下一步判断</span></span><br><span class="line">                <span class="keyword">if</span>(cont[arr[l]] == <span class="number">1</span>)&#123;num--;&#125;</span><br><span class="line">                cont[arr[l]]--;</span><br><span class="line">                l++;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//若没有满足有k个数</span></span><br><span class="line">                <span class="keyword">if</span>(cont[arr[r]]==<span class="number">0</span>)&#123;num++;&#125;</span><br><span class="line">                cont[arr[r]]++;</span><br><span class="line">                <span class="keyword">if</span>(num&lt;=k)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(max&lt;r-l)&#123;</span><br><span class="line">                        max = r-l;</span><br><span class="line">                        start = l;</span><br><span class="line">                        end = r;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                r++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(start+<span class="string">&quot; &quot;</span>+end);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;详细题目&quot;&gt;&lt;a href=&quot;#详细题目&quot; class=&quot;headerlink&quot; title=&quot;详细题目&quot;&gt;&lt;/a&gt;详细题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.acwing.com/problem/content/4397/&quot;&gt;ACwing4</summary>
      
    
    
    
    
    <category term="双指针" scheme="http://baiyi-ing.github.io/tags/%E5%8F%8C%E6%8C%87%E9%92%88/"/>
    
  </entry>
  
  <entry>
    <title>POJ1011-Sticks</title>
    <link href="http://baiyi-ing.github.io/2022/04/01/POJ/POJ1011-Sticks/"/>
    <id>http://baiyi-ing.github.io/2022/04/01/POJ/POJ1011-Sticks/</id>
    <published>2022-03-31T20:03:34.000Z</published>
    <updated>2022-04-01T00:54:33.877Z</updated>
    
    <content type="html"><![CDATA[<p><strong>来源</strong></p><p><a href="https://www.acwing.com/problem/content/description/169/">ACwing167-木棒</a></p><p><a href="http://poj.org/problem?id=1011">POJ1011-Sticks</a></p><h1 id="题目简介"><a href="#题目简介" class="headerlink" title="题目简介"></a>题目简介</h1><p>本题被称为是剪枝神题之一，因为剪枝角度多达5种，且难以想象。常规的深搜，普通剪枝无法完成此题很有可能会导致超时。</p><h1 id="笔者解析"><a href="#笔者解析" class="headerlink" title="笔者解析"></a>笔者解析</h1><p>剪枝五种方法列举</p><hr><ol><li>从大到小排列数组（我们优先使用较长的短木棒，这样可以避免出现类似10&#x3D;2+3+5，及明明可以用一根却用了三根短木棒的情况）</li><li>木棒内部编号递增，帮助递归下标管理</li><li>在爆搜过程中，如果任意大木棒的<strong>第一个短木棍</strong>在进行了DFS爆搜后，显示这个短木棒<strong>不能匹配成指定长度len</strong>，但每条短木棍是一定要用的，所以只能说明这个len不满足题意，返回false</li><li>在爆搜过程中，如果任意大木棒的加了<strong>最后一块需要的短木</strong>棒在进行了DFS爆搜后，<strong>虽然当前小木棒加上后可以匹配一个完整的大木棒</strong>，但显示不能匹配，说明在接下来的爆搜过程中有<strong>则后面至少有一根大木棍不能用短木棒匹配成len</strong>，所以当前len依旧不满足题意，返回false</li><li>不能匹配后，则跳过所以相等的木棍长度，因为一样的长度同样通不过匹配</li></ol><h1 id="笔者代码"><a href="#笔者代码" class="headerlink" title="笔者代码"></a>笔者代码</h1><p><strong>java代码</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span> n,sum = <span class="number">0</span>,len;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">int</span>[] arr,visit;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>)&#123;</span><br><span class="line">            <span class="comment">//输入木棍个数，当n为0时结束</span></span><br><span class="line">            n = scanner.nextInt();</span><br><span class="line">            <span class="keyword">if</span>(n == <span class="number">0</span>)&#123;<span class="keyword">break</span>;&#125;</span><br><span class="line">            arr = <span class="keyword">new</span> <span class="title class_">int</span>[n];</span><br><span class="line">            visit = <span class="keyword">new</span> <span class="title class_">int</span>[n];</span><br><span class="line">            <span class="type">int</span> m;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">                m = scanner.nextInt();</span><br><span class="line">                <span class="comment">//长度不大于50if(m&gt;50)&#123;continue;&#125;</span></span><br><span class="line">                arr[i] = m;</span><br><span class="line">                <span class="comment">//计算总和</span></span><br><span class="line">                sum+=arr[i];</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//递增排列短木棍</span></span><br><span class="line">            Arrays.sort(arr);</span><br><span class="line">            <span class="comment">//二分递减排列短木棍</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">0</span>,r=n-<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(l&lt;r)&#123;</span><br><span class="line">                arr[l] = arr[l]+arr[r];</span><br><span class="line">                arr[r] = arr[l] - arr[r];</span><br><span class="line">                arr[l] = arr[l] - arr[r];</span><br><span class="line">                l++;</span><br><span class="line">                r--;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//逐个排列可能性,从最长的木棍长度开始</span></span><br><span class="line">            <span class="keyword">for</span> (len = arr[<span class="number">0</span>];len &lt;= sum/<span class="number">2</span>; len++) &#123;</span><br><span class="line">                <span class="comment">//当sum/len为整数时，说明有可能被拼凑出来,使用DFS判定</span></span><br><span class="line">                <span class="keyword">if</span>(sum%len == <span class="number">0</span>&amp;&amp;DFS(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>)==<span class="literal">true</span>)&#123;</span><br><span class="line">                    System.out.println(len);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(len&gt;sum/<span class="number">2</span>)&#123;</span><br><span class="line">                <span class="comment">//只有一根木棍的情况下，最小长度为sum</span></span><br><span class="line">                System.out.println(sum);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            sum = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">DFS</span><span class="params">(<span class="type">int</span> lon,<span class="type">int</span> index,<span class="type">int</span> num)</span>&#123;<span class="comment">//分别表示：当前木大棒长度，当前短木棒下标，当前大木棒个数</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//当大木棒个数乘当前目测长度等于总长时，返回ture</span></span><br><span class="line">        <span class="keyword">if</span>(num * len == sum)&#123;<span class="keyword">return</span> <span class="literal">true</span>;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//当当前木棒长度为预测大棒长度时，说明已经找到一个木棒了,DFS寻找下一个木棒</span></span><br><span class="line">        <span class="keyword">if</span>(lon == len)&#123;<span class="keyword">return</span> DFS(<span class="number">0</span>,<span class="number">0</span>,num+<span class="number">1</span>);&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> index; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="comment">//若当前的小木棍已经被用过,或当遍历的小木棍加上当前的木棍长度后大于len，则跳过继续</span></span><br><span class="line">            <span class="keyword">if</span>(visit[i] == <span class="number">0</span>&amp;&amp;lon+arr[i]&lt;=len)&#123;</span><br><span class="line"></span><br><span class="line">                visit[i] = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(DFS(lon+arr[i],i+<span class="number">1</span>,num))&#123;<span class="keyword">return</span> <span class="literal">true</span>;&#125;</span><br><span class="line">                visit[i] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//如果当前是要放入的第一根短木棒，就放入出错出现问题，则此len无法满足条件，返回false</span></span><br><span class="line">                <span class="comment">//说明在前面一轮的DFS中，没有短木棒能和这个初始短木棒组成长度为len的大木棒，但这个木棒是不能跳过的,我迟早要用这个长度的短木棒组成木棒的</span></span><br><span class="line">                <span class="comment">//因为就算跳过，在后面也要使用他和其它木棒组合，所以认定这个len不能被满足</span></span><br><span class="line">                <span class="keyword">if</span>(lon == <span class="number">0</span>)&#123;<span class="keyword">return</span> <span class="literal">false</span>;&#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//如果是放入最后一节短木棒就放入出错，则此len无法满足条件，返回false</span></span><br><span class="line">                <span class="comment">//当发现前面的DFS并没有让lon+arr[i]=len这一看似可以通过的数据通过</span></span><br><span class="line">                <span class="comment">// 说明当前这一根大木棒虽然能凑成，但后面总有一根木棒他凑不出来</span></span><br><span class="line">                <span class="keyword">if</span>(lon+arr[i] == len)&#123;<span class="keyword">return</span> <span class="literal">false</span>;&#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//跳过所有相等的木棍,因为当前的木棒已经失败了，相同的长度同样会失败</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i+<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">while</span> (j&lt; n &amp;&amp; arr[i] == arr[j])&#123;j++;&#125;</span><br><span class="line">                i = j-<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//若到了最后一个要拼凑的小木棍无法找到，则这种方法不合法</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>c++代码</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">70</span>;</span><br><span class="line"><span class="type">int</span> w[N];</span><br><span class="line"><span class="type">int</span> len,n,sum;</span><br><span class="line"><span class="type">bool</span> st[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> s,<span class="type">int</span> start)</span><span class="comment">//u表示多少个大木棒，s表示当前大木棒的长度,start表示木棒的下标</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u * len == sum) <span class="comment">//当前大木棒个数乘大木棒长度等于所有木棒总和，代表已经找到答案了，返回true</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(s == len) <span class="comment">//已经找到一个小木棒了，小木棒个数加1，递归搜索下一个小木棒</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">dfs</span>(u + <span class="number">1</span>, <span class="number">0</span> ,<span class="number">0</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = start; i &lt; n; i ++ )<span class="comment">//答案是个组合数，不是排列数</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!st[i] &amp;&amp; s + w[i] &lt;= len)<span class="comment">//可行性剪枝，当前木棒之前没被用过，或者当前大木棒总长度加上小木棒长度小于等于len</span></span><br><span class="line">        &#123;</span><br><span class="line">            st[i] = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">dfs</span>(u, s + w[i], i + <span class="number">1</span>))<span class="comment">//判断当前木棒是否能放下</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;<span class="comment">//当前木棒能放到当前位置</span></span><br><span class="line">            st[i] = <span class="literal">false</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//如果程序运行到这，代表当前小木棒不能放到这个位置</span></span><br><span class="line">            <span class="keyword">if</span>(s == <span class="number">0</span>) <span class="comment">//代表当前木棒为大木棒的第一个失败</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span>(s + w[i] == len)<span class="comment">//放到最后一个位置也失败了</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            <span class="type">int</span> j = i + <span class="number">1</span>;<span class="comment">//如果i失败了,那么长度跟i一样的棍子也一定失败</span></span><br><span class="line">            <span class="keyword">while</span>(j &lt; n &amp;&amp; w[i] == w[j]) j++;</span><br><span class="line">            i = j - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;<span class="comment">//枚举完了还没有成功,就返回失败</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(cin&gt;&gt;n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            cin&gt;&gt;w[i];</span><br><span class="line">            sum+=w[i];</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">sort</span>(w,w+n);</span><br><span class="line">        <span class="built_in">reverse</span>(w,w+n);<span class="comment">//从大到小排序，优化搜索顺序</span></span><br><span class="line">        </span><br><span class="line">        len = w[<span class="number">0</span>];<span class="comment">//从最大的那个木棒开始，因为不可能有一个大木棒比一个小木棒还小</span></span><br><span class="line">        <span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">while</span>(len&lt;=sum/<span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(sum % len != <span class="number">0</span>)<span class="comment">//可行性剪枝，答案肯定是总和的约数</span></span><br><span class="line">            &#123;</span><br><span class="line">                len++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">dfs</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">memset</span>(st, <span class="literal">false</span>, <span class="keyword">sizeof</span> st);</span><br><span class="line">                cout &lt;&lt; len &lt;&lt;endl;</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            len++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag)<span class="comment">//还没找到答案，所以答案只能是所有木棒长度总和</span></span><br><span class="line">            cout &lt;&lt; sum &lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;来源&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.acwing.com/problem/content/description/169/&quot;&gt;ACwing167-木棒&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://poj.</summary>
      
    
    
    
    
    <category term="深度优先搜索" scheme="http://baiyi-ing.github.io/tags/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/"/>
    
    <category term="剪枝" scheme="http://baiyi-ing.github.io/tags/%E5%89%AA%E6%9E%9D/"/>
    
  </entry>
  
  <entry>
    <title>hexo版本踩坑大赏</title>
    <link href="http://baiyi-ing.github.io/2022/03/31/hexo%E7%89%88%E6%9C%AC%E8%B8%A9%E5%9D%91%E5%A4%A7%E8%B5%8F/"/>
    <id>http://baiyi-ing.github.io/2022/03/31/hexo%E7%89%88%E6%9C%AC%E8%B8%A9%E5%9D%91%E5%A4%A7%E8%B5%8F/</id>
    <published>2022-03-31T05:48:23.000Z</published>
    <updated>2022-04-04T17:00:29.123Z</updated>
    
    <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h1 id="报错大赏"><a href="#报错大赏" class="headerlink" title="报错大赏"></a>报错大赏</h1><p><strong>FATAL YAMLException: Specified list of YAML types (or a single Type object) contains a non-Type object.</strong></p><p><img src="https://s2.loli.net/2022/03/29/OpZdiFMIQTzrJPW.png" alt="image.png"></p><p>然后笔者追根溯源发现是一个类型报错，笔者在想是不是因为自己在主题中添加更改了部分功能所导致的，然后再网上疯狂的翻找，发现并没有相关报错解析，后来加了一个大佬云集的群，他们说不是我的原因，<strong>是hexo与nodejs的版本配置原因</strong>，这一下打消了我的顾虑，结束了笔者的自我怀疑。</p><p>然后！笔者开始了<strong>不停换版本改路径，换版本改路径</strong>之旅</p><p>然后当版本换好了之后，笔者发现还是报了一样的错误！！！！</p><p>笔者继续了她的崩溃之旅┭┮﹏┭┮   ┭┮﹏┭┮   ┭┮﹏┭┮</p><p>然后她决定<strong>摆烂</strong>了！对的，你没有听错她<strong>摆烂</strong>了！<strong>摆烂</strong>了！</p><p>当然她的自我怀疑只可能是暂时的，她决定一切从0开始了</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><ol><li><p>找到合适版本</p><p>node使用的是16.14.2版本    （这个建议到官网下载）<img src="https://s2.loli.net/2022/03/31/FDxbBQGNusfV9ng.png" alt="image-20220331110831581"></p><p>笔者这里安装的hexo是5.4.1版本</p><p><img src="C:\Users\HP\AppData\Roaming\Typora\typora-user-images\image-20220331110507169.png" alt="image-20220331110507169"></p></li><li><p>迁移博客</p><p>为什么会有这一步呢？因为笔者决定开一个新的博客，后来发现我其实只要开一个新的博客文件，然后将以前的必要内容迁移过来就可以了，这个就是<a href="https://www.cnblogs.com/iHeling/p/14095937.html">最终解决方案</a>。</p><p>但是会有一个问题，你会发现hexo d指令无法使用，这个时候你要想办法找到自己曾经的.ssh文件，复制粘贴里面的内容到上传密钥GitHub中</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;/h1&gt;&lt;h1 id=&quot;报错大赏&quot;&gt;&lt;a href=&quot;#报错大赏&quot; class=&quot;headerlink&quot; title=&quot;报错大赏&quot;&gt;&lt;/a&gt;报错大赏&lt;/h1&gt;&lt;p&gt;&lt;st</summary>
      
    
    
    
    
    <category term="hexo" scheme="http://baiyi-ing.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
